<?xml version="1.0"?>
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="GLib" version="2.0"/>
namespace Gio
{
  <interface name="Action" glib:type-name="GAction" glib:get-type="g_action_get_type" glib:type-struct="ActionInterface">
    <method name="activate" c:identifier="g_action_activate">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="parameter" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="change_state" c:identifier="g_action_change_state">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_enabled" c:identifier="g_action_get_enabled">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_name" c:identifier="g_action_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_parameter_type" c:identifier="g_action_get_parameter_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
    </method>
    <method name="get_state" c:identifier="g_action_get_state">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </method>
    <method name="get_state_hint" c:identifier="g_action_get_state_hint">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </method>
    <method name="get_state_type" c:identifier="g_action_get_state_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
    </method>
    <property name="enabled" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="name" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="parameter-type" transfer-ownership="none">
      <type name="GLib.VariantType"/>
    </property>
    <property name="state" transfer-ownership="none">
      <type name="GLib.Variant"/>
    </property>
    <property name="state-type" transfer-ownership="none">
      <type name="GLib.VariantType"/>
    </property>
    <virtual-method name="activate" offset="65535" invoker="activate">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="parameter" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="change_state" offset="65535" invoker="change_state">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_enabled" offset="65535" invoker="get_enabled">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_name" offset="65535" invoker="get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_parameter_type" offset="65535" invoker="get_parameter_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_state" offset="65535" invoker="get_state">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_state_hint" offset="65535" invoker="get_state_hint">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_state_type" offset="65535" invoker="get_state_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
    </virtual-method>
  </interface>
struct ActionEntry
{
  <field name="name" writable="1">
    <type name="utf8"/>
  </field>
  <field name="activate">
    <callback name="activate">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="SimpleAction"/>
        </parameter>
        <parameter name="parameter" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="parameter_type" writable="1">
    <type name="utf8"/>
  </field>
  <field name="state" writable="1">
    <type name="utf8"/>
  </field>
  <field name="change_state">
    <callback name="change_state">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="SimpleAction"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="3">
      <type name="guint64"/>
    </array>
  </field>
};
  <interface name="ActionGroup" glib:type-name="GActionGroup" glib:get-type="g_action_group_get_type" glib:type-struct="ActionGroupInterface">
    <method name="action_added" c:identifier="g_action_group_action_added">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="action_enabled_changed" c:identifier="g_action_group_action_enabled_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="enabled" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="action_removed" c:identifier="g_action_group_action_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="action_state_changed" c:identifier="g_action_group_action_state_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="state" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="activate_action" c:identifier="g_action_group_activate_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameter" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="change_action_state" c:identifier="g_action_group_change_action_state">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_action_enabled" c:identifier="g_action_group_get_action_enabled">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_action_parameter_type" c:identifier="g_action_group_get_action_parameter_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_action_state" c:identifier="g_action_group_get_action_state">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_action_state_hint" c:identifier="g_action_group_get_action_state_hint">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_action_state_type" c:identifier="g_action_group_get_action_state_type">
      <return-value transfer-ownership="full">
        <type name="GLib.VariantType"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="has_action" c:identifier="g_action_group_has_action">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="list_actions" c:identifier="g_action_group_list_actions">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="query_action" c:identifier="g_action_group_query_action">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="enabled" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="gboolean"/>
        </parameter>
        <parameter name="parameter_type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="state_type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="state_hint" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="state" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <glib:signal name="action-added" when="CLEANUP" detailed="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="action-enabled-changed" when="CLEANUP" detailed="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="enabled" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="action-removed" when="CLEANUP" detailed="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="action-state-changed" when="CLEANUP" detailed="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="action_added" offset="65535" invoker="action_added">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="action_enabled_changed" offset="65535" invoker="action_enabled_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="enabled" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="action_removed" offset="65535" invoker="action_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="action_state_changed" offset="65535" invoker="action_state_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="state" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="activate_action" offset="65535" invoker="activate_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameter" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="change_action_state" offset="65535" invoker="change_action_state">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_action_enabled" offset="65535" invoker="get_action_enabled">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_action_parameter_type" offset="65535" invoker="get_action_parameter_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_action_state" offset="65535" invoker="get_action_state">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_action_state_hint" offset="65535" invoker="get_action_state_hint">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_action_state_type" offset="65535" invoker="get_action_state_type">
      <return-value transfer-ownership="full">
        <type name="GLib.VariantType"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="has_action" offset="65535" invoker="has_action">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="list_actions" offset="65535" invoker="list_actions">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </virtual-method>
    <virtual-method name="query_action" offset="65535" invoker="query_action">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="enabled" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="gboolean"/>
        </parameter>
        <parameter name="parameter_type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="state_type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="state_hint" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="state" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct ActionGroupInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="has_action">
    <callback name="has_action">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="list_actions">
    <callback name="list_actions">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_action_enabled">
    <callback name="get_action_enabled">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_action_parameter_type">
    <callback name="get_action_parameter_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_action_state_type">
    <callback name="get_action_state_type">
      <return-value transfer-ownership="full">
        <type name="GLib.VariantType"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_action_state_hint">
    <callback name="get_action_state_hint">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_action_state">
    <callback name="get_action_state">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="change_action_state">
    <callback name="change_action_state">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="activate_action">
    <callback name="activate_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameter" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="action_added">
    <callback name="action_added">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="action_removed">
    <callback name="action_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="action_enabled_changed">
    <callback name="action_enabled_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="enabled" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="action_state_changed">
    <callback name="action_state_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="state" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_action">
    <callback name="query_action">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="enabled" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="gboolean"/>
        </parameter>
        <parameter name="parameter_type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="state_type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="state_hint" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="state" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
struct ActionInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="get_name">
    <callback name="get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_parameter_type">
    <callback name="get_parameter_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_state_type">
    <callback name="get_state_type">
      <return-value transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_state_hint">
    <callback name="get_state_hint">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_enabled">
    <callback name="get_enabled">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_state">
    <callback name="get_state">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="change_state">
    <callback name="change_state">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="activate">
    <callback name="activate">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
        <parameter name="parameter" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <interface name="ActionMap" glib:type-name="GActionMap" glib:get-type="g_action_map_get_type" glib:type-struct="ActionMapInterface">
    <prerequisite name="ActionGroup"/>
    <method name="add_action" c:identifier="g_action_map_add_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </method>
    <method name="add_action_entries" c:identifier="g_action_map_add_action_entries">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="entries" transfer-ownership="none">
          <type name="ActionEntry"/>
        </parameter>
        <parameter name="n_entries" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_action" c:identifier="g_action_map_lookup_action">
      <return-value transfer-ownership="none">
        <type name="Action"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="remove_action" c:identifier="g_action_map_remove_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="add_action" offset="65535" invoker="add_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_action" offset="65535" invoker="lookup_action">
      <return-value transfer-ownership="none">
        <type name="Action"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="remove_action" offset="65535" invoker="remove_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct ActionMapInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="lookup_action">
    <callback name="lookup_action">
      <return-value transfer-ownership="none">
        <type name="Action"/>
      </return-value>
      <parameters>
        <parameter name="action_map" transfer-ownership="none">
          <type name="ActionMap"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="add_action">
    <callback name="add_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_map" transfer-ownership="none">
          <type name="ActionMap"/>
        </parameter>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="remove_action">
    <callback name="remove_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_map" transfer-ownership="none">
          <type name="ActionMap"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <interface name="AppInfo" glib:type-name="GAppInfo" glib:get-type="g_app_info_get_type" glib:type-struct="AppInfoIface">
    <function name="create_from_commandline" c:identifier="g_app_info_create_from_commandline" throws="1">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
      <parameters>
        <parameter name="commandline" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="application_name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="AppInfoCreateFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_all" c:identifier="g_app_info_get_all">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="AppInfo"/>
        </type>
      </return-value>
    </function>
    <function name="get_all_for_type" c:identifier="g_app_info_get_all_for_type">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="AppInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_default_for_type" c:identifier="g_app_info_get_default_for_type">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="must_support_uris" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_default_for_uri_scheme" c:identifier="g_app_info_get_default_for_uri_scheme">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
      <parameters>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_fallback_for_type" c:identifier="g_app_info_get_fallback_for_type">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="AppInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_recommended_for_type" c:identifier="g_app_info_get_recommended_for_type">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="AppInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <function name="launch_default_for_uri" c:identifier="g_app_info_launch_default_for_uri" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none" allow-none="1">
          <type name="AppLaunchContext"/>
        </parameter>
      </parameters>
    </function>
    <function name="reset_type_associations" c:identifier="g_app_info_reset_type_associations">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <method name="add_supports_type" c:identifier="g_app_info_add_supports_type" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="can_delete" c:identifier="g_app_info_can_delete">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="can_remove_supports_type" c:identifier="g_app_info_can_remove_supports_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="delete" c:identifier="g_app_info_delete">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="dup" c:identifier="g_app_info_dup">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
    </method>
    <method name="equal" c:identifier="g_app_info_equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo2" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_commandline" c:identifier="g_app_info_get_commandline">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_description" c:identifier="g_app_info_get_description">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_display_name" c:identifier="g_app_info_get_display_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_executable" c:identifier="g_app_info_get_executable">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_icon" c:identifier="g_app_info_get_icon">
      <return-value transfer-ownership="none">
        <type name="Icon"/>
      </return-value>
    </method>
    <method name="get_id" c:identifier="g_app_info_get_id">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_name" c:identifier="g_app_info_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="launch" c:identifier="g_app_info_launch" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none" allow-none="1">
          <type name="AppLaunchContext"/>
        </parameter>
      </parameters>
    </method>
    <method name="launch_uris" c:identifier="g_app_info_launch_uris" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uris" transfer-ownership="none">
          <type name="GLib.List">
            <type name="utf8"/>
          </type>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none" allow-none="1">
          <type name="AppLaunchContext"/>
        </parameter>
      </parameters>
    </method>
    <method name="remove_supports_type" c:identifier="g_app_info_remove_supports_type" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_as_default_for_extension" c:identifier="g_app_info_set_as_default_for_extension" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="extension" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_as_default_for_type" c:identifier="g_app_info_set_as_default_for_type" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_as_last_used_for_type" c:identifier="g_app_info_set_as_last_used_for_type" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="should_show" c:identifier="g_app_info_should_show">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="supports_files" c:identifier="g_app_info_supports_files">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="supports_uris" c:identifier="g_app_info_supports_uris">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <virtual-method name="add_supports_type" throws="1" offset="65535" invoker="add_supports_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="can_delete" offset="65535" invoker="can_delete">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_remove_supports_type" offset="65535" invoker="can_remove_supports_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="do_delete" offset="65535" invoker="delete">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="dup" offset="65535" invoker="dup">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
    </virtual-method>
    <virtual-method name="equal" offset="65535" invoker="equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo2" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_commandline" offset="65535" invoker="get_commandline">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_description" offset="65535" invoker="get_description">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_display_name" offset="65535" invoker="get_display_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_executable" offset="65535" invoker="get_executable">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_icon" offset="65535" invoker="get_icon">
      <return-value transfer-ownership="none">
        <type name="Icon"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_id" offset="65535" invoker="get_id">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_name" offset="65535" invoker="get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="launch" throws="1" offset="65535" invoker="launch">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none" allow-none="1">
          <type name="AppLaunchContext"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="launch_uris" throws="1" offset="65535" invoker="launch_uris">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uris" transfer-ownership="none">
          <type name="GLib.List">
            <type name="utf8"/>
          </type>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none" allow-none="1">
          <type name="AppLaunchContext"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="remove_supports_type" throws="1" offset="65535" invoker="remove_supports_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_as_default_for_extension" throws="1" offset="65535" invoker="set_as_default_for_extension">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="extension" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_as_default_for_type" throws="1" offset="65535" invoker="set_as_default_for_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_as_last_used_for_type" throws="1" offset="65535" invoker="set_as_last_used_for_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="should_show" offset="65535" invoker="should_show">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="supports_files" offset="65535" invoker="supports_files">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="supports_uris" offset="65535" invoker="supports_uris">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
  </interface>
  <bitfield name="AppInfoCreateFlags" glib:type-name="GAppInfoCreateFlags" glib:get-type="g_app_info_create_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_APP_INFO_CREATE_NONE"/>
    </member>
    <member name="needs_terminal" value="1">
      <attribute name="c:identifier" value="G_APP_INFO_CREATE_NEEDS_TERMINAL"/>
    </member>
    <member name="supports_uris" value="2">
      <attribute name="c:identifier" value="G_APP_INFO_CREATE_SUPPORTS_URIS"/>
    </member>
    <member name="supports_startup_notification" value="4">
      <attribute name="c:identifier" value="G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION"/>
    </member>
  </bitfield>
struct AppInfoIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="dup">
    <callback name="dup">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="equal">
    <callback name="equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo1" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="appinfo2" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_id">
    <callback name="get_id">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_name">
    <callback name="get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_description">
    <callback name="get_description">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_executable">
    <callback name="get_executable">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_icon">
    <callback name="get_icon">
      <return-value transfer-ownership="none">
        <type name="Icon"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="launch">
    <callback name="launch">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none" allow-none="1">
          <type name="AppLaunchContext"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="supports_uris">
    <callback name="supports_uris">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="supports_files">
    <callback name="supports_files">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="launch_uris">
    <callback name="launch_uris">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="uris" transfer-ownership="none">
          <type name="GLib.List">
            <type name="utf8"/>
          </type>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none" allow-none="1">
          <type name="AppLaunchContext"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="should_show">
    <callback name="should_show">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_as_default_for_type">
    <callback name="set_as_default_for_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_as_default_for_extension">
    <callback name="set_as_default_for_extension">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="extension" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="add_supports_type">
    <callback name="add_supports_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_remove_supports_type">
    <callback name="can_remove_supports_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="remove_supports_type">
    <callback name="remove_supports_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_delete">
    <callback name="can_delete">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="do_delete">
    <callback name="do_delete">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_commandline">
    <callback name="get_commandline">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_display_name">
    <callback name="get_display_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_as_last_used_for_type">
    <callback name="set_as_last_used_for_type">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="AppLaunchContext" parent="GObject.Object" glib:type-struct="AppLaunchContextClass" glib:type-name="GAppLaunchContext" glib:get-type="g_app_launch_context_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="AppLaunchContextPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_app_launch_context_new">
      <return-value transfer-ownership="full">
        <type name="AppLaunchContext"/>
      </return-value>
    </constructor>
    <method name="get_display" c:identifier="g_app_launch_context_get_display">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
      </parameters>
    </method>
    <method name="get_environment" c:identifier="g_app_launch_context_get_environment">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="get_startup_notify_id" c:identifier="g_app_launch_context_get_startup_notify_id">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
      </parameters>
    </method>
    <method name="launch_failed" c:identifier="g_app_launch_context_launch_failed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="startup_notify_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="setenv" c:identifier="g_app_launch_context_setenv">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="variable" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="unsetenv" c:identifier="g_app_launch_context_unsetenv">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="variable" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="get_display" offset="65535" invoker="get_display">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_startup_notify_id" offset="65535" invoker="get_startup_notify_id">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="launch_failed" offset="65535" invoker="launch_failed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="startup_notify_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct AppLaunchContextClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="get_display">
    <callback name="get_display">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <type name="AppLaunchContext"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_startup_notify_id">
    <callback name="get_startup_notify_id">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <type name="AppLaunchContext"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <type name="AppInfo"/>
        </parameter>
        <parameter name="files" transfer-ownership="none">
          <type name="GLib.List">
            <type name="File"/>
          </type>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="launch_failed">
    <callback name="launch_failed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <type name="AppLaunchContext"/>
        </parameter>
        <parameter name="startup_notify_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct AppLaunchContextPrivate
{
};
  <class name="Application" parent="GObject.Object" glib:type-struct="ApplicationClass" glib:type-name="GApplication" glib:get-type="g_application_get_type">
    <implements name="ActionGroup"/>
    <implements name="ActionMap"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="ApplicationPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_application_new">
      <return-value transfer-ownership="full">
        <type name="Application"/>
      </return-value>
      <parameters>
        <parameter name="application_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="ApplicationFlags"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="get_default" c:identifier="g_application_get_default">
      <return-value transfer-ownership="none">
        <type name="Application"/>
      </return-value>
    </function>
    <function name="id_is_valid" c:identifier="g_application_id_is_valid">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="application_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <method name="activate" c:identifier="g_application_activate">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="get_application_id" c:identifier="g_application_get_application_id">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_flags" c:identifier="g_application_get_flags">
      <return-value transfer-ownership="none">
        <type name="ApplicationFlags"/>
      </return-value>
    </method>
    <method name="get_inactivity_timeout" c:identifier="g_application_get_inactivity_timeout">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_is_registered" c:identifier="g_application_get_is_registered">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_remote" c:identifier="g_application_get_is_remote">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="hold" c:identifier="g_application_hold">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="open" c:identifier="g_application_open">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="files" transfer-ownership="none">
          <array length="1">
            <type name="File"/>
          </array>
        </parameter>
        <parameter name="n_files" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="hint" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="quit" c:identifier="g_application_quit">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="register" c:identifier="g_application_register" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="release" c:identifier="g_application_release">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="run" c:identifier="g_application_run">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="argc" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none" allow-none="1">
          <array length="0">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </method>
    <method name="set_action_group" c:identifier="g_application_set_action_group">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_group" transfer-ownership="none" allow-none="1">
          <type name="ActionGroup"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_application_id" c:identifier="g_application_set_application_id">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_default" c:identifier="g_application_set_default">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="set_flags" c:identifier="g_application_set_flags">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="ApplicationFlags"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_inactivity_timeout" c:identifier="g_application_set_inactivity_timeout">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="inactivity_timeout" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <property name="action-group" readable="0" writable="1" transfer-ownership="none">
      <type name="ActionGroup"/>
    </property>
    <property name="application-id" writable="1" construct="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="flags" writable="1" transfer-ownership="none">
      <type name="ApplicationFlags"/>
    </property>
    <property name="inactivity-timeout" writable="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="is-registered" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-remote" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <glib:signal name="activate" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="command-line" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="command_line" transfer-ownership="none">
          <type name="ApplicationCommandLine"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="open" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="files" transfer-ownership="none">
          <array length="1">
            <type name="File"/>
          </array>
        </parameter>
        <parameter name="n_files" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="hint" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="shutdown" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="startup" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <virtual-method name="activate" offset="65535" invoker="activate">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="add_platform_data" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="builder" transfer-ownership="none">
          <type name="GLib.VariantBuilder"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="after_emit" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="before_emit" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="command_line" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="command_line" transfer-ownership="none">
          <type name="ApplicationCommandLine"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="local_command_line" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="arguments" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="exit_status" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="open" offset="65535" invoker="open">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="files" transfer-ownership="none">
          <array length="1">
            <type name="File"/>
          </array>
        </parameter>
        <parameter name="n_files" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="hint" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="quit_mainloop" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="run_mainloop" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="shutdown" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="startup" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
  </class>
struct ApplicationClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="startup">
    <callback name="startup">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="activate">
    <callback name="activate">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="open">
    <callback name="open">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
        <parameter name="files" transfer-ownership="none">
          <array length="2">
            <type name="File"/>
          </array>
        </parameter>
        <parameter name="n_files" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="hint" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="command_line">
    <callback name="command_line">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
        <parameter name="command_line" transfer-ownership="none">
          <type name="ApplicationCommandLine"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="local_command_line">
    <callback name="local_command_line">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
        <parameter name="arguments" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="exit_status" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="before_emit">
    <callback name="before_emit">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="after_emit">
    <callback name="after_emit">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="add_platform_data">
    <callback name="add_platform_data">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
        <parameter name="builder" transfer-ownership="none">
          <type name="GLib.VariantBuilder"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="quit_mainloop">
    <callback name="quit_mainloop">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="run_mainloop">
    <callback name="run_mainloop">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="shutdown">
    <callback name="shutdown">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="application" transfer-ownership="none">
          <type name="Application"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="11">
      <type name="any"/>
    </array>
  </field>
};
  <class name="ApplicationCommandLine" parent="GObject.Object" glib:type-struct="ApplicationCommandLineClass" glib:type-name="GApplicationCommandLine" glib:get-type="g_application_command_line_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="ApplicationCommandLinePrivate"/>
    </field>
    <method name="get_arguments" c:identifier="g_application_command_line_get_arguments">
      <return-value transfer-ownership="full">
        <array length="0">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="argc" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_cwd" c:identifier="g_application_command_line_get_cwd">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_environ" c:identifier="g_application_command_line_get_environ">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="get_exit_status" c:identifier="g_application_command_line_get_exit_status">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="get_is_remote" c:identifier="g_application_command_line_get_is_remote">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_platform_data" c:identifier="g_application_command_line_get_platform_data">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </method>
    <method name="getenv" c:identifier="g_application_command_line_getenv">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_exit_status" c:identifier="g_application_command_line_set_exit_status">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="exit_status" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <property name="arguments" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="GLib.Variant"/>
    </property>
    <property name="is-remote" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="platform-data" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="GLib.Variant"/>
    </property>
    <virtual-method name="print_literal" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="printerr_literal" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct ApplicationCommandLineClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="print_literal">
    <callback name="print_literal">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cmdline" transfer-ownership="none">
          <type name="ApplicationCommandLine"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="printerr_literal">
    <callback name="printerr_literal">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cmdline" transfer-ownership="none">
          <type name="ApplicationCommandLine"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="12">
      <type name="any"/>
    </array>
  </field>
};
struct ApplicationCommandLinePrivate
{
};
  <bitfield name="ApplicationFlags" glib:type-name="GApplicationFlags" glib:get-type="g_application_flags_get_type">
    <member name="flags_none" value="0">
      <attribute name="c:identifier" value="G_APPLICATION_FLAGS_NONE"/>
    </member>
    <member name="is_service" value="1">
      <attribute name="c:identifier" value="G_APPLICATION_IS_SERVICE"/>
    </member>
    <member name="is_launcher" value="2">
      <attribute name="c:identifier" value="G_APPLICATION_IS_LAUNCHER"/>
    </member>
    <member name="handles_open" value="4">
      <attribute name="c:identifier" value="G_APPLICATION_HANDLES_OPEN"/>
    </member>
    <member name="handles_command_line" value="8">
      <attribute name="c:identifier" value="G_APPLICATION_HANDLES_COMMAND_LINE"/>
    </member>
    <member name="send_environment" value="16">
      <attribute name="c:identifier" value="G_APPLICATION_SEND_ENVIRONMENT"/>
    </member>
    <member name="non_unique" value="32">
      <attribute name="c:identifier" value="G_APPLICATION_NON_UNIQUE"/>
    </member>
  </bitfield>
struct ApplicationPrivate
{
};
  <bitfield name="AskPasswordFlags" glib:type-name="GAskPasswordFlags" glib:get-type="g_ask_password_flags_get_type">
    <member name="need_password" value="1">
      <attribute name="c:identifier" value="G_ASK_PASSWORD_NEED_PASSWORD"/>
    </member>
    <member name="need_username" value="2">
      <attribute name="c:identifier" value="G_ASK_PASSWORD_NEED_USERNAME"/>
    </member>
    <member name="need_domain" value="4">
      <attribute name="c:identifier" value="G_ASK_PASSWORD_NEED_DOMAIN"/>
    </member>
    <member name="saving_supported" value="8">
      <attribute name="c:identifier" value="G_ASK_PASSWORD_SAVING_SUPPORTED"/>
    </member>
    <member name="anonymous_supported" value="16">
      <attribute name="c:identifier" value="G_ASK_PASSWORD_ANONYMOUS_SUPPORTED"/>
    </member>
  </bitfield>
  <interface name="AsyncInitable" glib:type-name="GAsyncInitable" glib:get-type="g_async_initable_get_type" glib:type-struct="AsyncInitableIface">
    <function name="newv_async" c:identifier="g_async_initable_newv_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType"/>
        </parameter>
        <parameter name="n_parameters" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GObject.Parameter"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <method name="init_async" c:identifier="g_async_initable_init_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="init_finish" c:identifier="g_async_initable_init_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="new_finish" c:identifier="g_async_initable_new_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="GObject.Object"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="init_async" offset="65535" invoker="init_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="init_finish" throws="1" offset="65535" invoker="init_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct AsyncInitableIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="init_async">
    <callback name="init_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="initable" transfer-ownership="none">
          <type name="AsyncInitable"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="init_finish">
    <callback name="init_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="initable" transfer-ownership="none">
          <type name="AsyncInitable"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <callback name="AsyncReadyCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="source_object" transfer-ownership="none">
        <type name="GObject.Object"/>
      </parameter>
      <parameter name="res" transfer-ownership="none">
        <type name="AsyncResult"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <interface name="AsyncResult" glib:type-name="GAsyncResult" glib:get-type="g_async_result_get_type" glib:type-struct="AsyncResultIface">
    <method name="get_source_object" c:identifier="g_async_result_get_source_object">
      <return-value transfer-ownership="full">
        <type name="GObject.Object"/>
      </return-value>
    </method>
    <method name="get_user_data" c:identifier="g_async_result_get_user_data">
      <return-value transfer-ownership="full">
        <type name="any"/>
      </return-value>
    </method>
    <virtual-method name="get_source_object" offset="65535" invoker="get_source_object">
      <return-value transfer-ownership="full">
        <type name="GObject.Object"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_user_data" offset="65535" invoker="get_user_data">
      <return-value transfer-ownership="full">
        <type name="any"/>
      </return-value>
    </virtual-method>
  </interface>
struct AsyncResultIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="get_user_data">
    <callback name="get_user_data">
      <return-value transfer-ownership="full">
        <type name="any"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_source_object">
    <callback name="get_source_object">
      <return-value transfer-ownership="full">
        <type name="GObject.Object"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="BufferedInputStream" parent="FilterInputStream" glib:type-struct="BufferedInputStreamClass" glib:type-name="GBufferedInputStream" glib:get-type="g_buffered_input_stream_get_type">
    <field name="parent_instance">
      <type name="FilterInputStream"/>
    </field>
    <field name="priv">
      <type name="BufferedInputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_buffered_input_stream_new">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="base_stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_sized" c:identifier="g_buffered_input_stream_new_sized">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="base_stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="fill" c:identifier="g_buffered_input_stream_fill" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="fill_async" c:identifier="g_buffered_input_stream_fill_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="fill_finish" c:identifier="g_buffered_input_stream_fill_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_available" c:identifier="g_buffered_input_stream_get_available">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </method>
    <method name="get_buffer_size" c:identifier="g_buffered_input_stream_get_buffer_size">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </method>
    <method name="peek" c:identifier="g_buffered_input_stream_peek">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="peek_buffer" c:identifier="g_buffered_input_stream_peek_buffer">
      <return-value transfer-ownership="none">
        <array length="0">
          <type name="guint8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_byte" c:identifier="g_buffered_input_stream_read_byte" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_buffer_size" c:identifier="g_buffered_input_stream_set_buffer_size">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <property name="buffer-size" writable="1" construct="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <virtual-method name="fill" throws="1" offset="65535" invoker="fill">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="fill_async" offset="65535" invoker="fill_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="fill_finish" throws="1" offset="65535" invoker="fill_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct BufferedInputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="FilterInputStreamClass"/>
  </field>
  <field name="fill">
    <callback name="fill">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="BufferedInputStream"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="fill_async">
    <callback name="fill_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="BufferedInputStream"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="fill_finish">
    <callback name="fill_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="BufferedInputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct BufferedInputStreamPrivate
{
};
  <class name="BufferedOutputStream" parent="FilterOutputStream" glib:type-struct="BufferedOutputStreamClass" glib:type-name="GBufferedOutputStream" glib:get-type="g_buffered_output_stream_get_type">
    <field name="parent_instance">
      <type name="FilterOutputStream"/>
    </field>
    <field name="priv">
      <type name="BufferedOutputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_buffered_output_stream_new">
      <return-value transfer-ownership="full">
        <type name="OutputStream"/>
      </return-value>
      <parameters>
        <parameter name="base_stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_sized" c:identifier="g_buffered_output_stream_new_sized">
      <return-value transfer-ownership="full">
        <type name="OutputStream"/>
      </return-value>
      <parameters>
        <parameter name="base_stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_auto_grow" c:identifier="g_buffered_output_stream_get_auto_grow">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_buffer_size" c:identifier="g_buffered_output_stream_get_buffer_size">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </method>
    <method name="set_auto_grow" c:identifier="g_buffered_output_stream_set_auto_grow">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="auto_grow" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_buffer_size" c:identifier="g_buffered_output_stream_set_buffer_size">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <property name="auto-grow" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="buffer-size" writable="1" construct="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
  </class>
struct BufferedOutputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="FilterOutputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
};
struct BufferedOutputStreamPrivate
{
};
  <callback name="BusAcquiredCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <callback name="BusNameAcquiredCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <callback name="BusNameAppearedCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="name_owner" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="3">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <callback name="BusNameLostCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <bitfield name="BusNameOwnerFlags" glib:type-name="GBusNameOwnerFlags" glib:get-type="g_bus_name_owner_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_BUS_NAME_OWNER_FLAGS_NONE"/>
    </member>
    <member name="allow_replacement" value="1">
      <attribute name="c:identifier" value="G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT"/>
    </member>
    <member name="replace" value="2">
      <attribute name="c:identifier" value="G_BUS_NAME_OWNER_FLAGS_REPLACE"/>
    </member>
  </bitfield>
  <callback name="BusNameVanishedCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <bitfield name="BusNameWatcherFlags" glib:type-name="GBusNameWatcherFlags" glib:get-type="g_bus_name_watcher_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_BUS_NAME_WATCHER_FLAGS_NONE"/>
    </member>
    <member name="auto_start" value="1">
      <attribute name="c:identifier" value="G_BUS_NAME_WATCHER_FLAGS_AUTO_START"/>
    </member>
  </bitfield>
  <enumeration name="BusType" glib:type-name="GBusType" glib:get-type="g_bus_type_get_type">
    <member name="starter" value="-1">
      <attribute name="c:identifier" value="G_BUS_TYPE_STARTER"/>
    </member>
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_BUS_TYPE_NONE"/>
    </member>
    <member name="system" value="1">
      <attribute name="c:identifier" value="G_BUS_TYPE_SYSTEM"/>
    </member>
    <member name="session" value="2">
      <attribute name="c:identifier" value="G_BUS_TYPE_SESSION"/>
    </member>
  </enumeration>
  <class name="Cancellable" parent="GObject.Object" glib:type-struct="CancellableClass" glib:type-name="GCancellable" glib:get-type="g_cancellable_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="CancellablePrivate"/>
    </field>
    <constructor name="new" c:identifier="g_cancellable_new">
      <return-value transfer-ownership="full">
        <type name="Cancellable"/>
      </return-value>
    </constructor>
    <function name="get_current" c:identifier="g_cancellable_get_current">
      <return-value transfer-ownership="none">
        <type name="Cancellable"/>
      </return-value>
    </function>
    <method name="cancel" c:identifier="g_cancellable_cancel">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="connect" c:identifier="g_cancellable_connect">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
      <parameters>
        <parameter name="callback" transfer-ownership="none" scope="notified" closure="1" destroy="2">
          <type name="GObject.Callback"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="data_destroy_func" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </method>
    <method name="disconnect" c:identifier="g_cancellable_disconnect">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="handler_id" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_fd" c:identifier="g_cancellable_get_fd">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="is_cancelled" c:identifier="g_cancellable_is_cancelled">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="make_pollfd" c:identifier="g_cancellable_make_pollfd">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pollfd" transfer-ownership="none">
          <type name="GLib.PollFD"/>
        </parameter>
      </parameters>
    </method>
    <method name="pop_current" c:identifier="g_cancellable_pop_current">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="push_current" c:identifier="g_cancellable_push_current">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="release_fd" c:identifier="g_cancellable_release_fd">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="reset" c:identifier="g_cancellable_reset">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="set_error_if_cancelled" c:identifier="g_cancellable_set_error_if_cancelled" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <glib:signal name="cancelled" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <virtual-method name="cancelled" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
  </class>
struct CancellableClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="cancelled">
    <callback name="cancelled">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct CancellablePrivate
{
};
  <callback name="CancellableSourceFunc">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="1">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <class name="CharsetConverter" parent="GObject.Object" glib:type-struct="CharsetConverterClass" glib:type-name="GCharsetConverter" glib:get-type="g_charset_converter_get_type">
    <implements name="Converter"/>
    <implements name="Initable"/>
    <constructor name="new" c:identifier="g_charset_converter_new" throws="1">
      <return-value transfer-ownership="full">
        <type name="CharsetConverter"/>
      </return-value>
      <parameters>
        <parameter name="to_charset" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="from_charset" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_num_fallbacks" c:identifier="g_charset_converter_get_num_fallbacks">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_use_fallback" c:identifier="g_charset_converter_get_use_fallback">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="set_use_fallback" c:identifier="g_charset_converter_set_use_fallback">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="use_fallback" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <property name="from-charset" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="to-charset" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="use-fallback" writable="1" construct="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
  </class>
struct CharsetConverterClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
};
  <interface name="Converter" glib:type-name="GConverter" glib:get-type="g_converter_get_type" glib:type-struct="ConverterIface">
    <method name="convert" c:identifier="g_converter_convert" throws="1">
      <return-value transfer-ownership="none">
        <type name="ConverterResult"/>
      </return-value>
      <parameters>
        <parameter name="inbuf" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="inbuf_size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="outbuf" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="outbuf_size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="ConverterFlags"/>
        </parameter>
        <parameter name="bytes_read" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="bytes_written" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="reset" c:identifier="g_converter_reset">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <virtual-method name="convert" throws="1" offset="65535" invoker="convert">
      <return-value transfer-ownership="none">
        <type name="ConverterResult"/>
      </return-value>
      <parameters>
        <parameter name="inbuf" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="inbuf_size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="outbuf" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="outbuf_size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="ConverterFlags"/>
        </parameter>
        <parameter name="bytes_read" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="bytes_written" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="reset" offset="65535" invoker="reset">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
  </interface>
  <bitfield name="ConverterFlags" glib:type-name="GConverterFlags" glib:get-type="g_converter_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_CONVERTER_NO_FLAGS"/>
    </member>
    <member name="input_at_end" value="1">
      <attribute name="c:identifier" value="G_CONVERTER_INPUT_AT_END"/>
    </member>
    <member name="flush" value="2">
      <attribute name="c:identifier" value="G_CONVERTER_FLUSH"/>
    </member>
  </bitfield>
struct ConverterIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="convert">
    <callback name="convert">
      <return-value transfer-ownership="none">
        <type name="ConverterResult"/>
      </return-value>
      <parameters>
        <parameter name="converter" transfer-ownership="none">
          <type name="Converter"/>
        </parameter>
        <parameter name="inbuf" transfer-ownership="none">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="inbuf_size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="outbuf" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="outbuf_size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="ConverterFlags"/>
        </parameter>
        <parameter name="bytes_read" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="bytes_written" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="reset">
    <callback name="reset">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="converter" transfer-ownership="none">
          <type name="Converter"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="ConverterInputStream" parent="FilterInputStream" glib:type-struct="ConverterInputStreamClass" glib:type-name="GConverterInputStream" glib:get-type="g_converter_input_stream_get_type">
    <field name="parent_instance">
      <type name="FilterInputStream"/>
    </field>
    <field name="priv">
      <type name="ConverterInputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_converter_input_stream_new">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="base_stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="converter" transfer-ownership="none">
          <type name="Converter"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_converter" c:identifier="g_converter_input_stream_get_converter">
      <return-value transfer-ownership="none">
        <type name="Converter"/>
      </return-value>
    </method>
    <property name="converter" writable="1" construct-only="1" transfer-ownership="none">
      <type name="Converter"/>
    </property>
  </class>
struct ConverterInputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="FilterInputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct ConverterInputStreamPrivate
{
};
  <class name="ConverterOutputStream" parent="FilterOutputStream" glib:type-struct="ConverterOutputStreamClass" glib:type-name="GConverterOutputStream" glib:get-type="g_converter_output_stream_get_type">
    <field name="parent_instance">
      <type name="FilterOutputStream"/>
    </field>
    <field name="priv">
      <type name="ConverterOutputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_converter_output_stream_new">
      <return-value transfer-ownership="full">
        <type name="OutputStream"/>
      </return-value>
      <parameters>
        <parameter name="base_stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="converter" transfer-ownership="none">
          <type name="Converter"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_converter" c:identifier="g_converter_output_stream_get_converter">
      <return-value transfer-ownership="none">
        <type name="Converter"/>
      </return-value>
    </method>
    <property name="converter" writable="1" construct-only="1" transfer-ownership="none">
      <type name="Converter"/>
    </property>
  </class>
struct ConverterOutputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="FilterOutputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct ConverterOutputStreamPrivate
{
};
  <enumeration name="ConverterResult" glib:type-name="GConverterResult" glib:get-type="g_converter_result_get_type">
    <member name="error" value="0">
      <attribute name="c:identifier" value="G_CONVERTER_ERROR"/>
    </member>
    <member name="converted" value="1">
      <attribute name="c:identifier" value="G_CONVERTER_CONVERTED"/>
    </member>
    <member name="finished" value="2">
      <attribute name="c:identifier" value="G_CONVERTER_FINISHED"/>
    </member>
    <member name="flushed" value="3">
      <attribute name="c:identifier" value="G_CONVERTER_FLUSHED"/>
    </member>
  </enumeration>
  <class name="Credentials" parent="GObject.Object" glib:type-struct="CredentialsClass" glib:type-name="GCredentials" glib:get-type="g_credentials_get_type">
    <constructor name="new" c:identifier="g_credentials_new">
      <return-value transfer-ownership="full">
        <type name="Credentials"/>
      </return-value>
    </constructor>
    <method name="get_unix_user" c:identifier="g_credentials_get_unix_user" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="is_same_user" c:identifier="g_credentials_is_same_user" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="other_credentials" transfer-ownership="none">
          <type name="Credentials"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_native" c:identifier="g_credentials_set_native">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="native_type" transfer-ownership="none">
          <type name="CredentialsType"/>
        </parameter>
        <parameter name="native" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_unix_user" c:identifier="g_credentials_set_unix_user" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uid" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="to_string" c:identifier="g_credentials_to_string">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
  </class>
struct CredentialsClass
{
 glib:is-gtype-struct="1"};
  <enumeration name="CredentialsType" glib:type-name="GCredentialsType" glib:get-type="g_credentials_type_get_type">
    <member name="invalid" value="0">
      <attribute name="c:identifier" value="G_CREDENTIALS_TYPE_INVALID"/>
    </member>
    <member name="linux_ucred" value="1">
      <attribute name="c:identifier" value="G_CREDENTIALS_TYPE_LINUX_UCRED"/>
    </member>
    <member name="freebsd_cmsgcred" value="2">
      <attribute name="c:identifier" value="G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED"/>
    </member>
    <member name="openbsd_sockpeercred" value="3">
      <attribute name="c:identifier" value="G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED"/>
    </member>
  </enumeration>
  <class name="DBusActionGroup" parent="GObject.Object" glib:type-name="GDBusActionGroup" glib:get-type="g_dbus_action_group_get_type">
    <implements name="ActionGroup"/>
    <implements name="RemoteActionGroup"/>
    <function name="get" c:identifier="g_dbus_action_group_get">
      <return-value transfer-ownership="full">
        <type name="DBusActionGroup"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="bus_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
  </class>
struct DBusAnnotationInfo
{
 glib:type-name="GDBusAnnotationInfo" glib:get-type="g_dbus_annotation_info_get_type"  <field name="ref_count" writable="1">
    <type name="gint32"/>
  </field>
  <field name="key" writable="1">
    <type name="utf8"/>
  </field>
  <field name="value" writable="1">
    <type name="utf8"/>
  </field>
  <field name="annotations" writable="1">
    <array zero-terminated="1">
      <type name="DBusAnnotationInfo"/>
    </array>
  </field>
  <method name="ref" c:identifier="g_dbus_annotation_info_ref">
    <return-value transfer-ownership="full">
      <type name="DBusAnnotationInfo"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_dbus_annotation_info_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <function name="lookup" c:identifier="g_dbus_annotation_info_lookup">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="annotations" transfer-ownership="none" allow-none="1">
        <array zero-terminated="1">
          <type name="DBusAnnotationInfo"/>
        </array>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
};
struct DBusArgInfo
{
 glib:type-name="GDBusArgInfo" glib:get-type="g_dbus_arg_info_get_type"  <field name="ref_count" writable="1">
    <type name="gint32"/>
  </field>
  <field name="name" writable="1">
    <type name="utf8"/>
  </field>
  <field name="signature" writable="1">
    <type name="utf8"/>
  </field>
  <field name="annotations" writable="1">
    <array zero-terminated="1">
      <type name="DBusAnnotationInfo"/>
    </array>
  </field>
  <method name="ref" c:identifier="g_dbus_arg_info_ref">
    <return-value transfer-ownership="full">
      <type name="DBusArgInfo"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_dbus_arg_info_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <class name="DBusAuthObserver" parent="GObject.Object" glib:type-name="GDBusAuthObserver" glib:get-type="g_dbus_auth_observer_get_type">
    <constructor name="new" c:identifier="g_dbus_auth_observer_new">
      <return-value transfer-ownership="full">
        <type name="DBusAuthObserver"/>
      </return-value>
    </constructor>
    <method name="authorize_authenticated_peer" c:identifier="g_dbus_auth_observer_authorize_authenticated_peer">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="credentials" transfer-ownership="none" allow-none="1">
          <type name="Credentials"/>
        </parameter>
      </parameters>
    </method>
    <glib:signal name="authorize-authenticated-peer" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="credentials" transfer-ownership="none" allow-none="1">
          <type name="Credentials"/>
        </parameter>
      </parameters>
    </glib:signal>
  </class>
  <bitfield name="DBusCallFlags" glib:type-name="GDBusCallFlags" glib:get-type="g_dbus_call_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_CALL_FLAGS_NONE"/>
    </member>
    <member name="no_auto_start" value="1">
      <attribute name="c:identifier" value="G_DBUS_CALL_FLAGS_NO_AUTO_START"/>
    </member>
  </bitfield>
  <bitfield name="DBusCapabilityFlags" glib:type-name="GDBusCapabilityFlags" glib:get-type="g_dbus_capability_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_CAPABILITY_FLAGS_NONE"/>
    </member>
    <member name="unix_fd_passing" value="1">
      <attribute name="c:identifier" value="G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING"/>
    </member>
  </bitfield>
  <class name="DBusConnection" parent="GObject.Object" glib:type-name="GDBusConnection" glib:get-type="g_dbus_connection_get_type">
    <implements name="AsyncInitable"/>
    <implements name="Initable"/>
    <constructor name="new_finish" c:identifier="g_dbus_connection_new_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusConnection"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_for_address_finish" c:identifier="g_dbus_connection_new_for_address_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusConnection"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_for_address_sync" c:identifier="g_dbus_connection_new_for_address_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusConnection"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusConnectionFlags"/>
        </parameter>
        <parameter name="observer" transfer-ownership="none" allow-none="1">
          <type name="DBusAuthObserver"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_sync" c:identifier="g_dbus_connection_new_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusConnection"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="guid" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusConnectionFlags"/>
        </parameter>
        <parameter name="observer" transfer-ownership="none" allow-none="1">
          <type name="DBusAuthObserver"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="new" c:identifier="g_dbus_connection_new">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="guid" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusConnectionFlags"/>
        </parameter>
        <parameter name="observer" transfer-ownership="none" allow-none="1">
          <type name="DBusAuthObserver"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <function name="new_for_address" c:identifier="g_dbus_connection_new_for_address">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusConnectionFlags"/>
        </parameter>
        <parameter name="observer" transfer-ownership="none" allow-none="1">
          <type name="DBusAuthObserver"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <method name="add_filter" c:identifier="g_dbus_connection_add_filter">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="filter_function" transfer-ownership="none" scope="notified" closure="1" destroy="2">
          <type name="DBusMessageFilterFunction"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="user_data_free_func" transfer-ownership="none" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </method>
    <method name="call" c:identifier="g_dbus_connection_call">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="bus_name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="reply_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusCallFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="10">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_finish" c:identifier="g_dbus_connection_call_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_sync" c:identifier="g_dbus_connection_call_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="bus_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="reply_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusCallFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_with_unix_fd_list" c:identifier="g_dbus_connection_call_with_unix_fd_list">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="bus_name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="reply_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusCallFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="fd_list" transfer-ownership="none" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="11">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_with_unix_fd_list_finish" c:identifier="g_dbus_connection_call_with_unix_fd_list_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="out_fd_list" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_with_unix_fd_list_sync" c:identifier="g_dbus_connection_call_with_unix_fd_list_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="bus_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="reply_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusCallFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="fd_list" transfer-ownership="none" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
        <parameter name="out_fd_list" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="close" c:identifier="g_dbus_connection_close">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_finish" c:identifier="g_dbus_connection_close_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_sync" c:identifier="g_dbus_connection_close_sync" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="emit_signal" c:identifier="g_dbus_connection_emit_signal" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="destination_bus_name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="export_action_group" c:identifier="g_dbus_connection_export_action_group" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="action_group" transfer-ownership="none">
          <type name="ActionGroup"/>
        </parameter>
      </parameters>
    </method>
    <method name="export_menu_model" c:identifier="g_dbus_connection_export_menu_model" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="menu" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="flush" c:identifier="g_dbus_connection_flush">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="flush_finish" c:identifier="g_dbus_connection_flush_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="flush_sync" c:identifier="g_dbus_connection_flush_sync" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_capabilities" c:identifier="g_dbus_connection_get_capabilities">
      <return-value transfer-ownership="none">
        <type name="DBusCapabilityFlags"/>
      </return-value>
    </method>
    <method name="get_exit_on_close" c:identifier="g_dbus_connection_get_exit_on_close">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_guid" c:identifier="g_dbus_connection_get_guid">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_peer_credentials" c:identifier="g_dbus_connection_get_peer_credentials">
      <return-value transfer-ownership="none">
        <type name="Credentials"/>
      </return-value>
    </method>
    <method name="get_stream" c:identifier="g_dbus_connection_get_stream">
      <return-value transfer-ownership="none">
        <type name="IOStream"/>
      </return-value>
    </method>
    <method name="get_unique_name" c:identifier="g_dbus_connection_get_unique_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="is_closed" c:identifier="g_dbus_connection_is_closed">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="register_object" c:identifier="g_dbus_connection_register_object" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_info" transfer-ownership="none">
          <type name="DBusInterfaceInfo"/>
        </parameter>
        <parameter name="vtable" transfer-ownership="none" allow-none="1">
          <type name="DBusInterfaceVTable"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" allow-none="1">
          <type name="any"/>
        </parameter>
        <parameter name="user_data_free_func" transfer-ownership="none" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </method>
    <method name="register_subtree" c:identifier="g_dbus_connection_register_subtree" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="vtable" transfer-ownership="none">
          <type name="DBusSubtreeVTable"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusSubtreeFlags"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="user_data_free_func" transfer-ownership="none" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </method>
    <method name="remove_filter" c:identifier="g_dbus_connection_remove_filter">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="filter_id" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_message" c:identifier="g_dbus_connection_send_message" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="DBusMessage"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusSendMessageFlags"/>
        </parameter>
        <parameter name="out_serial" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_message_with_reply" c:identifier="g_dbus_connection_send_message_with_reply">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="DBusMessage"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusSendMessageFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="out_serial" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="guint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_message_with_reply_finish" c:identifier="g_dbus_connection_send_message_with_reply_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_message_with_reply_sync" c:identifier="g_dbus_connection_send_message_with_reply_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="DBusMessage"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusSendMessageFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="out_serial" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="guint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_exit_on_close" c:identifier="g_dbus_connection_set_exit_on_close">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="exit_on_close" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="signal_subscribe" c:identifier="g_dbus_connection_signal_subscribe">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="sender" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="member" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="arg0" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusSignalFlags"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" scope="notified" closure="7" destroy="8">
          <type name="DBusSignalCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="user_data_free_func" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </method>
    <method name="signal_unsubscribe" c:identifier="g_dbus_connection_signal_unsubscribe">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="subscription_id" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="start_message_processing" c:identifier="g_dbus_connection_start_message_processing">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="unexport_action_group" c:identifier="g_dbus_connection_unexport_action_group">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="export_id" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="unexport_menu_model" c:identifier="g_dbus_connection_unexport_menu_model">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="export_id" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="unregister_object" c:identifier="g_dbus_connection_unregister_object">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="registration_id" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="unregister_subtree" c:identifier="g_dbus_connection_unregister_subtree">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="registration_id" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <property name="address" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="authentication-observer" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusAuthObserver"/>
    </property>
    <property name="capabilities" transfer-ownership="none">
      <type name="DBusCapabilityFlags"/>
    </property>
    <property name="closed" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="exit-on-close" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="flags" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusConnectionFlags"/>
    </property>
    <property name="guid" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="stream" writable="1" construct-only="1" transfer-ownership="none">
      <type name="IOStream"/>
    </property>
    <property name="unique-name" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <glib:signal name="closed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="remote_peer_vanished" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error"/>
        </parameter>
      </parameters>
    </glib:signal>
  </class>
  <bitfield name="DBusConnectionFlags" glib:type-name="GDBusConnectionFlags" glib:get-type="g_dbus_connection_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_CONNECTION_FLAGS_NONE"/>
    </member>
    <member name="authentication_client" value="1">
      <attribute name="c:identifier" value="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT"/>
    </member>
    <member name="authentication_server" value="2">
      <attribute name="c:identifier" value="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER"/>
    </member>
    <member name="authentication_allow_anonymous" value="4">
      <attribute name="c:identifier" value="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS"/>
    </member>
    <member name="message_bus_connection" value="8">
      <attribute name="c:identifier" value="G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION"/>
    </member>
    <member name="delay_message_processing" value="16">
      <attribute name="c:identifier" value="G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING"/>
    </member>
  </bitfield>
  <enumeration name="DBusError" glib:type-name="GDBusError" glib:get-type="g_dbus_error_get_type">
    <member name="failed" value="0">
      <attribute name="c:identifier" value="G_DBUS_ERROR_FAILED"/>
    </member>
    <member name="no_memory" value="1">
      <attribute name="c:identifier" value="G_DBUS_ERROR_NO_MEMORY"/>
    </member>
    <member name="service_unknown" value="2">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SERVICE_UNKNOWN"/>
    </member>
    <member name="name_has_no_owner" value="3">
      <attribute name="c:identifier" value="G_DBUS_ERROR_NAME_HAS_NO_OWNER"/>
    </member>
    <member name="no_reply" value="4">
      <attribute name="c:identifier" value="G_DBUS_ERROR_NO_REPLY"/>
    </member>
    <member name="io_error" value="5">
      <attribute name="c:identifier" value="G_DBUS_ERROR_IO_ERROR"/>
    </member>
    <member name="bad_address" value="6">
      <attribute name="c:identifier" value="G_DBUS_ERROR_BAD_ADDRESS"/>
    </member>
    <member name="not_supported" value="7">
      <attribute name="c:identifier" value="G_DBUS_ERROR_NOT_SUPPORTED"/>
    </member>
    <member name="limits_exceeded" value="8">
      <attribute name="c:identifier" value="G_DBUS_ERROR_LIMITS_EXCEEDED"/>
    </member>
    <member name="access_denied" value="9">
      <attribute name="c:identifier" value="G_DBUS_ERROR_ACCESS_DENIED"/>
    </member>
    <member name="auth_failed" value="10">
      <attribute name="c:identifier" value="G_DBUS_ERROR_AUTH_FAILED"/>
    </member>
    <member name="no_server" value="11">
      <attribute name="c:identifier" value="G_DBUS_ERROR_NO_SERVER"/>
    </member>
    <member name="timeout" value="12">
      <attribute name="c:identifier" value="G_DBUS_ERROR_TIMEOUT"/>
    </member>
    <member name="no_network" value="13">
      <attribute name="c:identifier" value="G_DBUS_ERROR_NO_NETWORK"/>
    </member>
    <member name="address_in_use" value="14">
      <attribute name="c:identifier" value="G_DBUS_ERROR_ADDRESS_IN_USE"/>
    </member>
    <member name="disconnected" value="15">
      <attribute name="c:identifier" value="G_DBUS_ERROR_DISCONNECTED"/>
    </member>
    <member name="invalid_args" value="16">
      <attribute name="c:identifier" value="G_DBUS_ERROR_INVALID_ARGS"/>
    </member>
    <member name="file_not_found" value="17">
      <attribute name="c:identifier" value="G_DBUS_ERROR_FILE_NOT_FOUND"/>
    </member>
    <member name="file_exists" value="18">
      <attribute name="c:identifier" value="G_DBUS_ERROR_FILE_EXISTS"/>
    </member>
    <member name="unknown_method" value="19">
      <attribute name="c:identifier" value="G_DBUS_ERROR_UNKNOWN_METHOD"/>
    </member>
    <member name="timed_out" value="20">
      <attribute name="c:identifier" value="G_DBUS_ERROR_TIMED_OUT"/>
    </member>
    <member name="match_rule_not_found" value="21">
      <attribute name="c:identifier" value="G_DBUS_ERROR_MATCH_RULE_NOT_FOUND"/>
    </member>
    <member name="match_rule_invalid" value="22">
      <attribute name="c:identifier" value="G_DBUS_ERROR_MATCH_RULE_INVALID"/>
    </member>
    <member name="spawn_exec_failed" value="23">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_EXEC_FAILED"/>
    </member>
    <member name="spawn_fork_failed" value="24">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_FORK_FAILED"/>
    </member>
    <member name="spawn_child_exited" value="25">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_CHILD_EXITED"/>
    </member>
    <member name="spawn_child_signaled" value="26">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_CHILD_SIGNALED"/>
    </member>
    <member name="spawn_failed" value="27">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_FAILED"/>
    </member>
    <member name="spawn_setup_failed" value="28">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_SETUP_FAILED"/>
    </member>
    <member name="spawn_config_invalid" value="29">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_CONFIG_INVALID"/>
    </member>
    <member name="spawn_service_invalid" value="30">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_SERVICE_INVALID"/>
    </member>
    <member name="spawn_service_not_found" value="31">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND"/>
    </member>
    <member name="spawn_permissions_invalid" value="32">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID"/>
    </member>
    <member name="spawn_file_invalid" value="33">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_FILE_INVALID"/>
    </member>
    <member name="spawn_no_memory" value="34">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SPAWN_NO_MEMORY"/>
    </member>
    <member name="unix_process_id_unknown" value="35">
      <attribute name="c:identifier" value="G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN"/>
    </member>
    <member name="invalid_signature" value="36">
      <attribute name="c:identifier" value="G_DBUS_ERROR_INVALID_SIGNATURE"/>
    </member>
    <member name="invalid_file_content" value="37">
      <attribute name="c:identifier" value="G_DBUS_ERROR_INVALID_FILE_CONTENT"/>
    </member>
    <member name="selinux_security_context_unknown" value="38">
      <attribute name="c:identifier" value="G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN"/>
    </member>
    <member name="adt_audit_data_unknown" value="39">
      <attribute name="c:identifier" value="G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN"/>
    </member>
    <member name="object_path_in_use" value="40">
      <attribute name="c:identifier" value="G_DBUS_ERROR_OBJECT_PATH_IN_USE"/>
    </member>
  </enumeration>
struct DBusErrorEntry
{
  <field name="error_code" writable="1">
    <type name="gint32"/>
  </field>
  <field name="dbus_error_name" writable="1">
    <type name="utf8"/>
  </field>
};
  <interface name="DBusInterface" glib:type-name="GDBusInterface" glib:get-type="g_dbus_interface_get_type" glib:type-struct="DBusInterfaceIface">
    <method name="get_object" c:identifier="g_dbus_interface_dup_object">
      <return-value transfer-ownership="full">
        <type name="DBusObject"/>
      </return-value>
    </method>
    <method name="get_info" c:identifier="g_dbus_interface_get_info">
      <return-value transfer-ownership="none">
        <type name="DBusInterfaceInfo"/>
      </return-value>
    </method>
    <method name="set_object" c:identifier="g_dbus_interface_set_object">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none" allow-none="1">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="dup_object" offset="65535" invoker="set_object">
      <return-value transfer-ownership="full">
        <type name="DBusObject"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_info" offset="65535" invoker="get_info">
      <return-value transfer-ownership="none">
        <type name="DBusInterfaceInfo"/>
      </return-value>
    </virtual-method>
    <virtual-method name="set_object" offset="65535" invoker="set_object">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none" allow-none="1">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
  <callback name="DBusInterfaceGetPropertyFunc">
    <return-value transfer-ownership="full">
      <type name="GLib.Variant"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="sender" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="object_path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="interface_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="property_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="error" transfer-ownership="none">
        <type name="GLib.Error"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="6">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
struct DBusInterfaceIface
{
 glib:is-gtype-struct="1"  <field name="parent_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="get_info">
    <callback name="get_info">
      <return-value transfer-ownership="none">
        <type name="DBusInterfaceInfo"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_object">
    <callback name="get_object">
      <return-value transfer-ownership="none">
        <type name="DBusObject"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_object">
    <callback name="set_object">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
        <parameter name="object" transfer-ownership="none" allow-none="1">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="dup_object">
    <callback name="dup_object">
      <return-value transfer-ownership="full">
        <type name="DBusObject"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
struct DBusInterfaceInfo
{
 glib:type-name="GDBusInterfaceInfo" glib:get-type="g_dbus_interface_info_get_type"  <field name="ref_count" writable="1">
    <type name="gint32"/>
  </field>
  <field name="name" writable="1">
    <type name="utf8"/>
  </field>
  <field name="methods" writable="1">
    <array zero-terminated="1">
      <type name="DBusMethodInfo"/>
    </array>
  </field>
  <field name="signals" writable="1">
    <array zero-terminated="1">
      <type name="DBusSignalInfo"/>
    </array>
  </field>
  <field name="properties" writable="1">
    <array zero-terminated="1">
      <type name="DBusPropertyInfo"/>
    </array>
  </field>
  <field name="annotations" writable="1">
    <array zero-terminated="1">
      <type name="DBusAnnotationInfo"/>
    </array>
  </field>
  <method name="cache_build" c:identifier="g_dbus_interface_info_cache_build">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <method name="cache_release" c:identifier="g_dbus_interface_info_cache_release">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <method name="generate_xml" c:identifier="g_dbus_interface_info_generate_xml">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="indent" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
      <parameter name="string_builder" transfer-ownership="none" direction="out" caller-allocates="1">
        <type name="GLib.String"/>
      </parameter>
    </parameters>
  </method>
  <method name="lookup_method" c:identifier="g_dbus_interface_info_lookup_method">
    <return-value transfer-ownership="none">
      <type name="DBusMethodInfo"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="lookup_property" c:identifier="g_dbus_interface_info_lookup_property">
    <return-value transfer-ownership="none">
      <type name="DBusPropertyInfo"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="lookup_signal" c:identifier="g_dbus_interface_info_lookup_signal">
    <return-value transfer-ownership="none">
      <type name="DBusSignalInfo"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="ref" c:identifier="g_dbus_interface_info_ref">
    <return-value transfer-ownership="full">
      <type name="DBusInterfaceInfo"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_dbus_interface_info_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <callback name="DBusInterfaceMethodCallFunc">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="sender" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="object_path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="interface_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="method_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="parameters" transfer-ownership="none">
        <type name="GLib.Variant"/>
      </parameter>
      <parameter name="invocation" transfer-ownership="none">
        <type name="DBusMethodInvocation"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="7">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <callback name="DBusInterfaceSetPropertyFunc">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="sender" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="object_path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="interface_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="property_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="value" transfer-ownership="none">
        <type name="GLib.Variant"/>
      </parameter>
      <parameter name="error" transfer-ownership="none">
        <type name="GLib.Error"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="7">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <class name="DBusInterfaceSkeleton" parent="GObject.Object" glib:type-struct="DBusInterfaceSkeletonClass" abstract="1" glib:type-name="GDBusInterfaceSkeleton" glib:get-type="g_dbus_interface_skeleton_get_type">
    <implements name="DBusInterface"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="DBusInterfaceSkeletonPrivate"/>
    </field>
    <method name="export" c:identifier="g_dbus_interface_skeleton_export" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="flush" c:identifier="g_dbus_interface_skeleton_flush">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="get_connection" c:identifier="g_dbus_interface_skeleton_get_connection">
      <return-value transfer-ownership="none">
        <type name="DBusConnection"/>
      </return-value>
    </method>
    <method name="get_connections" c:identifier="g_dbus_interface_skeleton_get_connections">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="DBusConnection"/>
        </type>
      </return-value>
    </method>
    <method name="get_flags" c:identifier="g_dbus_interface_skeleton_get_flags">
      <return-value transfer-ownership="none">
        <type name="DBusInterfaceSkeletonFlags"/>
      </return-value>
    </method>
    <method name="get_info" c:identifier="g_dbus_interface_skeleton_get_info">
      <return-value transfer-ownership="none">
        <type name="DBusInterfaceInfo"/>
      </return-value>
    </method>
    <method name="get_object_path" c:identifier="g_dbus_interface_skeleton_get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_properties" c:identifier="g_dbus_interface_skeleton_get_properties">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </method>
    <method name="has_connection" c:identifier="g_dbus_interface_skeleton_has_connection">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_flags" c:identifier="g_dbus_interface_skeleton_set_flags">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusInterfaceSkeletonFlags"/>
        </parameter>
      </parameters>
    </method>
    <method name="unexport" c:identifier="g_dbus_interface_skeleton_unexport">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="unexport_from_connection" c:identifier="g_dbus_interface_skeleton_unexport_from_connection">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
      </parameters>
    </method>
    <property name="g-flags" writable="1" transfer-ownership="none">
      <type name="DBusInterfaceSkeletonFlags"/>
    </property>
    <glib:signal name="g-authorize-method" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="invocation" transfer-ownership="none">
          <type name="DBusMethodInvocation"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="flush" offset="65535" invoker="flush">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="g_authorize_method" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="invocation" transfer-ownership="none">
          <type name="DBusMethodInvocation"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_info" offset="65535" invoker="get_info">
      <return-value transfer-ownership="none">
        <type name="DBusInterfaceInfo"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_properties" offset="65535" invoker="get_properties">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </virtual-method>
  </class>
struct DBusInterfaceSkeletonClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="get_info">
    <callback name="get_info">
      <return-value transfer-ownership="none">
        <type name="DBusInterfaceInfo"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_vtable">
    <type name="any"/>
  </field>
  <field name="get_properties">
    <callback name="get_properties">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="flush">
    <callback name="flush">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="vfunc_padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
  <field name="g_authorize_method">
    <callback name="g_authorize_method">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
        <parameter name="invocation" transfer-ownership="none">
          <type name="DBusMethodInvocation"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="signal_padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
  <bitfield name="DBusInterfaceSkeletonFlags" glib:type-name="GDBusInterfaceSkeletonFlags" glib:get-type="g_dbus_interface_skeleton_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_INTERFACE_SKELETON_FLAGS_NONE"/>
    </member>
    <member name="handle_method_invocations_in_thread" value="1">
      <attribute name="c:identifier" value="G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD"/>
    </member>
  </bitfield>
struct DBusInterfaceSkeletonPrivate
{
};
struct DBusInterfaceVTable
{
  <field name="method_call" writable="1">
    <callback name="DBusInterfaceMethodCallFunc">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="invocation" transfer-ownership="none">
          <type name="DBusMethodInvocation"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="7">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_property" writable="1">
    <callback name="DBusInterfaceGetPropertyFunc">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_property" writable="1">
    <callback name="DBusInterfaceSetPropertyFunc">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="7">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
  <class name="DBusMenuModel" parent="MenuModel" glib:type-name="GDBusMenuModel" glib:get-type="g_dbus_menu_model_get_type">
    <function name="get" c:identifier="g_dbus_menu_model_get">
      <return-value transfer-ownership="full">
        <type name="DBusMenuModel"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="bus_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
  </class>
  <class name="DBusMessage" parent="GObject.Object" glib:type-name="GDBusMessage" glib:get-type="g_dbus_message_get_type">
    <constructor name="new" c:identifier="g_dbus_message_new">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
    </constructor>
    <constructor name="new_from_blob" c:identifier="g_dbus_message_new_from_blob" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
      <parameters>
        <parameter name="blob" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="blob_len" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="capabilities" transfer-ownership="none">
          <type name="DBusCapabilityFlags"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_method_call" c:identifier="g_dbus_message_new_method_call">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="method" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_signal" c:identifier="g_dbus_message_new_signal">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="signal" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="bytes_needed" c:identifier="g_dbus_message_bytes_needed" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="blob" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="blob_len" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </function>
    <method name="copy" c:identifier="g_dbus_message_copy" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
    </method>
    <method name="get_arg0" c:identifier="g_dbus_message_get_arg0">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_body" c:identifier="g_dbus_message_get_body">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </method>
    <method name="get_byte_order" c:identifier="g_dbus_message_get_byte_order">
      <return-value transfer-ownership="none">
        <type name="DBusMessageByteOrder"/>
      </return-value>
    </method>
    <method name="get_destination" c:identifier="g_dbus_message_get_destination">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_error_name" c:identifier="g_dbus_message_get_error_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_flags" c:identifier="g_dbus_message_get_flags">
      <return-value transfer-ownership="none">
        <type name="DBusMessageFlags"/>
      </return-value>
    </method>
    <method name="get_header" c:identifier="g_dbus_message_get_header">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="header_field" transfer-ownership="none">
          <type name="DBusMessageHeaderField"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_header_fields" c:identifier="g_dbus_message_get_header_fields">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="guint8"/>
        </array>
      </return-value>
    </method>
    <method name="get_interface" c:identifier="g_dbus_message_get_interface">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_locked" c:identifier="g_dbus_message_get_locked">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_member" c:identifier="g_dbus_message_get_member">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_message_type" c:identifier="g_dbus_message_get_message_type">
      <return-value transfer-ownership="none">
        <type name="DBusMessageType"/>
      </return-value>
    </method>
    <method name="get_num_unix_fds" c:identifier="g_dbus_message_get_num_unix_fds">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_path" c:identifier="g_dbus_message_get_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_reply_serial" c:identifier="g_dbus_message_get_reply_serial">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_sender" c:identifier="g_dbus_message_get_sender">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_serial" c:identifier="g_dbus_message_get_serial">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_signature" c:identifier="g_dbus_message_get_signature">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_unix_fd_list" c:identifier="g_dbus_message_get_unix_fd_list">
      <return-value transfer-ownership="none">
        <type name="UnixFDList"/>
      </return-value>
    </method>
    <method name="lock" c:identifier="g_dbus_message_lock">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="new_method_error_literal" c:identifier="g_dbus_message_new_method_error_literal">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
      <parameters>
        <parameter name="error_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="error_message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="new_method_reply" c:identifier="g_dbus_message_new_method_reply">
      <return-value transfer-ownership="full">
        <type name="DBusMessage"/>
      </return-value>
    </method>
    <method name="print" c:identifier="g_dbus_message_print">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="indent" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_body" c:identifier="g_dbus_message_set_body">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="body" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_byte_order" c:identifier="g_dbus_message_set_byte_order">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="byte_order" transfer-ownership="none">
          <type name="DBusMessageByteOrder"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_destination" c:identifier="g_dbus_message_set_destination">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_error_name" c:identifier="g_dbus_message_set_error_name">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_flags" c:identifier="g_dbus_message_set_flags">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusMessageFlags"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_header" c:identifier="g_dbus_message_set_header">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="header_field" transfer-ownership="none">
          <type name="DBusMessageHeaderField"/>
        </parameter>
        <parameter name="value" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_interface" c:identifier="g_dbus_message_set_interface">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_member" c:identifier="g_dbus_message_set_member">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_message_type" c:identifier="g_dbus_message_set_message_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="DBusMessageType"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_num_unix_fds" c:identifier="g_dbus_message_set_num_unix_fds">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_path" c:identifier="g_dbus_message_set_path">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_reply_serial" c:identifier="g_dbus_message_set_reply_serial">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_sender" c:identifier="g_dbus_message_set_sender">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_serial" c:identifier="g_dbus_message_set_serial">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="serial" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_signature" c:identifier="g_dbus_message_set_signature">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_unix_fd_list" c:identifier="g_dbus_message_set_unix_fd_list">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="fd_list" transfer-ownership="none" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
      </parameters>
    </method>
    <method name="to_blob" c:identifier="g_dbus_message_to_blob" throws="1">
      <return-value transfer-ownership="full">
        <array length="0">
          <type name="guint8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="out_size" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="capabilities" transfer-ownership="none">
          <type name="DBusCapabilityFlags"/>
        </parameter>
      </parameters>
    </method>
    <method name="to_gerror" c:identifier="g_dbus_message_to_gerror" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <property name="locked" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
  </class>
  <enumeration name="DBusMessageByteOrder" glib:type-name="GDBusMessageByteOrder" glib:get-type="g_dbus_message_byte_order_get_type">
    <member name="big_endian" value="66">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN"/>
    </member>
    <member name="little_endian" value="108">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN"/>
    </member>
  </enumeration>
  <callback name="DBusMessageFilterFunction">
    <return-value transfer-ownership="full">
      <type name="DBusMessage"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="message" transfer-ownership="full">
        <type name="DBusMessage"/>
      </parameter>
      <parameter name="incoming" transfer-ownership="none">
        <type name="gboolean"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="3">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <bitfield name="DBusMessageFlags" glib:type-name="GDBusMessageFlags" glib:get-type="g_dbus_message_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_FLAGS_NONE"/>
    </member>
    <member name="no_reply_expected" value="1">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED"/>
    </member>
    <member name="no_auto_start" value="2">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_FLAGS_NO_AUTO_START"/>
    </member>
  </bitfield>
  <enumeration name="DBusMessageHeaderField" glib:type-name="GDBusMessageHeaderField" glib:get-type="g_dbus_message_header_field_get_type">
    <member name="invalid" value="0">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_INVALID"/>
    </member>
    <member name="path" value="1">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_PATH"/>
    </member>
    <member name="interface" value="2">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE"/>
    </member>
    <member name="member" value="3">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_MEMBER"/>
    </member>
    <member name="error_name" value="4">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME"/>
    </member>
    <member name="reply_serial" value="5">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL"/>
    </member>
    <member name="destination" value="6">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION"/>
    </member>
    <member name="sender" value="7">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_SENDER"/>
    </member>
    <member name="signature" value="8">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE"/>
    </member>
    <member name="num_unix_fds" value="9">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS"/>
    </member>
  </enumeration>
  <enumeration name="DBusMessageType" glib:type-name="GDBusMessageType" glib:get-type="g_dbus_message_type_get_type">
    <member name="invalid" value="0">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_TYPE_INVALID"/>
    </member>
    <member name="method_call" value="1">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_TYPE_METHOD_CALL"/>
    </member>
    <member name="method_return" value="2">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_TYPE_METHOD_RETURN"/>
    </member>
    <member name="error" value="3">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_TYPE_ERROR"/>
    </member>
    <member name="signal" value="4">
      <attribute name="c:identifier" value="G_DBUS_MESSAGE_TYPE_SIGNAL"/>
    </member>
  </enumeration>
struct DBusMethodInfo
{
 glib:type-name="GDBusMethodInfo" glib:get-type="g_dbus_method_info_get_type"  <field name="ref_count" writable="1">
    <type name="gint32"/>
  </field>
  <field name="name" writable="1">
    <type name="utf8"/>
  </field>
  <field name="in_args" writable="1">
    <array zero-terminated="1">
      <type name="DBusArgInfo"/>
    </array>
  </field>
  <field name="out_args" writable="1">
    <array zero-terminated="1">
      <type name="DBusArgInfo"/>
    </array>
  </field>
  <field name="annotations" writable="1">
    <array zero-terminated="1">
      <type name="DBusAnnotationInfo"/>
    </array>
  </field>
  <method name="ref" c:identifier="g_dbus_method_info_ref">
    <return-value transfer-ownership="full">
      <type name="DBusMethodInfo"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_dbus_method_info_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <class name="DBusMethodInvocation" parent="GObject.Object" glib:type-name="GDBusMethodInvocation" glib:get-type="g_dbus_method_invocation_get_type">
    <method name="get_connection" c:identifier="g_dbus_method_invocation_get_connection">
      <return-value transfer-ownership="none">
        <type name="DBusConnection"/>
      </return-value>
    </method>
    <method name="get_interface_name" c:identifier="g_dbus_method_invocation_get_interface_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_message" c:identifier="g_dbus_method_invocation_get_message">
      <return-value transfer-ownership="none">
        <type name="DBusMessage"/>
      </return-value>
    </method>
    <method name="get_method_info" c:identifier="g_dbus_method_invocation_get_method_info">
      <return-value transfer-ownership="none">
        <type name="DBusMethodInfo"/>
      </return-value>
    </method>
    <method name="get_method_name" c:identifier="g_dbus_method_invocation_get_method_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_object_path" c:identifier="g_dbus_method_invocation_get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_parameters" c:identifier="g_dbus_method_invocation_get_parameters">
      <return-value transfer-ownership="none">
        <type name="GLib.Variant"/>
      </return-value>
    </method>
    <method name="get_sender" c:identifier="g_dbus_method_invocation_get_sender">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="return_dbus_error" c:identifier="g_dbus_method_invocation_return_dbus_error">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="error_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="error_message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="return_error_literal" c:identifier="g_dbus_method_invocation_return_error_literal">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="domain" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="return_gerror" c:identifier="g_dbus_method_invocation_return_gerror">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error"/>
        </parameter>
      </parameters>
    </method>
    <method name="return_value" c:identifier="g_dbus_method_invocation_return_value">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="return_value_with_unix_fd_list" c:identifier="g_dbus_method_invocation_return_value_with_unix_fd_list">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="fd_list" transfer-ownership="none" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
      </parameters>
    </method>
  </class>
struct DBusNodeInfo
{
 glib:type-name="GDBusNodeInfo" glib:get-type="g_dbus_node_info_get_type"  <field name="ref_count" writable="1">
    <type name="gint32"/>
  </field>
  <field name="path" writable="1">
    <type name="utf8"/>
  </field>
  <field name="interfaces" writable="1">
    <array zero-terminated="1">
      <type name="DBusInterfaceInfo"/>
    </array>
  </field>
  <field name="nodes" writable="1">
    <array zero-terminated="1">
      <type name="DBusNodeInfo"/>
    </array>
  </field>
  <field name="annotations" writable="1">
    <array zero-terminated="1">
      <type name="DBusAnnotationInfo"/>
    </array>
  </field>
  <constructor name="new_for_xml" c:identifier="g_dbus_node_info_new_for_xml" throws="1">
    <return-value transfer-ownership="full">
      <type name="DBusNodeInfo"/>
    </return-value>
    <parameters>
      <parameter name="xml_data" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </constructor>
  <method name="generate_xml" c:identifier="g_dbus_node_info_generate_xml">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="indent" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
      <parameter name="string_builder" transfer-ownership="none" direction="out" caller-allocates="1">
        <type name="GLib.String"/>
      </parameter>
    </parameters>
  </method>
  <method name="lookup_interface" c:identifier="g_dbus_node_info_lookup_interface">
    <return-value transfer-ownership="none">
      <type name="DBusInterfaceInfo"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="ref" c:identifier="g_dbus_node_info_ref">
    <return-value transfer-ownership="full">
      <type name="DBusNodeInfo"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_dbus_node_info_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <interface name="DBusObject" glib:type-name="GDBusObject" glib:get-type="g_dbus_object_get_type" glib:type-struct="DBusObjectIface">
    <method name="get_interface" c:identifier="g_dbus_object_get_interface">
      <return-value transfer-ownership="full">
        <type name="DBusInterface"/>
      </return-value>
      <parameters>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_interfaces" c:identifier="g_dbus_object_get_interfaces">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="DBusInterface"/>
        </type>
      </return-value>
    </method>
    <method name="get_object_path" c:identifier="g_dbus_object_get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <glib:signal name="interface-added" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="interface-removed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="get_interface" offset="65535" invoker="get_interface">
      <return-value transfer-ownership="full">
        <type name="DBusInterface"/>
      </return-value>
      <parameters>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_interfaces" offset="65535" invoker="get_interfaces">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="DBusInterface"/>
        </type>
      </return-value>
    </virtual-method>
    <virtual-method name="get_object_path" offset="65535" invoker="get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="interface_added" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="interface_removed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct DBusObjectIface
{
 glib:is-gtype-struct="1"  <field name="parent_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="get_object_path">
    <callback name="get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_interfaces">
    <callback name="get_interfaces">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="DBusInterface"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_interface">
    <callback name="get_interface">
      <return-value transfer-ownership="full">
        <type name="DBusInterface"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="interface_added">
    <callback name="interface_added">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="interface_removed">
    <callback name="interface_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <interface name="DBusObjectManager" glib:type-name="GDBusObjectManager" glib:get-type="g_dbus_object_manager_get_type" glib:type-struct="DBusObjectManagerIface">
    <method name="get_interface" c:identifier="g_dbus_object_manager_get_interface">
      <return-value transfer-ownership="full">
        <type name="DBusInterface"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_object" c:identifier="g_dbus_object_manager_get_object">
      <return-value transfer-ownership="full">
        <type name="DBusObject"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_object_path" c:identifier="g_dbus_object_manager_get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_objects" c:identifier="g_dbus_object_manager_get_objects">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="DBusObject"/>
        </type>
      </return-value>
    </method>
    <glib:signal name="interface-added" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="interface-removed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="object-added" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="object-removed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="get_interface" offset="65535" invoker="get_interface">
      <return-value transfer-ownership="full">
        <type name="DBusInterface"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_object" offset="65535" invoker="get_object">
      <return-value transfer-ownership="full">
        <type name="DBusObject"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_object_path" offset="65535" invoker="get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_objects" offset="65535" invoker="get_objects">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="DBusObject"/>
        </type>
      </return-value>
    </virtual-method>
    <virtual-method name="interface_added" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="interface_removed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="object_added" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="object_removed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
  <class name="DBusObjectManagerClient" parent="GObject.Object" glib:type-struct="DBusObjectManagerClientClass" glib:type-name="GDBusObjectManagerClient" glib:get-type="g_dbus_object_manager_client_get_type">
    <implements name="AsyncInitable"/>
    <implements name="DBusObjectManager"/>
    <implements name="Initable"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="DBusObjectManagerClientPrivate"/>
    </field>
    <constructor name="new_finish" c:identifier="g_dbus_object_manager_client_new_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusObjectManagerClient"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_for_bus_finish" c:identifier="g_dbus_object_manager_client_new_for_bus_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusObjectManagerClient"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_for_bus_sync" c:identifier="g_dbus_object_manager_client_new_for_bus_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusObjectManagerClient"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusObjectManagerClientFlags"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="get_proxy_type_func" transfer-ownership="none" allow-none="1" scope="notified" closure="5" destroy="6">
          <type name="DBusProxyTypeFunc"/>
        </parameter>
        <parameter name="get_proxy_type_user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="get_proxy_type_destroy_notify" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_sync" c:identifier="g_dbus_object_manager_client_new_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusObjectManagerClient"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusObjectManagerClientFlags"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="get_proxy_type_func" transfer-ownership="none" allow-none="1" scope="notified" closure="5" destroy="6">
          <type name="DBusProxyTypeFunc"/>
        </parameter>
        <parameter name="get_proxy_type_user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="get_proxy_type_destroy_notify" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="new" c:identifier="g_dbus_object_manager_client_new">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusObjectManagerClientFlags"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="get_proxy_type_func" transfer-ownership="none" allow-none="1" scope="notified" closure="5" destroy="6">
          <type name="DBusProxyTypeFunc"/>
        </parameter>
        <parameter name="get_proxy_type_user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="get_proxy_type_destroy_notify" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="9">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <function name="new_for_bus" c:identifier="g_dbus_object_manager_client_new_for_bus">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusObjectManagerClientFlags"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="get_proxy_type_func" transfer-ownership="none" allow-none="1" scope="notified" closure="5" destroy="6">
          <type name="DBusProxyTypeFunc"/>
        </parameter>
        <parameter name="get_proxy_type_user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="get_proxy_type_destroy_notify" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="9">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <method name="get_connection" c:identifier="g_dbus_object_manager_client_get_connection">
      <return-value transfer-ownership="none">
        <type name="DBusConnection"/>
      </return-value>
    </method>
    <method name="get_flags" c:identifier="g_dbus_object_manager_client_get_flags">
      <return-value transfer-ownership="none">
        <type name="DBusObjectManagerClientFlags"/>
      </return-value>
    </method>
    <method name="get_name" c:identifier="g_dbus_object_manager_client_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_name_owner" c:identifier="g_dbus_object_manager_client_get_name_owner">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <property name="bus-type" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="BusType"/>
    </property>
    <property name="connection" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusConnection"/>
    </property>
    <property name="flags" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusObjectManagerClientFlags"/>
    </property>
    <property name="get-proxy-type-destroy-notify" writable="1" construct-only="1" transfer-ownership="none">
      <type name="any"/>
    </property>
    <property name="get-proxy-type-func" writable="1" construct-only="1" transfer-ownership="none">
      <type name="any"/>
    </property>
    <property name="get-proxy-type-user-data" writable="1" construct-only="1" transfer-ownership="none">
      <type name="any"/>
    </property>
    <property name="name" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="name-owner" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="object-path" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <glib:signal name="interface-proxy-properties-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object_proxy" transfer-ownership="none">
          <type name="DBusObjectProxy"/>
        </parameter>
        <parameter name="interface_proxy" transfer-ownership="none">
          <type name="DBusProxy"/>
        </parameter>
        <parameter name="changed_properties" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="invalidated_properties" transfer-ownership="none">
          <array zero-terminated="1">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="interface-proxy-signal" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object_proxy" transfer-ownership="none">
          <type name="DBusObjectProxy"/>
        </parameter>
        <parameter name="interface_proxy" transfer-ownership="none">
          <type name="DBusProxy"/>
        </parameter>
        <parameter name="sender_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="interface_proxy_properties_changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object_proxy" transfer-ownership="none">
          <type name="DBusObjectProxy"/>
        </parameter>
        <parameter name="interface_proxy" transfer-ownership="none">
          <type name="DBusProxy"/>
        </parameter>
        <parameter name="changed_properties" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="invalidated_properties" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="interface_proxy_signal" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object_proxy" transfer-ownership="none">
          <type name="DBusObjectProxy"/>
        </parameter>
        <parameter name="interface_proxy" transfer-ownership="none">
          <type name="DBusProxy"/>
        </parameter>
        <parameter name="sender_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct DBusObjectManagerClientClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="interface_proxy_signal">
    <callback name="interface_proxy_signal">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManagerClient"/>
        </parameter>
        <parameter name="object_proxy" transfer-ownership="none">
          <type name="DBusObjectProxy"/>
        </parameter>
        <parameter name="interface_proxy" transfer-ownership="none">
          <type name="DBusProxy"/>
        </parameter>
        <parameter name="sender_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="interface_proxy_properties_changed">
    <callback name="interface_proxy_properties_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManagerClient"/>
        </parameter>
        <parameter name="object_proxy" transfer-ownership="none">
          <type name="DBusObjectProxy"/>
        </parameter>
        <parameter name="interface_proxy" transfer-ownership="none">
          <type name="DBusProxy"/>
        </parameter>
        <parameter name="changed_properties" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="invalidated_properties" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
  <bitfield name="DBusObjectManagerClientFlags" glib:type-name="GDBusObjectManagerClientFlags" glib:get-type="g_dbus_object_manager_client_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE"/>
    </member>
    <member name="do_not_auto_start" value="1">
      <attribute name="c:identifier" value="G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START"/>
    </member>
  </bitfield>
struct DBusObjectManagerClientPrivate
{
};
struct DBusObjectManagerIface
{
 glib:is-gtype-struct="1"  <field name="parent_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="get_object_path">
    <callback name="get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManager"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_objects">
    <callback name="get_objects">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="DBusObject"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManager"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_object">
    <callback name="get_object">
      <return-value transfer-ownership="full">
        <type name="DBusObject"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManager"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_interface">
    <callback name="get_interface">
      <return-value transfer-ownership="full">
        <type name="DBusInterface"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManager"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="object_added">
    <callback name="object_added">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManager"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="object_removed">
    <callback name="object_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManager"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="interface_added">
    <callback name="interface_added">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManager"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="interface_removed">
    <callback name="interface_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="manager" transfer-ownership="none">
          <type name="DBusObjectManager"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObject"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterface"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="DBusObjectManagerServer" parent="GObject.Object" glib:type-struct="DBusObjectManagerServerClass" glib:type-name="GDBusObjectManagerServer" glib:get-type="g_dbus_object_manager_server_get_type">
    <implements name="DBusObjectManager"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="DBusObjectManagerServerPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_dbus_object_manager_server_new">
      <return-value transfer-ownership="full">
        <type name="DBusObjectManagerServer"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="export" c:identifier="g_dbus_object_manager_server_export">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObjectSkeleton"/>
        </parameter>
      </parameters>
    </method>
    <method name="export_uniquely" c:identifier="g_dbus_object_manager_server_export_uniquely">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObjectSkeleton"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_connection" c:identifier="g_dbus_object_manager_server_get_connection">
      <return-value transfer-ownership="full">
        <type name="DBusConnection"/>
      </return-value>
    </method>
    <method name="set_connection" c:identifier="g_dbus_object_manager_server_set_connection">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none" allow-none="1">
          <type name="DBusConnection"/>
        </parameter>
      </parameters>
    </method>
    <method name="unexport" c:identifier="g_dbus_object_manager_server_unexport">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <property name="connection" writable="1" transfer-ownership="none">
      <type name="DBusConnection"/>
    </property>
    <property name="object-path" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
  </class>
struct DBusObjectManagerServerClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
struct DBusObjectManagerServerPrivate
{
};
  <class name="DBusObjectProxy" parent="GObject.Object" glib:type-struct="DBusObjectProxyClass" glib:type-name="GDBusObjectProxy" glib:get-type="g_dbus_object_proxy_get_type">
    <implements name="DBusObject"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="DBusObjectProxyPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_dbus_object_proxy_new">
      <return-value transfer-ownership="full">
        <type name="DBusObjectProxy"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_connection" c:identifier="g_dbus_object_proxy_get_connection">
      <return-value transfer-ownership="none">
        <type name="DBusConnection"/>
      </return-value>
    </method>
    <property name="g-connection" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusConnection"/>
    </property>
    <property name="g-object-path" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
  </class>
struct DBusObjectProxyClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
struct DBusObjectProxyPrivate
{
};
  <class name="DBusObjectSkeleton" parent="GObject.Object" glib:type-struct="DBusObjectSkeletonClass" glib:type-name="GDBusObjectSkeleton" glib:get-type="g_dbus_object_skeleton_get_type">
    <implements name="DBusObject"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="DBusObjectSkeletonPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_dbus_object_skeleton_new">
      <return-value transfer-ownership="full">
        <type name="DBusObjectSkeleton"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="add_interface" c:identifier="g_dbus_object_skeleton_add_interface">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
      </parameters>
    </method>
    <method name="flush" c:identifier="g_dbus_object_skeleton_flush">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="remove_interface" c:identifier="g_dbus_object_skeleton_remove_interface">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
      </parameters>
    </method>
    <method name="remove_interface_by_name" c:identifier="g_dbus_object_skeleton_remove_interface_by_name">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_object_path" c:identifier="g_dbus_object_skeleton_set_object_path">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <property name="g-object-path" writable="1" construct="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <glib:signal name="authorize-method" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="interface" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
        <parameter name="invocation" transfer-ownership="none">
          <type name="DBusMethodInvocation"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="authorize_method" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
        <parameter name="invocation" transfer-ownership="none">
          <type name="DBusMethodInvocation"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct DBusObjectSkeletonClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="authorize_method">
    <callback name="authorize_method">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="DBusObjectSkeleton"/>
        </parameter>
        <parameter name="interface_" transfer-ownership="none">
          <type name="DBusInterfaceSkeleton"/>
        </parameter>
        <parameter name="invocation" transfer-ownership="none">
          <type name="DBusMethodInvocation"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
struct DBusObjectSkeletonPrivate
{
};
struct DBusPropertyInfo
{
 glib:type-name="GDBusPropertyInfo" glib:get-type="g_dbus_property_info_get_type"  <field name="ref_count" writable="1">
    <type name="gint32"/>
  </field>
  <field name="name" writable="1">
    <type name="utf8"/>
  </field>
  <field name="signature" writable="1">
    <type name="utf8"/>
  </field>
  <field name="flags" writable="1">
    <type name="DBusPropertyInfoFlags"/>
  </field>
  <field name="annotations" writable="1">
    <array zero-terminated="1">
      <type name="DBusAnnotationInfo"/>
    </array>
  </field>
  <method name="ref" c:identifier="g_dbus_property_info_ref">
    <return-value transfer-ownership="full">
      <type name="DBusPropertyInfo"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_dbus_property_info_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <bitfield name="DBusPropertyInfoFlags" glib:type-name="GDBusPropertyInfoFlags" glib:get-type="g_dbus_property_info_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_PROPERTY_INFO_FLAGS_NONE"/>
    </member>
    <member name="readable" value="1">
      <attribute name="c:identifier" value="G_DBUS_PROPERTY_INFO_FLAGS_READABLE"/>
    </member>
    <member name="writable" value="2">
      <attribute name="c:identifier" value="G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE"/>
    </member>
  </bitfield>
  <class name="DBusProxy" parent="GObject.Object" glib:type-struct="DBusProxyClass" glib:type-name="GDBusProxy" glib:get-type="g_dbus_proxy_get_type">
    <implements name="AsyncInitable"/>
    <implements name="DBusInterface"/>
    <implements name="Initable"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="DBusProxyPrivate"/>
    </field>
    <constructor name="new_finish" c:identifier="g_dbus_proxy_new_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusProxy"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_for_bus_finish" c:identifier="g_dbus_proxy_new_for_bus_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusProxy"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_for_bus_sync" c:identifier="g_dbus_proxy_new_for_bus_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusProxy"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusProxyFlags"/>
        </parameter>
        <parameter name="info" transfer-ownership="none" allow-none="1">
          <type name="DBusInterfaceInfo"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_sync" c:identifier="g_dbus_proxy_new_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusProxy"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusProxyFlags"/>
        </parameter>
        <parameter name="info" transfer-ownership="none" allow-none="1">
          <type name="DBusInterfaceInfo"/>
        </parameter>
        <parameter name="name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="new" c:identifier="g_dbus_proxy_new">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusProxyFlags"/>
        </parameter>
        <parameter name="info" transfer-ownership="none" allow-none="1">
          <type name="DBusInterfaceInfo"/>
        </parameter>
        <parameter name="name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="8">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <function name="new_for_bus" c:identifier="g_dbus_proxy_new_for_bus">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusProxyFlags"/>
        </parameter>
        <parameter name="info" transfer-ownership="none" allow-none="1">
          <type name="DBusInterfaceInfo"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="8">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <method name="call" c:identifier="g_dbus_proxy_call">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusCallFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_finish" c:identifier="g_dbus_proxy_call_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_sync" c:identifier="g_dbus_proxy_call_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusCallFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_with_unix_fd_list" c:identifier="g_dbus_proxy_call_with_unix_fd_list">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusCallFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="fd_list" transfer-ownership="none" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="7">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_with_unix_fd_list_finish" c:identifier="g_dbus_proxy_call_with_unix_fd_list_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="out_fd_list" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="call_with_unix_fd_list_sync" c:identifier="g_dbus_proxy_call_with_unix_fd_list_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="method_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusCallFlags"/>
        </parameter>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="fd_list" transfer-ownership="none" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
        <parameter name="out_fd_list" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="UnixFDList"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_cached_property" c:identifier="g_dbus_proxy_get_cached_property">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="property_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_cached_property_names" c:identifier="g_dbus_proxy_get_cached_property_names">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="get_connection" c:identifier="g_dbus_proxy_get_connection">
      <return-value transfer-ownership="none">
        <type name="DBusConnection"/>
      </return-value>
    </method>
    <method name="get_default_timeout" c:identifier="g_dbus_proxy_get_default_timeout">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="get_flags" c:identifier="g_dbus_proxy_get_flags">
      <return-value transfer-ownership="none">
        <type name="DBusProxyFlags"/>
      </return-value>
    </method>
    <method name="get_interface_info" c:identifier="g_dbus_proxy_get_interface_info">
      <return-value transfer-ownership="full">
        <type name="DBusInterfaceInfo"/>
      </return-value>
    </method>
    <method name="get_interface_name" c:identifier="g_dbus_proxy_get_interface_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_name" c:identifier="g_dbus_proxy_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_name_owner" c:identifier="g_dbus_proxy_get_name_owner">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_object_path" c:identifier="g_dbus_proxy_get_object_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="set_cached_property" c:identifier="g_dbus_proxy_set_cached_property">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="property_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_default_timeout" c:identifier="g_dbus_proxy_set_default_timeout">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="timeout_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_interface_info" c:identifier="g_dbus_proxy_set_interface_info">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none" allow-none="1">
          <type name="DBusInterfaceInfo"/>
        </parameter>
      </parameters>
    </method>
    <property name="g-bus-type" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="BusType"/>
    </property>
    <property name="g-connection" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusConnection"/>
    </property>
    <property name="g-default-timeout" writable="1" construct="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
    <property name="g-flags" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusProxyFlags"/>
    </property>
    <property name="g-interface-info" writable="1" transfer-ownership="none">
      <type name="DBusInterfaceInfo"/>
    </property>
    <property name="g-interface-name" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="g-name" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="g-name-owner" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="g-object-path" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <glib:signal name="g-properties-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="changed_properties" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="invalidated_properties" transfer-ownership="none">
          <array zero-terminated="1">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="g-signal" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="sender_name" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="g_properties_changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="changed_properties" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="invalidated_properties" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="g_signal" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="sender_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct DBusProxyClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="g_properties_changed">
    <callback name="g_properties_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="DBusProxy"/>
        </parameter>
        <parameter name="changed_properties" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="invalidated_properties" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="g_signal">
    <callback name="g_signal">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="DBusProxy"/>
        </parameter>
        <parameter name="sender_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="32">
      <type name="any"/>
    </array>
  </field>
};
  <bitfield name="DBusProxyFlags" glib:type-name="GDBusProxyFlags" glib:get-type="g_dbus_proxy_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_PROXY_FLAGS_NONE"/>
    </member>
    <member name="do_not_load_properties" value="1">
      <attribute name="c:identifier" value="G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES"/>
    </member>
    <member name="do_not_connect_signals" value="2">
      <attribute name="c:identifier" value="G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS"/>
    </member>
    <member name="do_not_auto_start" value="4">
      <attribute name="c:identifier" value="G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START"/>
    </member>
    <member name="get_invalidated_properties" value="8">
      <attribute name="c:identifier" value="G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES"/>
    </member>
  </bitfield>
struct DBusProxyPrivate
{
};
  <callback name="DBusProxyTypeFunc">
    <return-value transfer-ownership="none">
      <type name="GType"/>
    </return-value>
    <parameters>
      <parameter name="manager" transfer-ownership="none">
        <type name="DBusObjectManagerClient"/>
      </parameter>
      <parameter name="object_path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="interface_name" transfer-ownership="none" allow-none="1">
        <type name="utf8"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="3">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <bitfield name="DBusSendMessageFlags" glib:type-name="GDBusSendMessageFlags" glib:get-type="g_dbus_send_message_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_SEND_MESSAGE_FLAGS_NONE"/>
    </member>
    <member name="preserve_serial" value="1">
      <attribute name="c:identifier" value="G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL"/>
    </member>
  </bitfield>
  <class name="DBusServer" parent="GObject.Object" glib:type-name="GDBusServer" glib:get-type="g_dbus_server_get_type">
    <implements name="Initable"/>
    <constructor name="new_sync" c:identifier="g_dbus_server_new_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusServer"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DBusServerFlags"/>
        </parameter>
        <parameter name="guid" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="observer" transfer-ownership="none" allow-none="1">
          <type name="DBusAuthObserver"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_client_address" c:identifier="g_dbus_server_get_client_address">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_flags" c:identifier="g_dbus_server_get_flags">
      <return-value transfer-ownership="none">
        <type name="DBusServerFlags"/>
      </return-value>
    </method>
    <method name="get_guid" c:identifier="g_dbus_server_get_guid">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="is_active" c:identifier="g_dbus_server_is_active">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="start" c:identifier="g_dbus_server_start">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="stop" c:identifier="g_dbus_server_stop">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <property name="active" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="address" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="authentication-observer" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusAuthObserver"/>
    </property>
    <property name="client-address" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="flags" writable="1" construct-only="1" transfer-ownership="none">
      <type name="DBusServerFlags"/>
    </property>
    <property name="guid" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <glib:signal name="new-connection" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
      </parameters>
    </glib:signal>
  </class>
  <bitfield name="DBusServerFlags" glib:type-name="GDBusServerFlags" glib:get-type="g_dbus_server_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_SERVER_FLAGS_NONE"/>
    </member>
    <member name="run_in_thread" value="1">
      <attribute name="c:identifier" value="G_DBUS_SERVER_FLAGS_RUN_IN_THREAD"/>
    </member>
    <member name="authentication_allow_anonymous" value="2">
      <attribute name="c:identifier" value="G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS"/>
    </member>
  </bitfield>
  <callback name="DBusSignalCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="sender_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="object_path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="interface_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="signal_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="parameters" transfer-ownership="none">
        <type name="GLib.Variant"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="6">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <bitfield name="DBusSignalFlags" glib:type-name="GDBusSignalFlags" glib:get-type="g_dbus_signal_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_SIGNAL_FLAGS_NONE"/>
    </member>
    <member name="no_match_rule" value="1">
      <attribute name="c:identifier" value="G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE"/>
    </member>
  </bitfield>
struct DBusSignalInfo
{
 glib:type-name="GDBusSignalInfo" glib:get-type="g_dbus_signal_info_get_type"  <field name="ref_count" writable="1">
    <type name="gint32"/>
  </field>
  <field name="name" writable="1">
    <type name="utf8"/>
  </field>
  <field name="args" writable="1">
    <array zero-terminated="1">
      <type name="DBusArgInfo"/>
    </array>
  </field>
  <field name="annotations" writable="1">
    <array zero-terminated="1">
      <type name="DBusAnnotationInfo"/>
    </array>
  </field>
  <method name="ref" c:identifier="g_dbus_signal_info_ref">
    <return-value transfer-ownership="full">
      <type name="DBusSignalInfo"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_dbus_signal_info_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <callback name="DBusSubtreeDispatchFunc">
    <return-value transfer-ownership="none">
      <type name="DBusInterfaceVTable"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="sender" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="object_path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="interface_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="node" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="out_user_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="6">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <bitfield name="DBusSubtreeFlags" glib:type-name="GDBusSubtreeFlags" glib:get-type="g_dbus_subtree_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DBUS_SUBTREE_FLAGS_NONE"/>
    </member>
    <member name="dispatch_to_unenumerated_nodes" value="1">
      <attribute name="c:identifier" value="G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES"/>
    </member>
  </bitfield>
  <callback name="DBusSubtreeIntrospectFunc">
    <return-value transfer-ownership="full">
      <type name="DBusInterfaceInfo"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="sender" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="object_path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="node" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="4">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
struct DBusSubtreeVTable
{
  <field name="enumerate" writable="1">
    <type name="any"/>
  </field>
  <field name="introspect" writable="1">
    <callback name="DBusSubtreeIntrospectFunc">
      <return-value transfer-ownership="full">
        <type name="DBusInterfaceInfo"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="node" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="dispatch" writable="1">
    <callback name="DBusSubtreeDispatchFunc">
      <return-value transfer-ownership="none">
        <type name="DBusInterfaceVTable"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="node" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="out_user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
  <constant name="DESKTOP_APP_INFO_LOOKUP_EXTENSION_POINT_NAME" value="gio-desktop-app-info-lookup">
    <type name="utf8"/>
  </constant>
  <class name="DataInputStream" parent="BufferedInputStream" glib:type-struct="DataInputStreamClass" glib:type-name="GDataInputStream" glib:get-type="g_data_input_stream_get_type">
    <field name="parent_instance">
      <type name="BufferedInputStream"/>
    </field>
    <field name="priv">
      <type name="DataInputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_data_input_stream_new">
      <return-value transfer-ownership="full">
        <type name="DataInputStream"/>
      </return-value>
      <parameters>
        <parameter name="base_stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_byte_order" c:identifier="g_data_input_stream_get_byte_order">
      <return-value transfer-ownership="none">
        <type name="DataStreamByteOrder"/>
      </return-value>
    </method>
    <method name="get_newline_type" c:identifier="g_data_input_stream_get_newline_type">
      <return-value transfer-ownership="none">
        <type name="DataStreamNewlineType"/>
      </return-value>
    </method>
    <method name="read_byte" c:identifier="g_data_input_stream_read_byte" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint8"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_int16" c:identifier="g_data_input_stream_read_int16" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint16"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_int32" c:identifier="g_data_input_stream_read_int32" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_int64" c:identifier="g_data_input_stream_read_int64" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_line" c:identifier="g_data_input_stream_read_line" throws="1">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="guint8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_line_async" c:identifier="g_data_input_stream_read_line_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_line_finish" c:identifier="g_data_input_stream_read_line_finish" throws="1">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="guint8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_line_finish_utf8" c:identifier="g_data_input_stream_read_line_finish_utf8" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_line_utf8" c:identifier="g_data_input_stream_read_line_utf8" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_uint16" c:identifier="g_data_input_stream_read_uint16" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint16"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_uint32" c:identifier="g_data_input_stream_read_uint32" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_uint64" c:identifier="g_data_input_stream_read_uint64" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_until" c:identifier="g_data_input_stream_read_until" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="stop_chars" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_until_async" c:identifier="g_data_input_stream_read_until_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stop_chars" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_until_finish" c:identifier="g_data_input_stream_read_until_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_upto" c:identifier="g_data_input_stream_read_upto" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="stop_chars" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="stop_chars_len" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_upto_async" c:identifier="g_data_input_stream_read_upto_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stop_chars" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="stop_chars_len" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_upto_finish" c:identifier="g_data_input_stream_read_upto_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_byte_order" c:identifier="g_data_input_stream_set_byte_order">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="order" transfer-ownership="none">
          <type name="DataStreamByteOrder"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_newline_type" c:identifier="g_data_input_stream_set_newline_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="DataStreamNewlineType"/>
        </parameter>
      </parameters>
    </method>
    <property name="byte-order" writable="1" transfer-ownership="none">
      <type name="DataStreamByteOrder"/>
    </property>
    <property name="newline-type" writable="1" transfer-ownership="none">
      <type name="DataStreamNewlineType"/>
    </property>
  </class>
struct DataInputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="BufferedInputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct DataInputStreamPrivate
{
};
  <class name="DataOutputStream" parent="FilterOutputStream" glib:type-struct="DataOutputStreamClass" glib:type-name="GDataOutputStream" glib:get-type="g_data_output_stream_get_type">
    <field name="parent_instance">
      <type name="FilterOutputStream"/>
    </field>
    <field name="priv">
      <type name="DataOutputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_data_output_stream_new">
      <return-value transfer-ownership="full">
        <type name="DataOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="base_stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_byte_order" c:identifier="g_data_output_stream_get_byte_order">
      <return-value transfer-ownership="none">
        <type name="DataStreamByteOrder"/>
      </return-value>
    </method>
    <method name="put_byte" c:identifier="g_data_output_stream_put_byte" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="guint8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="put_int16" c:identifier="g_data_output_stream_put_int16" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="gint16"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="put_int32" c:identifier="g_data_output_stream_put_int32" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="put_int64" c:identifier="g_data_output_stream_put_int64" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="put_string" c:identifier="g_data_output_stream_put_string" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="put_uint16" c:identifier="g_data_output_stream_put_uint16" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="put_uint32" c:identifier="g_data_output_stream_put_uint32" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="put_uint64" c:identifier="g_data_output_stream_put_uint64" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_byte_order" c:identifier="g_data_output_stream_set_byte_order">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="order" transfer-ownership="none">
          <type name="DataStreamByteOrder"/>
        </parameter>
      </parameters>
    </method>
    <property name="byte-order" writable="1" transfer-ownership="none">
      <type name="DataStreamByteOrder"/>
    </property>
  </class>
struct DataOutputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="FilterOutputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct DataOutputStreamPrivate
{
};
  <enumeration name="DataStreamByteOrder" glib:type-name="GDataStreamByteOrder" glib:get-type="g_data_stream_byte_order_get_type">
    <member name="big_endian" value="0">
      <attribute name="c:identifier" value="G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN"/>
    </member>
    <member name="little_endian" value="1">
      <attribute name="c:identifier" value="G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN"/>
    </member>
    <member name="host_endian" value="2">
      <attribute name="c:identifier" value="G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN"/>
    </member>
  </enumeration>
  <enumeration name="DataStreamNewlineType" glib:type-name="GDataStreamNewlineType" glib:get-type="g_data_stream_newline_type_get_type">
    <member name="lf" value="0">
      <attribute name="c:identifier" value="G_DATA_STREAM_NEWLINE_TYPE_LF"/>
    </member>
    <member name="cr" value="1">
      <attribute name="c:identifier" value="G_DATA_STREAM_NEWLINE_TYPE_CR"/>
    </member>
    <member name="cr_lf" value="2">
      <attribute name="c:identifier" value="G_DATA_STREAM_NEWLINE_TYPE_CR_LF"/>
    </member>
    <member name="any" value="3">
      <attribute name="c:identifier" value="G_DATA_STREAM_NEWLINE_TYPE_ANY"/>
    </member>
  </enumeration>
  <class name="DesktopAppInfo" parent="GObject.Object" glib:type-struct="DesktopAppInfoClass" glib:type-name="GDesktopAppInfo" glib:get-type="g_desktop_app_info_get_type">
    <implements name="AppInfo"/>
    <constructor name="new" c:identifier="g_desktop_app_info_new">
      <return-value transfer-ownership="full">
        <type name="DesktopAppInfo"/>
      </return-value>
      <parameters>
        <parameter name="desktop_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_filename" c:identifier="g_desktop_app_info_new_from_filename">
      <return-value transfer-ownership="full">
        <type name="DesktopAppInfo"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_keyfile" c:identifier="g_desktop_app_info_new_from_keyfile">
      <return-value transfer-ownership="full">
        <type name="DesktopAppInfo"/>
      </return-value>
      <parameters>
        <parameter name="key_file" transfer-ownership="none">
          <type name="GLib.KeyFile"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="set_desktop_env" c:identifier="g_desktop_app_info_set_desktop_env">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="desktop_env" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <method name="get_categories" c:identifier="g_desktop_app_info_get_categories">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_filename" c:identifier="g_desktop_app_info_get_filename">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_generic_name" c:identifier="g_desktop_app_info_get_generic_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_is_hidden" c:identifier="g_desktop_app_info_get_is_hidden">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_keywords" c:identifier="g_desktop_app_info_get_keywords">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="get_nodisplay" c:identifier="g_desktop_app_info_get_nodisplay">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_show_in" c:identifier="g_desktop_app_info_get_show_in">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="desktop_env" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="launch_uris_as_manager" c:identifier="g_desktop_app_info_launch_uris_as_manager" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uris" transfer-ownership="none">
          <type name="GLib.List">
            <type name="utf8"/>
          </type>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none">
          <type name="AppLaunchContext"/>
        </parameter>
        <parameter name="spawn_flags" transfer-ownership="none">
          <type name="GLib.SpawnFlags"/>
        </parameter>
        <parameter name="user_setup" transfer-ownership="none" scope="call" closure="4">
          <type name="GLib.SpawnChildSetupFunc"/>
        </parameter>
        <parameter name="user_setup_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
        <parameter name="pid_callback" transfer-ownership="none" scope="call" closure="6">
          <type name="DesktopAppLaunchCallback"/>
        </parameter>
        <parameter name="pid_callback_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <property name="filename" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
  </class>
struct DesktopAppInfoClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
};
  <interface name="DesktopAppInfoLookup" glib:type-name="GDesktopAppInfoLookup" glib:get-type="g_desktop_app_info_lookup_get_type" glib:type-struct="DesktopAppInfoLookupIface">
    <method name="get_default_for_uri_scheme" c:identifier="g_desktop_app_info_lookup_get_default_for_uri_scheme" deprecated="1">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
      <parameters>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="get_default_for_uri_scheme" offset="65535" invoker="get_default_for_uri_scheme">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
      <parameters>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct DesktopAppInfoLookupIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="get_default_for_uri_scheme">
    <callback name="get_default_for_uri_scheme">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
      <parameters>
        <parameter name="lookup" transfer-ownership="none">
          <type name="DesktopAppInfoLookup"/>
        </parameter>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <callback name="DesktopAppLaunchCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="appinfo" transfer-ownership="none">
        <type name="DesktopAppInfo"/>
      </parameter>
      <parameter name="pid" transfer-ownership="none">
        <type name="gint32"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <interface name="Drive" glib:type-name="GDrive" glib:get-type="g_drive_get_type" glib:type-struct="DriveIface">
    <method name="can_eject" c:identifier="g_drive_can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="can_poll_for_media" c:identifier="g_drive_can_poll_for_media">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="can_start" c:identifier="g_drive_can_start">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="can_start_degraded" c:identifier="g_drive_can_start_degraded">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="can_stop" c:identifier="g_drive_can_stop">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="eject" c:identifier="g_drive_eject" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_finish" c:identifier="g_drive_eject_finish" deprecated="1" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_with_operation" c:identifier="g_drive_eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_with_operation_finish" c:identifier="g_drive_eject_with_operation_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="enumerate_identifiers" c:identifier="g_drive_enumerate_identifiers">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="get_icon" c:identifier="g_drive_get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
    </method>
    <method name="get_identifier" c:identifier="g_drive_get_identifier">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_name" c:identifier="g_drive_get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_sort_key" c:identifier="g_drive_get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_start_stop_type" c:identifier="g_drive_get_start_stop_type">
      <return-value transfer-ownership="none">
        <type name="DriveStartStopType"/>
      </return-value>
    </method>
    <method name="get_volumes" c:identifier="g_drive_get_volumes">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Volume"/>
        </type>
      </return-value>
    </method>
    <method name="has_media" c:identifier="g_drive_has_media">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="has_volumes" c:identifier="g_drive_has_volumes">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="is_media_check_automatic" c:identifier="g_drive_is_media_check_automatic">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="is_media_removable" c:identifier="g_drive_is_media_removable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="poll_for_media" c:identifier="g_drive_poll_for_media">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="poll_for_media_finish" c:identifier="g_drive_poll_for_media_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="start" c:identifier="g_drive_start">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="DriveStartFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="start_finish" c:identifier="g_drive_start_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="stop" c:identifier="g_drive_stop">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="stop_finish" c:identifier="g_drive_stop_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <glib:signal name="changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="disconnected" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="eject-button" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="stop-button" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <virtual-method name="can_eject" offset="65535" invoker="can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_poll_for_media" offset="65535" invoker="can_poll_for_media">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_start" offset="65535" invoker="can_start">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_start_degraded" offset="65535" invoker="can_start_degraded">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_stop" offset="65535" invoker="can_stop">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="disconnected" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="eject" offset="65535" invoker="eject">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_button" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="eject_finish" throws="1" offset="65535" invoker="eject_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_with_operation" offset="65535" invoker="eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_with_operation_finish" throws="1" offset="65535" invoker="eject_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="enumerate_identifiers" offset="65535" invoker="enumerate_identifiers">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </virtual-method>
    <virtual-method name="get_icon" offset="65535" invoker="get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_identifier" offset="65535" invoker="get_identifier">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_name" offset="65535" invoker="get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_sort_key" offset="65535" invoker="get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_start_stop_type" offset="65535" invoker="get_start_stop_type">
      <return-value transfer-ownership="none">
        <type name="DriveStartStopType"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_volumes" offset="65535" invoker="get_volumes">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Volume"/>
        </type>
      </return-value>
    </virtual-method>
    <virtual-method name="has_media" offset="65535" invoker="has_media">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="has_volumes" offset="65535" invoker="has_volumes">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="is_media_check_automatic" offset="65535" invoker="is_media_check_automatic">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="is_media_removable" offset="65535" invoker="is_media_removable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="poll_for_media" offset="65535" invoker="poll_for_media">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="poll_for_media_finish" throws="1" offset="65535" invoker="poll_for_media_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="start" offset="65535" invoker="start">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="DriveStartFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="start_finish" throws="1" offset="65535" invoker="start_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="stop" offset="65535" invoker="stop">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="stop_button" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="stop_finish" throws="1" offset="65535" invoker="stop_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct DriveIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="changed">
    <callback name="changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="disconnected">
    <callback name="disconnected">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_button">
    <callback name="eject_button">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_name">
    <callback name="get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_icon">
    <callback name="get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="has_volumes">
    <callback name="has_volumes">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_volumes">
    <callback name="get_volumes">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Volume"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="is_media_removable">
    <callback name="is_media_removable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="has_media">
    <callback name="has_media">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="is_media_check_automatic">
    <callback name="is_media_check_automatic">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_eject">
    <callback name="can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_poll_for_media">
    <callback name="can_poll_for_media">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject">
    <callback name="eject">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_finish">
    <callback name="eject_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="poll_for_media">
    <callback name="poll_for_media">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="poll_for_media_finish">
    <callback name="poll_for_media_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_identifier">
    <callback name="get_identifier">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="kind" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="enumerate_identifiers">
    <callback name="enumerate_identifiers">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_start_stop_type">
    <callback name="get_start_stop_type">
      <return-value transfer-ownership="none">
        <type name="DriveStartStopType"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_start">
    <callback name="can_start">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_start_degraded">
    <callback name="can_start_degraded">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="start">
    <callback name="start">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DriveStartFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="start_finish">
    <callback name="start_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_stop">
    <callback name="can_stop">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="stop">
    <callback name="stop">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="stop_finish">
    <callback name="stop_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="stop_button">
    <callback name="stop_button">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_with_operation">
    <callback name="eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_with_operation_finish">
    <callback name="eject_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_sort_key">
    <callback name="get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <bitfield name="DriveStartFlags" glib:type-name="GDriveStartFlags" glib:get-type="g_drive_start_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_DRIVE_START_NONE"/>
    </member>
  </bitfield>
  <enumeration name="DriveStartStopType" glib:type-name="GDriveStartStopType" glib:get-type="g_drive_start_stop_type_get_type">
    <member name="unknown" value="0">
      <attribute name="c:identifier" value="G_DRIVE_START_STOP_TYPE_UNKNOWN"/>
    </member>
    <member name="shutdown" value="1">
      <attribute name="c:identifier" value="G_DRIVE_START_STOP_TYPE_SHUTDOWN"/>
    </member>
    <member name="network" value="2">
      <attribute name="c:identifier" value="G_DRIVE_START_STOP_TYPE_NETWORK"/>
    </member>
    <member name="multidisk" value="3">
      <attribute name="c:identifier" value="G_DRIVE_START_STOP_TYPE_MULTIDISK"/>
    </member>
    <member name="password" value="4">
      <attribute name="c:identifier" value="G_DRIVE_START_STOP_TYPE_PASSWORD"/>
    </member>
  </enumeration>
  <class name="Emblem" parent="GObject.Object" glib:type-struct="EmblemClass" glib:type-name="GEmblem" glib:get-type="g_emblem_get_type">
    <implements name="Icon"/>
    <constructor name="new" c:identifier="g_emblem_new">
      <return-value transfer-ownership="full">
        <type name="Emblem"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="Icon"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_with_origin" c:identifier="g_emblem_new_with_origin">
      <return-value transfer-ownership="full">
        <type name="Emblem"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="Icon"/>
        </parameter>
        <parameter name="origin" transfer-ownership="none">
          <type name="EmblemOrigin"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_icon" c:identifier="g_emblem_get_icon">
      <return-value transfer-ownership="none">
        <type name="Icon"/>
      </return-value>
    </method>
    <method name="get_origin" c:identifier="g_emblem_get_origin">
      <return-value transfer-ownership="none">
        <type name="EmblemOrigin"/>
      </return-value>
    </method>
    <property name="icon" writable="1" construct-only="1" transfer-ownership="none">
      <type name="GObject.Object"/>
    </property>
    <property name="origin" writable="1" construct-only="1" transfer-ownership="none">
      <type name="EmblemOrigin"/>
    </property>
  </class>
struct EmblemClass
{
 glib:is-gtype-struct="1"};
  <enumeration name="EmblemOrigin" glib:type-name="GEmblemOrigin" glib:get-type="g_emblem_origin_get_type">
    <member name="unknown" value="0">
      <attribute name="c:identifier" value="G_EMBLEM_ORIGIN_UNKNOWN"/>
    </member>
    <member name="device" value="1">
      <attribute name="c:identifier" value="G_EMBLEM_ORIGIN_DEVICE"/>
    </member>
    <member name="livemetadata" value="2">
      <attribute name="c:identifier" value="G_EMBLEM_ORIGIN_LIVEMETADATA"/>
    </member>
    <member name="tag" value="3">
      <attribute name="c:identifier" value="G_EMBLEM_ORIGIN_TAG"/>
    </member>
  </enumeration>
  <class name="EmblemedIcon" parent="GObject.Object" glib:type-struct="EmblemedIconClass" glib:type-name="GEmblemedIcon" glib:get-type="g_emblemed_icon_get_type">
    <implements name="Icon"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="EmblemedIconPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_emblemed_icon_new">
      <return-value transfer-ownership="full">
        <type name="EmblemedIcon"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="Icon"/>
        </parameter>
        <parameter name="emblem" transfer-ownership="none" allow-none="1">
          <type name="Emblem"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="add_emblem" c:identifier="g_emblemed_icon_add_emblem">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="emblem" transfer-ownership="none">
          <type name="Emblem"/>
        </parameter>
      </parameters>
    </method>
    <method name="clear_emblems" c:identifier="g_emblemed_icon_clear_emblems">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="get_emblems" c:identifier="g_emblemed_icon_get_emblems">
      <return-value transfer-ownership="none">
        <type name="GLib.List">
          <type name="Emblem"/>
        </type>
      </return-value>
    </method>
    <method name="get_icon" c:identifier="g_emblemed_icon_get_icon">
      <return-value transfer-ownership="none">
        <type name="Icon"/>
      </return-value>
    </method>
    <property name="gicon" writable="1" construct-only="1" transfer-ownership="none">
      <type name="Icon"/>
    </property>
  </class>
struct EmblemedIconClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
};
struct EmblemedIconPrivate
{
};
  <constant name="FILE_ATTRIBUTE_ACCESS_CAN_DELETE" value="access::can-delete">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE" value="access::can-execute">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_ACCESS_CAN_READ" value="access::can-read">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_ACCESS_CAN_RENAME" value="access::can-rename">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_ACCESS_CAN_TRASH" value="access::can-trash">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_ACCESS_CAN_WRITE" value="access::can-write">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_DOS_IS_ARCHIVE" value="dos::is-archive">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_DOS_IS_SYSTEM" value="dos::is-system">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_ETAG_VALUE" value="etag::value">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_FILESYSTEM_FREE" value="filesystem::free">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_FILESYSTEM_READONLY" value="filesystem::readonly">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_FILESYSTEM_SIZE" value="filesystem::size">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_FILESYSTEM_TYPE" value="filesystem::type">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_FILESYSTEM_USED" value="filesystem::used">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW" value="filesystem::use-preview">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_GVFS_BACKEND" value="gvfs::backend">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_ID_FILE" value="id::file">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_ID_FILESYSTEM" value="id::filesystem">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT" value="mountable::can-eject">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT" value="mountable::can-mount">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL" value="mountable::can-poll">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_START" value="mountable::can-start">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED" value="mountable::can-start-degraded">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP" value="mountable::can-stop">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT" value="mountable::can-unmount">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI" value="mountable::hal-udi">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC" value="mountable::is-media-check-automatic">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE" value="mountable::start-stop-type">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE" value="mountable::unix-device">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE" value="mountable::unix-device-file">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_OWNER_GROUP" value="owner::group">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_OWNER_USER" value="owner::user">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_OWNER_USER_REAL" value="owner::user-real">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_PREVIEW_ICON" value="preview::icon">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_SELINUX_CONTEXT" value="selinux::context">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE" value="standard::allocated-size">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE" value="standard::content-type">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_COPY_NAME" value="standard::copy-name">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_DESCRIPTION" value="standard::description">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME" value="standard::display-name">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_EDIT_NAME" value="standard::edit-name">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE" value="standard::fast-content-type">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_ICON" value="standard::icon">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_IS_BACKUP" value="standard::is-backup">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_IS_HIDDEN" value="standard::is-hidden">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_IS_SYMLINK" value="standard::is-symlink">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL" value="standard::is-virtual">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_NAME" value="standard::name">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_SIZE" value="standard::size">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_SORT_ORDER" value="standard::sort-order">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET" value="standard::symlink-target">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_TARGET_URI" value="standard::target-uri">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_STANDARD_TYPE" value="standard::type">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_THUMBNAILING_FAILED" value="thumbnail::failed">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_THUMBNAIL_PATH" value="thumbnail::path">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TIME_ACCESS" value="time::access">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TIME_ACCESS_USEC" value="time::access-usec">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TIME_CHANGED" value="time::changed">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TIME_CHANGED_USEC" value="time::changed-usec">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TIME_CREATED" value="time::created">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TIME_CREATED_USEC" value="time::created-usec">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TIME_MODIFIED" value="time::modified">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TIME_MODIFIED_USEC" value="time::modified-usec">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TRASH_DELETION_DATE" value="trash::deletion-date">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TRASH_ITEM_COUNT" value="trash::item-count">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_TRASH_ORIG_PATH" value="trash::orig-path">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_BLOCKS" value="unix::blocks">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_BLOCK_SIZE" value="unix::block-size">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_DEVICE" value="unix::device">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_GID" value="unix::gid">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_INODE" value="unix::inode">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT" value="unix::is-mountpoint">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_MODE" value="unix::mode">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_NLINK" value="unix::nlink">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_RDEV" value="unix::rdev">
    <type name="utf8"/>
  </constant>
  <constant name="FILE_ATTRIBUTE_UNIX_UID" value="unix::uid">
    <type name="utf8"/>
  </constant>
  <interface name="File" glib:type-name="GFile" glib:get-type="g_file_get_type" glib:type-struct="FileIface">
    <function name="new_for_commandline_arg" c:identifier="g_file_new_for_commandline_arg">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="arg" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <function name="new_for_path" c:identifier="g_file_new_for_path">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <function name="new_for_uri" c:identifier="g_file_new_for_uri">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <function name="new_tmp" c:identifier="g_file_new_tmp" throws="1">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="tmpl" transfer-ownership="none" allow-none="1">
          <type name="filename"/>
        </parameter>
        <parameter name="iostream" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="FileIOStream"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_name" c:identifier="g_file_parse_name">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="parse_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <method name="append_to" c:identifier="g_file_append_to" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="append_to_async" c:identifier="g_file_append_to_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="append_to_finish" c:identifier="g_file_append_to_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="copy" c:identifier="g_file_copy" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="destination" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCopyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="progress_callback" transfer-ownership="none" allow-none="1" scope="call" closure="4">
          <type name="FileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="copy_attributes" c:identifier="g_file_copy_attributes" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="destination" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCopyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="copy_finish" c:identifier="g_file_copy_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="create" c:identifier="g_file_create" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="create_async" c:identifier="g_file_create_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="create_finish" c:identifier="g_file_create_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="create_readwrite" c:identifier="g_file_create_readwrite" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="create_readwrite_async" c:identifier="g_file_create_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="create_readwrite_finish" c:identifier="g_file_create_readwrite_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="delete" c:identifier="g_file_delete" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="dup" c:identifier="g_file_dup">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </method>
    <method name="eject_mountable" c:identifier="g_file_eject_mountable" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_mountable_finish" c:identifier="g_file_eject_mountable_finish" deprecated="1" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_mountable_with_operation" c:identifier="g_file_eject_mountable_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_mountable_with_operation_finish" c:identifier="g_file_eject_mountable_with_operation_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="enumerate_children" c:identifier="g_file_enumerate_children" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileEnumerator"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="enumerate_children_async" c:identifier="g_file_enumerate_children_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="enumerate_children_finish" c:identifier="g_file_enumerate_children_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileEnumerator"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="equal" c:identifier="g_file_equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file2" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </method>
    <method name="find_enclosing_mount" c:identifier="g_file_find_enclosing_mount" throws="1">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="find_enclosing_mount_async" c:identifier="g_file_find_enclosing_mount_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="find_enclosing_mount_finish" c:identifier="g_file_find_enclosing_mount_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_basename" c:identifier="g_file_get_basename">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_child" c:identifier="g_file_get_child">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_child_for_display_name" c:identifier="g_file_get_child_for_display_name" throws="1">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_parent" c:identifier="g_file_get_parent">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </method>
    <method name="get_parse_name" c:identifier="g_file_get_parse_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_path" c:identifier="g_file_get_path">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_relative_path" c:identifier="g_file_get_relative_path">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="descendant" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_uri" c:identifier="g_file_get_uri">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_uri_scheme" c:identifier="g_file_get_uri_scheme">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="has_parent" c:identifier="g_file_has_parent">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none" allow-none="1">
          <type name="File"/>
        </parameter>
      </parameters>
    </method>
    <method name="has_prefix" c:identifier="g_file_has_prefix">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="prefix" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </method>
    <method name="has_uri_scheme" c:identifier="g_file_has_uri_scheme">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="hash" c:identifier="g_file_hash">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="is_native" c:identifier="g_file_is_native">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="load_contents" c:identifier="g_file_load_contents" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="contents" transfer-ownership="full" direction="out" caller-allocates="0">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="guint64"/>
        </parameter>
        <parameter name="etag_out" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="load_contents_async" c:identifier="g_file_load_contents_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="load_contents_finish" c:identifier="g_file_load_contents_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="contents" transfer-ownership="full" direction="out" caller-allocates="0">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="guint64"/>
        </parameter>
        <parameter name="etag_out" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="load_partial_contents_finish" c:identifier="g_file_load_partial_contents_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="contents" transfer-ownership="full" direction="out" caller-allocates="0">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="guint64"/>
        </parameter>
        <parameter name="etag_out" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="make_directory" c:identifier="g_file_make_directory" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="make_directory_with_parents" c:identifier="g_file_make_directory_with_parents" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="make_symbolic_link" c:identifier="g_file_make_symbolic_link" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="symlink_value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="monitor" c:identifier="g_file_monitor" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileMonitor"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="monitor_directory" c:identifier="g_file_monitor_directory" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileMonitor"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="monitor_file" c:identifier="g_file_monitor_file" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileMonitor"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="mount_enclosing_volume" c:identifier="g_file_mount_enclosing_volume">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="mount_enclosing_volume_finish" c:identifier="g_file_mount_enclosing_volume_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="mount_mountable" c:identifier="g_file_mount_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="mount_mountable_finish" c:identifier="g_file_mount_mountable_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="move" c:identifier="g_file_move" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="destination" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCopyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="progress_callback" transfer-ownership="none" allow-none="1" scope="call" closure="4">
          <type name="FileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="open_readwrite" c:identifier="g_file_open_readwrite" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="open_readwrite_async" c:identifier="g_file_open_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="open_readwrite_finish" c:identifier="g_file_open_readwrite_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="poll_mountable" c:identifier="g_file_poll_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="poll_mountable_finish" c:identifier="g_file_poll_mountable_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_default_handler" c:identifier="g_file_query_default_handler" throws="1">
      <return-value transfer-ownership="full">
        <type name="AppInfo"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_exists" c:identifier="g_file_query_exists">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_file_type" c:identifier="g_file_query_file_type">
      <return-value transfer-ownership="none">
        <type name="FileType"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_filesystem_info" c:identifier="g_file_query_filesystem_info" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_filesystem_info_async" c:identifier="g_file_query_filesystem_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_filesystem_info_finish" c:identifier="g_file_query_filesystem_info_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info" c:identifier="g_file_query_info" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info_async" c:identifier="g_file_query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info_finish" c:identifier="g_file_query_info_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_settable_attributes" c:identifier="g_file_query_settable_attributes" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileAttributeInfoList"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_writable_namespaces" c:identifier="g_file_query_writable_namespaces" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileAttributeInfoList"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read" c:identifier="g_file_read" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInputStream"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_async" c:identifier="g_file_read_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_finish" c:identifier="g_file_read_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace" c:identifier="g_file_replace" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace_async" c:identifier="g_file_replace_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace_contents" c:identifier="g_file_replace_contents" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="contents" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="new_etag" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace_contents_async" c:identifier="g_file_replace_contents_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="contents" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="7">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace_contents_finish" c:identifier="g_file_replace_contents_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="new_etag" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace_finish" c:identifier="g_file_replace_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace_readwrite" c:identifier="g_file_replace_readwrite" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace_readwrite_async" c:identifier="g_file_replace_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="replace_readwrite_finish" c:identifier="g_file_replace_readwrite_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="resolve_relative_path" c:identifier="g_file_resolve_relative_path">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="relative_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute" c:identifier="g_file_set_attribute" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="FileAttributeType"/>
        </parameter>
        <parameter name="value_p" transfer-ownership="none" allow-none="1">
          <type name="any"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_byte_string" c:identifier="g_file_set_attribute_byte_string" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_int32" c:identifier="g_file_set_attribute_int32" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_int64" c:identifier="g_file_set_attribute_int64" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_string" c:identifier="g_file_set_attribute_string" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_uint32" c:identifier="g_file_set_attribute_uint32" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_uint64" c:identifier="g_file_set_attribute_uint64" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attributes_async" c:identifier="g_file_set_attributes_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attributes_finish" c:identifier="g_file_set_attributes_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="info" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="FileInfo"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attributes_from_info" c:identifier="g_file_set_attributes_from_info" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_display_name" c:identifier="g_file_set_display_name" throws="1">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_display_name_async" c:identifier="g_file_set_display_name_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_display_name_finish" c:identifier="g_file_set_display_name_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="start_mountable" c:identifier="g_file_start_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="DriveStartFlags"/>
        </parameter>
        <parameter name="start_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="start_mountable_finish" c:identifier="g_file_start_mountable_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="stop_mountable" c:identifier="g_file_stop_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="stop_mountable_finish" c:identifier="g_file_stop_mountable_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="supports_thread_contexts" c:identifier="g_file_supports_thread_contexts">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="trash" c:identifier="g_file_trash" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="unmount_mountable" c:identifier="g_file_unmount_mountable" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="unmount_mountable_finish" c:identifier="g_file_unmount_mountable_finish" deprecated="1" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="unmount_mountable_with_operation" c:identifier="g_file_unmount_mountable_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="unmount_mountable_with_operation_finish" c:identifier="g_file_unmount_mountable_with_operation_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="append_to" throws="1" offset="65535" invoker="append_to">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="append_to_async" offset="65535" invoker="append_to_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="append_to_finish" throws="1" offset="65535" invoker="append_to_finish">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="copy" throws="1" offset="65535" invoker="copy">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="destination" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCopyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="progress_callback" transfer-ownership="none" allow-none="1" scope="call" closure="4">
          <type name="FileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="copy_finish" throws="1" offset="65535" invoker="copy_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="create" throws="1" offset="65535" invoker="create">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="create_async" offset="65535" invoker="create_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="create_finish" throws="1" offset="65535" invoker="create_finish">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="create_readwrite" throws="1" offset="65535" invoker="create_readwrite">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="create_readwrite_async" offset="65535" invoker="create_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="create_readwrite_finish" throws="1" offset="65535" invoker="create_readwrite_finish">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="delete_file" throws="1" offset="65535" invoker="delete">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="dup" offset="65535" invoker="dup">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </virtual-method>
    <virtual-method name="eject_mountable" offset="65535" invoker="eject_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_mountable_finish" throws="1" offset="65535" invoker="eject_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_mountable_with_operation" offset="65535" invoker="eject_mountable_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_mountable_with_operation_finish" throws="1" offset="65535" invoker="eject_mountable_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="enumerate_children" throws="1" offset="65535" invoker="enumerate_children">
      <return-value transfer-ownership="full">
        <type name="FileEnumerator"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="enumerate_children_async" offset="65535" invoker="enumerate_children_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="enumerate_children_finish" throws="1" offset="65535" invoker="enumerate_children_finish">
      <return-value transfer-ownership="full">
        <type name="FileEnumerator"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="equal" offset="65535" invoker="equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file2" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="find_enclosing_mount" throws="1" offset="65535" invoker="find_enclosing_mount">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="find_enclosing_mount_async" offset="65535" invoker="find_enclosing_mount_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="find_enclosing_mount_finish" throws="1" offset="65535" invoker="find_enclosing_mount_finish">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_basename" offset="65535" invoker="get_basename">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_child_for_display_name" throws="1" offset="65535" invoker="get_child_for_display_name">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_parent" offset="65535" invoker="get_parent">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_parse_name" offset="65535" invoker="get_parse_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_path" offset="65535" invoker="get_path">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_relative_path" offset="65535" invoker="get_relative_path">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="descendant" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_uri" offset="65535" invoker="get_uri">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_uri_scheme" offset="65535" invoker="get_uri_scheme">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="has_uri_scheme" offset="65535" invoker="has_uri_scheme">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="hash" offset="65535" invoker="hash">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </virtual-method>
    <virtual-method name="is_native" offset="65535" invoker="is_native">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="make_directory" throws="1" offset="65535" invoker="make_directory">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="make_symbolic_link" throws="1" offset="65535" invoker="make_symbolic_link">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="symlink_value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="monitor_dir" throws="1" offset="65535" invoker="monitor_directory">
      <return-value transfer-ownership="full">
        <type name="FileMonitor"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="monitor_file" throws="1" offset="65535" invoker="monitor_file">
      <return-value transfer-ownership="full">
        <type name="FileMonitor"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="mount_enclosing_volume" offset="65535" invoker="mount_enclosing_volume">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="mount_enclosing_volume_finish" throws="1" offset="65535" invoker="mount_enclosing_volume_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="mount_mountable" offset="65535" invoker="mount_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="mount_mountable_finish" throws="1" offset="65535" invoker="mount_mountable_finish">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="move" throws="1" offset="65535" invoker="move">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="destination" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCopyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="progress_callback" transfer-ownership="none" allow-none="1" scope="call" closure="4">
          <type name="FileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="open_readwrite" throws="1" offset="65535" invoker="open_readwrite">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="open_readwrite_async" offset="65535" invoker="open_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="open_readwrite_finish" throws="1" offset="65535" invoker="open_readwrite_finish">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="poll_mountable" offset="65535" invoker="poll_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="poll_mountable_finish" throws="1" offset="65535" invoker="poll_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="prefix_matches" offset="65535" invoker="has_prefix">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_filesystem_info" throws="1" offset="65535" invoker="query_filesystem_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_filesystem_info_async" offset="65535" invoker="query_filesystem_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_filesystem_info_finish" throws="1" offset="65535" invoker="query_filesystem_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info" throws="1" offset="65535" invoker="query_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info_async" offset="65535" invoker="query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info_finish" throws="1" offset="65535" invoker="query_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_settable_attributes" throws="1" offset="65535" invoker="query_settable_attributes">
      <return-value transfer-ownership="full">
        <type name="FileAttributeInfoList"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_writable_namespaces" throws="1" offset="65535" invoker="query_writable_namespaces">
      <return-value transfer-ownership="full">
        <type name="FileAttributeInfoList"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="read_async" offset="65535" invoker="read_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="read_finish" throws="1" offset="65535" invoker="read_finish">
      <return-value transfer-ownership="full">
        <type name="FileInputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="read_fn" throws="1" offset="65535" invoker="read">
      <return-value transfer-ownership="full">
        <type name="FileInputStream"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="replace" throws="1" offset="65535" invoker="replace">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="replace_async" offset="65535" invoker="replace_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="replace_finish" throws="1" offset="65535" invoker="replace_finish">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="replace_readwrite" throws="1" offset="65535" invoker="replace_readwrite">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="replace_readwrite_async" offset="65535" invoker="replace_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="replace_readwrite_finish" throws="1" offset="65535" invoker="replace_readwrite_finish">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="resolve_relative_path" offset="65535" invoker="resolve_relative_path">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="relative_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_attribute" throws="1" offset="65535" invoker="set_attribute">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="FileAttributeType"/>
        </parameter>
        <parameter name="value_p" transfer-ownership="none" allow-none="1">
          <type name="any"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_attributes_async" offset="65535" invoker="set_attributes_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_attributes_finish" throws="1" offset="65535" invoker="set_attributes_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="info" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="FileInfo"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_attributes_from_info" throws="1" offset="65535" invoker="set_attributes_from_info">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_display_name" throws="1" offset="65535" invoker="set_display_name">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_display_name_async" offset="65535" invoker="set_display_name_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_display_name_finish" throws="1" offset="65535" invoker="set_display_name_finish">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="start_mountable" offset="65535" invoker="start_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="DriveStartFlags"/>
        </parameter>
        <parameter name="start_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="start_mountable_finish" throws="1" offset="65535" invoker="start_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="stop_mountable" offset="65535" invoker="stop_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="stop_mountable_finish" throws="1" offset="65535" invoker="stop_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="trash" throws="1" offset="65535" invoker="trash">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmount_mountable" offset="65535" invoker="unmount_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmount_mountable_finish" throws="1" offset="65535" invoker="unmount_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmount_mountable_with_operation" offset="65535" invoker="unmount_mountable_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmount_mountable_with_operation_finish" throws="1" offset="65535" invoker="unmount_mountable_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct FileAttributeInfo
{
  <field name="name" writable="1">
    <type name="utf8"/>
  </field>
  <field name="type" writable="1">
    <type name="FileAttributeType"/>
  </field>
  <field name="flags" writable="1">
    <type name="FileAttributeInfoFlags"/>
  </field>
};
  <bitfield name="FileAttributeInfoFlags" glib:type-name="GFileAttributeInfoFlags" glib:get-type="g_file_attribute_info_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_INFO_NONE"/>
    </member>
    <member name="copy_with_file" value="1">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE"/>
    </member>
    <member name="copy_when_moved" value="2">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED"/>
    </member>
  </bitfield>
struct FileAttributeInfoList
{
 glib:type-name="GFileAttributeInfoList" glib:get-type="g_file_attribute_info_list_get_type"  <field name="infos" writable="1">
    <type name="FileAttributeInfo"/>
  </field>
  <field name="n_infos" writable="1">
    <type name="gint32"/>
  </field>
  <constructor name="new" c:identifier="g_file_attribute_info_list_new">
    <return-value transfer-ownership="full">
      <type name="FileAttributeInfoList"/>
    </return-value>
  </constructor>
  <method name="add" c:identifier="g_file_attribute_info_list_add">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="type" transfer-ownership="none">
        <type name="FileAttributeType"/>
      </parameter>
      <parameter name="flags" transfer-ownership="none">
        <type name="FileAttributeInfoFlags"/>
      </parameter>
    </parameters>
  </method>
  <method name="dup" c:identifier="g_file_attribute_info_list_dup">
    <return-value transfer-ownership="full">
      <type name="FileAttributeInfoList"/>
    </return-value>
  </method>
  <method name="lookup" c:identifier="g_file_attribute_info_list_lookup">
    <return-value transfer-ownership="none">
      <type name="FileAttributeInfo"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="ref" c:identifier="g_file_attribute_info_list_ref">
    <return-value transfer-ownership="full">
      <type name="FileAttributeInfoList"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_file_attribute_info_list_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
struct FileAttributeMatcher
{
 glib:type-name="GFileAttributeMatcher" glib:get-type="g_file_attribute_matcher_get_type"  <constructor name="new" c:identifier="g_file_attribute_matcher_new">
    <return-value transfer-ownership="full">
      <type name="FileAttributeMatcher"/>
    </return-value>
    <parameters>
      <parameter name="attributes" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </constructor>
  <method name="enumerate_namespace" c:identifier="g_file_attribute_matcher_enumerate_namespace">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="ns" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="enumerate_next" c:identifier="g_file_attribute_matcher_enumerate_next">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="matches" c:identifier="g_file_attribute_matcher_matches">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="attribute" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="matches_only" c:identifier="g_file_attribute_matcher_matches_only">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="attribute" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="ref" c:identifier="g_file_attribute_matcher_ref">
    <return-value transfer-ownership="full">
      <type name="FileAttributeMatcher"/>
    </return-value>
  </method>
  <method name="subtract" c:identifier="g_file_attribute_matcher_subtract">
    <return-value transfer-ownership="full">
      <type name="FileAttributeMatcher"/>
    </return-value>
    <parameters>
      <parameter name="subtract" transfer-ownership="none">
        <type name="FileAttributeMatcher"/>
      </parameter>
    </parameters>
  </method>
  <method name="to_string" c:identifier="g_file_attribute_matcher_to_string">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_file_attribute_matcher_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <enumeration name="FileAttributeStatus" glib:type-name="GFileAttributeStatus" glib:get-type="g_file_attribute_status_get_type">
    <member name="unset" value="0">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_STATUS_UNSET"/>
    </member>
    <member name="set" value="1">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_STATUS_SET"/>
    </member>
    <member name="error_setting" value="2">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING"/>
    </member>
  </enumeration>
  <enumeration name="FileAttributeType" glib:type-name="GFileAttributeType" glib:get-type="g_file_attribute_type_get_type">
    <member name="invalid" value="0">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_INVALID"/>
    </member>
    <member name="string" value="1">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_STRING"/>
    </member>
    <member name="byte_string" value="2">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_BYTE_STRING"/>
    </member>
    <member name="boolean" value="3">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_BOOLEAN"/>
    </member>
    <member name="uint32" value="4">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_UINT32"/>
    </member>
    <member name="int32" value="5">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_INT32"/>
    </member>
    <member name="uint64" value="6">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_UINT64"/>
    </member>
    <member name="int64" value="7">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_INT64"/>
    </member>
    <member name="object" value="8">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_OBJECT"/>
    </member>
    <member name="stringv" value="9">
      <attribute name="c:identifier" value="G_FILE_ATTRIBUTE_TYPE_STRINGV"/>
    </member>
  </enumeration>
  <bitfield name="FileCopyFlags" glib:type-name="GFileCopyFlags" glib:get-type="g_file_copy_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_FILE_COPY_NONE"/>
    </member>
    <member name="overwrite" value="1">
      <attribute name="c:identifier" value="G_FILE_COPY_OVERWRITE"/>
    </member>
    <member name="backup" value="2">
      <attribute name="c:identifier" value="G_FILE_COPY_BACKUP"/>
    </member>
    <member name="nofollow_symlinks" value="4">
      <attribute name="c:identifier" value="G_FILE_COPY_NOFOLLOW_SYMLINKS"/>
    </member>
    <member name="all_metadata" value="8">
      <attribute name="c:identifier" value="G_FILE_COPY_ALL_METADATA"/>
    </member>
    <member name="no_fallback_for_move" value="16">
      <attribute name="c:identifier" value="G_FILE_COPY_NO_FALLBACK_FOR_MOVE"/>
    </member>
    <member name="target_default_perms" value="32">
      <attribute name="c:identifier" value="G_FILE_COPY_TARGET_DEFAULT_PERMS"/>
    </member>
  </bitfield>
  <bitfield name="FileCreateFlags" glib:type-name="GFileCreateFlags" glib:get-type="g_file_create_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_FILE_CREATE_NONE"/>
    </member>
    <member name="private" value="1">
      <attribute name="c:identifier" value="G_FILE_CREATE_PRIVATE"/>
    </member>
    <member name="replace_destination" value="2">
      <attribute name="c:identifier" value="G_FILE_CREATE_REPLACE_DESTINATION"/>
    </member>
  </bitfield>
  <interface name="FileDescriptorBased" glib:type-name="GFileDescriptorBased" glib:get-type="g_file_descriptor_based_get_type" glib:type-struct="FileDescriptorBasedIface">
    <method name="get_fd" c:identifier="g_file_descriptor_based_get_fd">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <virtual-method name="get_fd" offset="65535" invoker="get_fd">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </virtual-method>
  </interface>
struct FileDescriptorBasedIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="get_fd">
    <callback name="get_fd">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="fd_based" transfer-ownership="none">
          <type name="FileDescriptorBased"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="FileEnumerator" parent="GObject.Object" glib:type-struct="FileEnumeratorClass" glib:type-name="GFileEnumerator" glib:get-type="g_file_enumerator_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="FileEnumeratorPrivate"/>
    </field>
    <method name="close" c:identifier="g_file_enumerator_close" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_async" c:identifier="g_file_enumerator_close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_finish" c:identifier="g_file_enumerator_close_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_container" c:identifier="g_file_enumerator_get_container">
      <return-value transfer-ownership="none">
        <type name="File"/>
      </return-value>
    </method>
    <method name="has_pending" c:identifier="g_file_enumerator_has_pending">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="is_closed" c:identifier="g_file_enumerator_is_closed">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="next_file" c:identifier="g_file_enumerator_next_file" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="next_files_async" c:identifier="g_file_enumerator_next_files_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="num_files" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="next_files_finish" c:identifier="g_file_enumerator_next_files_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="FileInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_pending" c:identifier="g_file_enumerator_set_pending">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="pending" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <property name="container" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="File"/>
    </property>
    <virtual-method name="close_async" offset="65535" invoker="close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="close_finish" throws="1" offset="65535" invoker="close_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="close_fn" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="next_file" throws="1" offset="65535" invoker="next_file">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="next_files_async" offset="65535" invoker="next_files_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="num_files" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="next_files_finish" throws="1" offset="65535" invoker="next_files_finish">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="FileInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct FileEnumeratorClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="next_file">
    <callback name="next_file">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="FileEnumerator"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_fn">
    <callback name="close_fn">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="FileEnumerator"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="next_files_async">
    <callback name="next_files_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="FileEnumerator"/>
        </parameter>
        <parameter name="num_files" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="next_files_finish">
    <callback name="next_files_finish">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="FileInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="FileEnumerator"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_async">
    <callback name="close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="FileEnumerator"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_finish">
    <callback name="close_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="FileEnumerator"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
  <field name="_g_reserved7">
    <type name="any"/>
  </field>
};
struct FileEnumeratorPrivate
{
};
  <class name="FileIOStream" parent="IOStream" glib:type-struct="FileIOStreamClass" glib:type-name="GFileIOStream" glib:get-type="g_file_io_stream_get_type">
    <implements name="Seekable"/>
    <field name="parent_instance">
      <type name="IOStream"/>
    </field>
    <field name="priv">
      <type name="FileIOStreamPrivate"/>
    </field>
    <method name="get_etag" c:identifier="g_file_io_stream_get_etag">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="query_info" c:identifier="g_file_io_stream_query_info" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info_async" c:identifier="g_file_io_stream_query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info_finish" c:identifier="g_file_io_stream_query_info_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="can_seek" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_truncate" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_etag" offset="65535" invoker="get_etag">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="query_info" throws="1" offset="65535" invoker="query_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info_async" offset="65535" invoker="query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info_finish" throws="1" offset="65535" invoker="query_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="seek" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="tell" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </virtual-method>
    <virtual-method name="truncate_fn" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct FileIOStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="IOStreamClass"/>
  </field>
  <field name="tell">
    <callback name="tell">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_seek">
    <callback name="can_seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="seek">
    <callback name="seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_truncate">
    <callback name="can_truncate">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="truncate_fn">
    <callback name="truncate_fn">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info">
    <callback name="query_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info_async">
    <callback name="query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info_finish">
    <callback name="query_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_etag">
    <callback name="get_etag">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileIOStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct FileIOStreamPrivate
{
};
  <class name="FileIcon" parent="GObject.Object" glib:type-struct="FileIconClass" glib:type-name="GFileIcon" glib:get-type="g_file_icon_get_type">
    <implements name="Icon"/>
    <implements name="LoadableIcon"/>
    <constructor name="new" c:identifier="g_file_icon_new">
      <return-value transfer-ownership="full">
        <type name="FileIcon"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_file" c:identifier="g_file_icon_get_file">
      <return-value transfer-ownership="none">
        <type name="File"/>
      </return-value>
    </method>
    <property name="file" writable="1" construct-only="1" transfer-ownership="none">
      <type name="File"/>
    </property>
  </class>
struct FileIconClass
{
 glib:is-gtype-struct="1"};
struct FileIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="dup">
    <callback name="dup">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="hash">
    <callback name="hash">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="equal">
    <callback name="equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file1" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="file2" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="is_native">
    <callback name="is_native">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="has_uri_scheme">
    <callback name="has_uri_scheme">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_uri_scheme">
    <callback name="get_uri_scheme">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_basename">
    <callback name="get_basename">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_path">
    <callback name="get_path">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_uri">
    <callback name="get_uri">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_parse_name">
    <callback name="get_parse_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_parent">
    <callback name="get_parent">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="prefix_matches">
    <callback name="prefix_matches">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="prefix" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_relative_path">
    <callback name="get_relative_path">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="descendant" transfer-ownership="none">
          <type name="File"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="resolve_relative_path">
    <callback name="resolve_relative_path">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="relative_path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_child_for_display_name">
    <callback name="get_child_for_display_name">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="enumerate_children">
    <callback name="enumerate_children">
      <return-value transfer-ownership="full">
        <type name="FileEnumerator"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="enumerate_children_async">
    <callback name="enumerate_children_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="enumerate_children_finish">
    <callback name="enumerate_children_finish">
      <return-value transfer-ownership="full">
        <type name="FileEnumerator"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info">
    <callback name="query_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info_async">
    <callback name="query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info_finish">
    <callback name="query_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_filesystem_info">
    <callback name="query_filesystem_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_filesystem_info_async">
    <callback name="query_filesystem_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_filesystem_info_finish">
    <callback name="query_filesystem_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="find_enclosing_mount">
    <callback name="find_enclosing_mount">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="find_enclosing_mount_async">
    <callback name="find_enclosing_mount_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="find_enclosing_mount_finish">
    <callback name="find_enclosing_mount_finish">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_display_name">
    <callback name="set_display_name">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_display_name_async">
    <callback name="set_display_name_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_display_name_finish">
    <callback name="set_display_name_finish">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_settable_attributes">
    <callback name="query_settable_attributes">
      <return-value transfer-ownership="full">
        <type name="FileAttributeInfoList"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_query_settable_attributes_async">
    <type name="any"/>
  </field>
  <field name="_query_settable_attributes_finish">
    <type name="any"/>
  </field>
  <field name="query_writable_namespaces">
    <callback name="query_writable_namespaces">
      <return-value transfer-ownership="full">
        <type name="FileAttributeInfoList"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_query_writable_namespaces_async">
    <type name="any"/>
  </field>
  <field name="_query_writable_namespaces_finish">
    <type name="any"/>
  </field>
  <field name="set_attribute">
    <callback name="set_attribute">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="FileAttributeType"/>
        </parameter>
        <parameter name="value_p" transfer-ownership="none" allow-none="1">
          <type name="any"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_attributes_from_info">
    <callback name="set_attributes_from_info">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_attributes_async">
    <callback name="set_attributes_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_attributes_finish">
    <callback name="set_attributes_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="info" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="FileInfo"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="read_fn">
    <callback name="read_fn">
      <return-value transfer-ownership="full">
        <type name="FileInputStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="read_async">
    <callback name="read_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="read_finish">
    <callback name="read_finish">
      <return-value transfer-ownership="full">
        <type name="FileInputStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="append_to">
    <callback name="append_to">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="append_to_async">
    <callback name="append_to_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="append_to_finish">
    <callback name="append_to_finish">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create">
    <callback name="create">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create_async">
    <callback name="create_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create_finish">
    <callback name="create_finish">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="replace">
    <callback name="replace">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="replace_async">
    <callback name="replace_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="7">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="7">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="replace_finish">
    <callback name="replace_finish">
      <return-value transfer-ownership="full">
        <type name="FileOutputStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="delete_file">
    <callback name="delete_file">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_delete_file_async">
    <type name="any"/>
  </field>
  <field name="_delete_file_finish">
    <type name="any"/>
  </field>
  <field name="trash">
    <callback name="trash">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_trash_async">
    <type name="any"/>
  </field>
  <field name="_trash_finish">
    <type name="any"/>
  </field>
  <field name="make_directory">
    <callback name="make_directory">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_make_directory_async">
    <type name="any"/>
  </field>
  <field name="_make_directory_finish">
    <type name="any"/>
  </field>
  <field name="make_symbolic_link">
    <callback name="make_symbolic_link">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="symlink_value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_make_symbolic_link_async">
    <type name="any"/>
  </field>
  <field name="_make_symbolic_link_finish">
    <type name="any"/>
  </field>
  <field name="copy">
    <callback name="copy">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="destination" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCopyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="progress_callback" transfer-ownership="none" allow-none="1" scope="call" closure="5">
          <type name="FileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="copy_async">
    <type name="any"/>
  </field>
  <field name="copy_finish">
    <callback name="copy_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="move">
    <callback name="move">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="destination" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCopyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="progress_callback" transfer-ownership="none" allow-none="1" scope="call" closure="5">
          <type name="FileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_move_async">
    <type name="any"/>
  </field>
  <field name="_move_finish">
    <type name="any"/>
  </field>
  <field name="mount_mountable">
    <callback name="mount_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_mountable_finish">
    <callback name="mount_mountable_finish">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="unmount_mountable">
    <callback name="unmount_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="unmount_mountable_finish">
    <callback name="unmount_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_mountable">
    <callback name="eject_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_mountable_finish">
    <callback name="eject_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_enclosing_volume">
    <callback name="mount_enclosing_volume">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="location" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_enclosing_volume_finish">
    <callback name="mount_enclosing_volume_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="location" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="monitor_dir">
    <callback name="monitor_dir">
      <return-value transfer-ownership="full">
        <type name="FileMonitor"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="monitor_file">
    <callback name="monitor_file">
      <return-value transfer-ownership="full">
        <type name="FileMonitor"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="open_readwrite">
    <callback name="open_readwrite">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="open_readwrite_async">
    <callback name="open_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="open_readwrite_finish">
    <callback name="open_readwrite_finish">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create_readwrite">
    <callback name="create_readwrite">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create_readwrite_async">
    <callback name="create_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create_readwrite_finish">
    <callback name="create_readwrite_finish">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="replace_readwrite">
    <callback name="replace_readwrite">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="replace_readwrite_async">
    <callback name="replace_readwrite_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="etag" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="make_backup" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileCreateFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="7">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="7">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="replace_readwrite_finish">
    <callback name="replace_readwrite_finish">
      <return-value transfer-ownership="full">
        <type name="FileIOStream"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="start_mountable">
    <callback name="start_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="DriveStartFlags"/>
        </parameter>
        <parameter name="start_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="start_mountable_finish">
    <callback name="start_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="stop_mountable">
    <callback name="stop_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="stop_mountable_finish">
    <callback name="stop_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="supports_thread_contexts">
    <type name="gboolean"/>
  </field>
  <field name="unmount_mountable_with_operation">
    <callback name="unmount_mountable_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="unmount_mountable_with_operation_finish">
    <callback name="unmount_mountable_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_mountable_with_operation">
    <callback name="eject_mountable_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_mountable_with_operation_finish">
    <callback name="eject_mountable_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="poll_mountable">
    <callback name="poll_mountable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="poll_mountable_finish">
    <callback name="poll_mountable_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="FileInfo" parent="GObject.Object" glib:type-struct="FileInfoClass" glib:type-name="GFileInfo" glib:get-type="g_file_info_get_type">
    <constructor name="new" c:identifier="g_file_info_new">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
    </constructor>
    <method name="clear_status" c:identifier="g_file_info_clear_status">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="copy_into" c:identifier="g_file_info_copy_into">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="dest_info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
      </parameters>
    </method>
    <method name="dup" c:identifier="g_file_info_dup">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
    </method>
    <method name="get_attribute_as_string" c:identifier="g_file_info_get_attribute_as_string">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_boolean" c:identifier="g_file_info_get_attribute_boolean">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_byte_string" c:identifier="g_file_info_get_attribute_byte_string">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_data" c:identifier="g_file_info_get_attribute_data">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="FileAttributeType"/>
        </parameter>
        <parameter name="value_pp" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="any"/>
        </parameter>
        <parameter name="status" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="FileAttributeStatus"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_int32" c:identifier="g_file_info_get_attribute_int32">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_int64" c:identifier="g_file_info_get_attribute_int64">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_object" c:identifier="g_file_info_get_attribute_object">
      <return-value transfer-ownership="none">
        <type name="GObject.Object"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_status" c:identifier="g_file_info_get_attribute_status">
      <return-value transfer-ownership="none">
        <type name="FileAttributeStatus"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_string" c:identifier="g_file_info_get_attribute_string">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_stringv" c:identifier="g_file_info_get_attribute_stringv">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_type" c:identifier="g_file_info_get_attribute_type">
      <return-value transfer-ownership="none">
        <type name="FileAttributeType"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_uint32" c:identifier="g_file_info_get_attribute_uint32">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_attribute_uint64" c:identifier="g_file_info_get_attribute_uint64">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_content_type" c:identifier="g_file_info_get_content_type">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_display_name" c:identifier="g_file_info_get_display_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_edit_name" c:identifier="g_file_info_get_edit_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_etag" c:identifier="g_file_info_get_etag">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_file_type" c:identifier="g_file_info_get_file_type">
      <return-value transfer-ownership="none">
        <type name="FileType"/>
      </return-value>
    </method>
    <method name="get_icon" c:identifier="g_file_info_get_icon">
      <return-value transfer-ownership="none">
        <type name="Icon"/>
      </return-value>
    </method>
    <method name="get_is_backup" c:identifier="g_file_info_get_is_backup">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_hidden" c:identifier="g_file_info_get_is_hidden">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_symlink" c:identifier="g_file_info_get_is_symlink">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_modification_time" c:identifier="g_file_info_get_modification_time">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none" direction="out" caller-allocates="1">
          <type name="GLib.TimeVal"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_name" c:identifier="g_file_info_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_size" c:identifier="g_file_info_get_size">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </method>
    <method name="get_sort_order" c:identifier="g_file_info_get_sort_order">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="get_symlink_target" c:identifier="g_file_info_get_symlink_target">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="has_attribute" c:identifier="g_file_info_has_attribute">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="has_namespace" c:identifier="g_file_info_has_namespace">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="name_space" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="list_attributes" c:identifier="g_file_info_list_attributes">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="name_space" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="remove_attribute" c:identifier="g_file_info_remove_attribute">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute" c:identifier="g_file_info_set_attribute">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="FileAttributeType"/>
        </parameter>
        <parameter name="value_p" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_boolean" c:identifier="g_file_info_set_attribute_boolean">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_byte_string" c:identifier="g_file_info_set_attribute_byte_string">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_int32" c:identifier="g_file_info_set_attribute_int32">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_int64" c:identifier="g_file_info_set_attribute_int64">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_mask" c:identifier="g_file_info_set_attribute_mask">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <type name="FileAttributeMatcher"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_object" c:identifier="g_file_info_set_attribute_object">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_status" c:identifier="g_file_info_set_attribute_status">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="status" transfer-ownership="none">
          <type name="FileAttributeStatus"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_string" c:identifier="g_file_info_set_attribute_string">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_stringv" c:identifier="g_file_info_set_attribute_stringv">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <array>
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_uint32" c:identifier="g_file_info_set_attribute_uint32">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_uint64" c:identifier="g_file_info_set_attribute_uint64">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="attr_value" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_content_type" c:identifier="g_file_info_set_content_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_display_name" c:identifier="g_file_info_set_display_name">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="display_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_edit_name" c:identifier="g_file_info_set_edit_name">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="edit_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_file_type" c:identifier="g_file_info_set_file_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="FileType"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_icon" c:identifier="g_file_info_set_icon">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="Icon"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_is_hidden" c:identifier="g_file_info_set_is_hidden">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="is_hidden" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_is_symlink" c:identifier="g_file_info_set_is_symlink">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="is_symlink" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_modification_time" c:identifier="g_file_info_set_modification_time">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mtime" transfer-ownership="none">
          <type name="GLib.TimeVal"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_name" c:identifier="g_file_info_set_name">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_size" c:identifier="g_file_info_set_size">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_sort_order" c:identifier="g_file_info_set_sort_order">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="sort_order" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_symlink_target" c:identifier="g_file_info_set_symlink_target">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="symlink_target" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="unset_attribute_mask" c:identifier="g_file_info_unset_attribute_mask">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
  </class>
struct FileInfoClass
{
 glib:is-gtype-struct="1"};
  <class name="FileInputStream" parent="InputStream" glib:type-struct="FileInputStreamClass" glib:type-name="GFileInputStream" glib:get-type="g_file_input_stream_get_type">
    <implements name="Seekable"/>
    <field name="parent_instance">
      <type name="InputStream"/>
    </field>
    <field name="priv">
      <type name="FileInputStreamPrivate"/>
    </field>
    <method name="query_info" c:identifier="g_file_input_stream_query_info" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info_async" c:identifier="g_file_input_stream_query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info_finish" c:identifier="g_file_input_stream_query_info_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="can_seek" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="query_info" throws="1" offset="65535" invoker="query_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info_async" offset="65535" invoker="query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info_finish" throws="1" offset="65535" invoker="query_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="seek" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="tell" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </virtual-method>
  </class>
struct FileInputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="InputStreamClass"/>
  </field>
  <field name="tell">
    <callback name="tell">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileInputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_seek">
    <callback name="can_seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileInputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="seek">
    <callback name="seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileInputStream"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info">
    <callback name="query_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileInputStream"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info_async">
    <callback name="query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileInputStream"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info_finish">
    <callback name="query_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileInputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct FileInputStreamPrivate
{
};
  <class name="FileMonitor" parent="GObject.Object" glib:type-struct="FileMonitorClass" abstract="1" glib:type-name="GFileMonitor" glib:get-type="g_file_monitor_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="FileMonitorPrivate"/>
    </field>
    <method name="cancel" c:identifier="g_file_monitor_cancel">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="emit_event" c:identifier="g_file_monitor_emit_event">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="child" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="other_file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="event_type" transfer-ownership="none">
          <type name="FileMonitorEvent"/>
        </parameter>
      </parameters>
    </method>
    <method name="is_cancelled" c:identifier="g_file_monitor_is_cancelled">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="set_rate_limit" c:identifier="g_file_monitor_set_rate_limit">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="limit_msecs" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <property name="cancelled" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="rate-limit" writable="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
    <glib:signal name="changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="other_file" transfer-ownership="none" allow-none="1">
          <type name="File"/>
        </parameter>
        <parameter name="event_type" transfer-ownership="none">
          <type name="FileMonitorEvent"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="cancel" offset="65535" invoker="cancel">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="other_file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="event_type" transfer-ownership="none">
          <type name="FileMonitorEvent"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct FileMonitorClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="changed">
    <callback name="changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="monitor" transfer-ownership="none">
          <type name="FileMonitor"/>
        </parameter>
        <parameter name="file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="other_file" transfer-ownership="none">
          <type name="File"/>
        </parameter>
        <parameter name="event_type" transfer-ownership="none">
          <type name="FileMonitorEvent"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="cancel">
    <callback name="cancel">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="monitor" transfer-ownership="none">
          <type name="FileMonitor"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
  <enumeration name="FileMonitorEvent" glib:type-name="GFileMonitorEvent" glib:get-type="g_file_monitor_event_get_type">
    <member name="changed" value="0">
      <attribute name="c:identifier" value="G_FILE_MONITOR_EVENT_CHANGED"/>
    </member>
    <member name="changes_done_hint" value="1">
      <attribute name="c:identifier" value="G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT"/>
    </member>
    <member name="deleted" value="2">
      <attribute name="c:identifier" value="G_FILE_MONITOR_EVENT_DELETED"/>
    </member>
    <member name="created" value="3">
      <attribute name="c:identifier" value="G_FILE_MONITOR_EVENT_CREATED"/>
    </member>
    <member name="attribute_changed" value="4">
      <attribute name="c:identifier" value="G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED"/>
    </member>
    <member name="pre_unmount" value="5">
      <attribute name="c:identifier" value="G_FILE_MONITOR_EVENT_PRE_UNMOUNT"/>
    </member>
    <member name="unmounted" value="6">
      <attribute name="c:identifier" value="G_FILE_MONITOR_EVENT_UNMOUNTED"/>
    </member>
    <member name="moved" value="7">
      <attribute name="c:identifier" value="G_FILE_MONITOR_EVENT_MOVED"/>
    </member>
  </enumeration>
  <bitfield name="FileMonitorFlags" glib:type-name="GFileMonitorFlags" glib:get-type="g_file_monitor_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_FILE_MONITOR_NONE"/>
    </member>
    <member name="watch_mounts" value="1">
      <attribute name="c:identifier" value="G_FILE_MONITOR_WATCH_MOUNTS"/>
    </member>
    <member name="send_moved" value="2">
      <attribute name="c:identifier" value="G_FILE_MONITOR_SEND_MOVED"/>
    </member>
  </bitfield>
struct FileMonitorPrivate
{
};
  <class name="FileOutputStream" parent="OutputStream" glib:type-struct="FileOutputStreamClass" glib:type-name="GFileOutputStream" glib:get-type="g_file_output_stream_get_type">
    <implements name="Seekable"/>
    <field name="parent_instance">
      <type name="OutputStream"/>
    </field>
    <field name="priv">
      <type name="FileOutputStreamPrivate"/>
    </field>
    <method name="get_etag" c:identifier="g_file_output_stream_get_etag">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="query_info" c:identifier="g_file_output_stream_query_info" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info_async" c:identifier="g_file_output_stream_query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="query_info_finish" c:identifier="g_file_output_stream_query_info_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="can_seek" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_truncate" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_etag" offset="65535" invoker="get_etag">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="query_info" throws="1" offset="65535" invoker="query_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info_async" offset="65535" invoker="query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="query_info_finish" throws="1" offset="65535" invoker="query_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="seek" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="tell" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </virtual-method>
    <virtual-method name="truncate_fn" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct FileOutputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="OutputStreamClass"/>
  </field>
  <field name="tell">
    <callback name="tell">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_seek">
    <callback name="can_seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="seek">
    <callback name="seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_truncate">
    <callback name="can_truncate">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="truncate_fn">
    <callback name="truncate_fn">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info">
    <callback name="query_info">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info_async">
    <callback name="query_info_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="query_info_finish">
    <callback name="query_info_finish">
      <return-value transfer-ownership="full">
        <type name="FileInfo"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_etag">
    <callback name="get_etag">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="FileOutputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct FileOutputStreamPrivate
{
};
  <callback name="FileProgressCallback">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="current_num_bytes" transfer-ownership="none">
        <type name="gint64"/>
      </parameter>
      <parameter name="total_num_bytes" transfer-ownership="none">
        <type name="gint64"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <bitfield name="FileQueryInfoFlags" glib:type-name="GFileQueryInfoFlags" glib:get-type="g_file_query_info_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_FILE_QUERY_INFO_NONE"/>
    </member>
    <member name="nofollow_symlinks" value="1">
      <attribute name="c:identifier" value="G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS"/>
    </member>
  </bitfield>
  <callback name="FileReadMoreCallback">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="file_contents" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="file_size" transfer-ownership="none">
        <type name="gint64"/>
      </parameter>
      <parameter name="callback_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <enumeration name="FileType" glib:type-name="GFileType" glib:get-type="g_file_type_get_type">
    <member name="unknown" value="0">
      <attribute name="c:identifier" value="G_FILE_TYPE_UNKNOWN"/>
    </member>
    <member name="regular" value="1">
      <attribute name="c:identifier" value="G_FILE_TYPE_REGULAR"/>
    </member>
    <member name="directory" value="2">
      <attribute name="c:identifier" value="G_FILE_TYPE_DIRECTORY"/>
    </member>
    <member name="symbolic_link" value="3">
      <attribute name="c:identifier" value="G_FILE_TYPE_SYMBOLIC_LINK"/>
    </member>
    <member name="special" value="4">
      <attribute name="c:identifier" value="G_FILE_TYPE_SPECIAL"/>
    </member>
    <member name="shortcut" value="5">
      <attribute name="c:identifier" value="G_FILE_TYPE_SHORTCUT"/>
    </member>
    <member name="mountable" value="6">
      <attribute name="c:identifier" value="G_FILE_TYPE_MOUNTABLE"/>
    </member>
  </enumeration>
  <class name="FilenameCompleter" parent="GObject.Object" glib:type-struct="FilenameCompleterClass" glib:type-name="GFilenameCompleter" glib:get-type="g_filename_completer_get_type">
    <constructor name="new" c:identifier="g_filename_completer_new">
      <return-value transfer-ownership="full">
        <type name="FilenameCompleter"/>
      </return-value>
    </constructor>
    <method name="get_completion_suffix" c:identifier="g_filename_completer_get_completion_suffix">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="initial_text" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_completions" c:identifier="g_filename_completer_get_completions">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="initial_text" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_dirs_only" c:identifier="g_filename_completer_set_dirs_only">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="dirs_only" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <glib:signal name="got-completion-data" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <virtual-method name="got_completion_data" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
  </class>
struct FilenameCompleterClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="got_completion_data">
    <callback name="got_completion_data">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="filename_completer" transfer-ownership="none">
          <type name="FilenameCompleter"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
};
  <enumeration name="FilesystemPreviewType" glib:type-name="GFilesystemPreviewType" glib:get-type="g_filesystem_preview_type_get_type">
    <member name="if_always" value="0">
      <attribute name="c:identifier" value="G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS"/>
    </member>
    <member name="if_local" value="1">
      <attribute name="c:identifier" value="G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL"/>
    </member>
    <member name="never" value="2">
      <attribute name="c:identifier" value="G_FILESYSTEM_PREVIEW_TYPE_NEVER"/>
    </member>
  </enumeration>
  <class name="FilterInputStream" parent="InputStream" glib:type-struct="FilterInputStreamClass" abstract="1" glib:type-name="GFilterInputStream" glib:get-type="g_filter_input_stream_get_type">
    <field name="parent_instance">
      <type name="InputStream"/>
    </field>
    <field name="base_stream">
      <type name="InputStream"/>
    </field>
    <method name="get_base_stream" c:identifier="g_filter_input_stream_get_base_stream">
      <return-value transfer-ownership="none">
        <type name="InputStream"/>
      </return-value>
    </method>
    <method name="get_close_base_stream" c:identifier="g_filter_input_stream_get_close_base_stream">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="set_close_base_stream" c:identifier="g_filter_input_stream_set_close_base_stream">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="close_base" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <property name="base-stream" writable="1" construct-only="1" transfer-ownership="none">
      <type name="InputStream"/>
    </property>
    <property name="close-base-stream" writable="1" construct="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
  </class>
struct FilterInputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="InputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
};
  <class name="FilterOutputStream" parent="OutputStream" glib:type-struct="FilterOutputStreamClass" abstract="1" glib:type-name="GFilterOutputStream" glib:get-type="g_filter_output_stream_get_type">
    <field name="parent_instance">
      <type name="OutputStream"/>
    </field>
    <field name="base_stream">
      <type name="OutputStream"/>
    </field>
    <method name="get_base_stream" c:identifier="g_filter_output_stream_get_base_stream">
      <return-value transfer-ownership="none">
        <type name="OutputStream"/>
      </return-value>
    </method>
    <method name="get_close_base_stream" c:identifier="g_filter_output_stream_get_close_base_stream">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="set_close_base_stream" c:identifier="g_filter_output_stream_set_close_base_stream">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="close_base" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <property name="base-stream" writable="1" construct-only="1" transfer-ownership="none">
      <type name="OutputStream"/>
    </property>
    <property name="close-base-stream" writable="1" construct-only="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
  </class>
struct FilterOutputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="OutputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
};
  <enumeration name="IOErrorEnum" glib:type-name="GIOErrorEnum" glib:get-type="g_io_error_enum_get_type" glib:error-domain="g-io-error-quark">
    <member name="failed" value="0">
      <attribute name="c:identifier" value="G_IO_ERROR_FAILED"/>
    </member>
    <member name="not_found" value="1">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_FOUND"/>
    </member>
    <member name="exists" value="2">
      <attribute name="c:identifier" value="G_IO_ERROR_EXISTS"/>
    </member>
    <member name="is_directory" value="3">
      <attribute name="c:identifier" value="G_IO_ERROR_IS_DIRECTORY"/>
    </member>
    <member name="not_directory" value="4">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_DIRECTORY"/>
    </member>
    <member name="not_empty" value="5">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_EMPTY"/>
    </member>
    <member name="not_regular_file" value="6">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_REGULAR_FILE"/>
    </member>
    <member name="not_symbolic_link" value="7">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_SYMBOLIC_LINK"/>
    </member>
    <member name="not_mountable_file" value="8">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_MOUNTABLE_FILE"/>
    </member>
    <member name="filename_too_long" value="9">
      <attribute name="c:identifier" value="G_IO_ERROR_FILENAME_TOO_LONG"/>
    </member>
    <member name="invalid_filename" value="10">
      <attribute name="c:identifier" value="G_IO_ERROR_INVALID_FILENAME"/>
    </member>
    <member name="too_many_links" value="11">
      <attribute name="c:identifier" value="G_IO_ERROR_TOO_MANY_LINKS"/>
    </member>
    <member name="no_space" value="12">
      <attribute name="c:identifier" value="G_IO_ERROR_NO_SPACE"/>
    </member>
    <member name="invalid_argument" value="13">
      <attribute name="c:identifier" value="G_IO_ERROR_INVALID_ARGUMENT"/>
    </member>
    <member name="permission_denied" value="14">
      <attribute name="c:identifier" value="G_IO_ERROR_PERMISSION_DENIED"/>
    </member>
    <member name="not_supported" value="15">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_SUPPORTED"/>
    </member>
    <member name="not_mounted" value="16">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_MOUNTED"/>
    </member>
    <member name="already_mounted" value="17">
      <attribute name="c:identifier" value="G_IO_ERROR_ALREADY_MOUNTED"/>
    </member>
    <member name="closed" value="18">
      <attribute name="c:identifier" value="G_IO_ERROR_CLOSED"/>
    </member>
    <member name="cancelled" value="19">
      <attribute name="c:identifier" value="G_IO_ERROR_CANCELLED"/>
    </member>
    <member name="pending" value="20">
      <attribute name="c:identifier" value="G_IO_ERROR_PENDING"/>
    </member>
    <member name="read_only" value="21">
      <attribute name="c:identifier" value="G_IO_ERROR_READ_ONLY"/>
    </member>
    <member name="cant_create_backup" value="22">
      <attribute name="c:identifier" value="G_IO_ERROR_CANT_CREATE_BACKUP"/>
    </member>
    <member name="wrong_etag" value="23">
      <attribute name="c:identifier" value="G_IO_ERROR_WRONG_ETAG"/>
    </member>
    <member name="timed_out" value="24">
      <attribute name="c:identifier" value="G_IO_ERROR_TIMED_OUT"/>
    </member>
    <member name="would_recurse" value="25">
      <attribute name="c:identifier" value="G_IO_ERROR_WOULD_RECURSE"/>
    </member>
    <member name="busy" value="26">
      <attribute name="c:identifier" value="G_IO_ERROR_BUSY"/>
    </member>
    <member name="would_block" value="27">
      <attribute name="c:identifier" value="G_IO_ERROR_WOULD_BLOCK"/>
    </member>
    <member name="host_not_found" value="28">
      <attribute name="c:identifier" value="G_IO_ERROR_HOST_NOT_FOUND"/>
    </member>
    <member name="would_merge" value="29">
      <attribute name="c:identifier" value="G_IO_ERROR_WOULD_MERGE"/>
    </member>
    <member name="failed_handled" value="30">
      <attribute name="c:identifier" value="G_IO_ERROR_FAILED_HANDLED"/>
    </member>
    <member name="too_many_open_files" value="31">
      <attribute name="c:identifier" value="G_IO_ERROR_TOO_MANY_OPEN_FILES"/>
    </member>
    <member name="not_initialized" value="32">
      <attribute name="c:identifier" value="G_IO_ERROR_NOT_INITIALIZED"/>
    </member>
    <member name="address_in_use" value="33">
      <attribute name="c:identifier" value="G_IO_ERROR_ADDRESS_IN_USE"/>
    </member>
    <member name="partial_input" value="34">
      <attribute name="c:identifier" value="G_IO_ERROR_PARTIAL_INPUT"/>
    </member>
    <member name="invalid_data" value="35">
      <attribute name="c:identifier" value="G_IO_ERROR_INVALID_DATA"/>
    </member>
    <member name="dbus_error" value="36">
      <attribute name="c:identifier" value="G_IO_ERROR_DBUS_ERROR"/>
    </member>
    <member name="host_unreachable" value="37">
      <attribute name="c:identifier" value="G_IO_ERROR_HOST_UNREACHABLE"/>
    </member>
    <member name="network_unreachable" value="38">
      <attribute name="c:identifier" value="G_IO_ERROR_NETWORK_UNREACHABLE"/>
    </member>
    <member name="connection_refused" value="39">
      <attribute name="c:identifier" value="G_IO_ERROR_CONNECTION_REFUSED"/>
    </member>
    <member name="proxy_failed" value="40">
      <attribute name="c:identifier" value="G_IO_ERROR_PROXY_FAILED"/>
    </member>
    <member name="proxy_auth_failed" value="41">
      <attribute name="c:identifier" value="G_IO_ERROR_PROXY_AUTH_FAILED"/>
    </member>
    <member name="proxy_need_auth" value="42">
      <attribute name="c:identifier" value="G_IO_ERROR_PROXY_NEED_AUTH"/>
    </member>
    <member name="proxy_not_allowed" value="43">
      <attribute name="c:identifier" value="G_IO_ERROR_PROXY_NOT_ALLOWED"/>
    </member>
  </enumeration>
struct IOExtension
{
  <method name="get_name" c:identifier="g_io_extension_get_name">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="get_priority" c:identifier="g_io_extension_get_priority">
    <return-value transfer-ownership="none">
      <type name="gint32"/>
    </return-value>
  </method>
  <method name="get_type" c:identifier="g_io_extension_get_type">
    <return-value transfer-ownership="none">
      <type name="GType"/>
    </return-value>
  </method>
};
struct IOExtensionPoint
{
  <method name="get_extension_by_name" c:identifier="g_io_extension_point_get_extension_by_name">
    <return-value transfer-ownership="none">
      <type name="IOExtension"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="get_extensions" c:identifier="g_io_extension_point_get_extensions">
    <return-value transfer-ownership="none">
      <type name="GLib.List">
        <type name="IOExtension"/>
      </type>
    </return-value>
  </method>
  <method name="get_required_type" c:identifier="g_io_extension_point_get_required_type">
    <return-value transfer-ownership="none">
      <type name="GType"/>
    </return-value>
  </method>
  <method name="set_required_type" c:identifier="g_io_extension_point_set_required_type">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="type" transfer-ownership="none">
        <type name="GType"/>
      </parameter>
    </parameters>
  </method>
  <function name="implement" c:identifier="g_io_extension_point_implement">
    <return-value transfer-ownership="none">
      <type name="IOExtension"/>
    </return-value>
    <parameters>
      <parameter name="extension_point_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="type" transfer-ownership="none">
        <type name="GType"/>
      </parameter>
      <parameter name="extension_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="priority" transfer-ownership="none">
        <type name="gint32"/>
      </parameter>
    </parameters>
  </function>
  <function name="lookup" c:identifier="g_io_extension_point_lookup">
    <return-value transfer-ownership="none">
      <type name="IOExtensionPoint"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="register" c:identifier="g_io_extension_point_register">
    <return-value transfer-ownership="none">
      <type name="IOExtensionPoint"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
};
  <class name="IOModule" parent="GObject.TypeModule" glib:type-struct="IOModuleClass" glib:type-name="GIOModule" glib:get-type="g_io_module_get_type">
    <implements name="GObject.TypePlugin"/>
    <constructor name="new" c:identifier="g_io_module_new">
      <return-value transfer-ownership="full">
        <type name="IOModule"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="query" c:identifier="g_io_module_query">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </function>
    <method name="load" c:identifier="g_io_module_load">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="unload" c:identifier="g_io_module_unload">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
  </class>
struct IOModuleClass
{
 glib:is-gtype-struct="1"};
struct IOModuleScope
{
  <method name="block" c:identifier="g_io_module_scope_block">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="basename" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </method>
  <method name="free" c:identifier="g_io_module_scope_free">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <enumeration name="IOModuleScopeFlags" glib:type-name="GIOModuleScopeFlags" glib:get-type="g_io_module_scope_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_IO_MODULE_SCOPE_NONE"/>
    </member>
    <member name="block_duplicates" value="1">
      <attribute name="c:identifier" value="G_IO_MODULE_SCOPE_BLOCK_DUPLICATES"/>
    </member>
  </enumeration>
struct IOSchedulerJob
{
  <method name="send_to_mainloop" c:identifier="g_io_scheduler_job_send_to_mainloop">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="func" transfer-ownership="none" scope="notified" closure="1" destroy="2">
        <type name="GLib.SourceFunc"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
      <parameter name="notify" transfer-ownership="none" allow-none="1" scope="async">
        <type name="GLib.DestroyNotify"/>
      </parameter>
    </parameters>
  </method>
  <method name="send_to_mainloop_async" c:identifier="g_io_scheduler_job_send_to_mainloop_async">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="func" transfer-ownership="none" scope="notified" closure="1" destroy="2">
        <type name="GLib.SourceFunc"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
      <parameter name="notify" transfer-ownership="none" allow-none="1" scope="async">
        <type name="GLib.DestroyNotify"/>
      </parameter>
    </parameters>
  </method>
};
  <callback name="IOSchedulerJobFunc">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="job" transfer-ownership="none">
        <type name="IOSchedulerJob"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <class name="IOStream" parent="GObject.Object" glib:type-struct="IOStreamClass" abstract="1" glib:type-name="GIOStream" glib:get-type="g_io_stream_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="IOStreamPrivate"/>
    </field>
    <function name="splice_finish" c:identifier="g_io_stream_splice_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </function>
    <method name="clear_pending" c:identifier="g_io_stream_clear_pending">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="close" c:identifier="g_io_stream_close" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_async" c:identifier="g_io_stream_close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_finish" c:identifier="g_io_stream_close_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_input_stream" c:identifier="g_io_stream_get_input_stream">
      <return-value transfer-ownership="none">
        <type name="InputStream"/>
      </return-value>
    </method>
    <method name="get_output_stream" c:identifier="g_io_stream_get_output_stream">
      <return-value transfer-ownership="none">
        <type name="OutputStream"/>
      </return-value>
    </method>
    <method name="has_pending" c:identifier="g_io_stream_has_pending">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="is_closed" c:identifier="g_io_stream_is_closed">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="set_pending" c:identifier="g_io_stream_set_pending" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="splice_async" c:identifier="g_io_stream_splice_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream2" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="IOStreamSpliceFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <property name="closed" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="input-stream" transfer-ownership="none">
      <type name="InputStream"/>
    </property>
    <property name="output-stream" transfer-ownership="none">
      <type name="OutputStream"/>
    </property>
    <virtual-method name="close_async" offset="65535" invoker="close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="close_finish" throws="1" offset="65535" invoker="close_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="close_fn" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_input_stream" offset="65535" invoker="get_input_stream">
      <return-value transfer-ownership="none">
        <type name="InputStream"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_output_stream" offset="65535" invoker="get_output_stream">
      <return-value transfer-ownership="none">
        <type name="OutputStream"/>
      </return-value>
    </virtual-method>
  </class>
struct IOStreamAdapter
{
};
struct IOStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="get_input_stream">
    <callback name="get_input_stream">
      <return-value transfer-ownership="none">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_output_stream">
    <callback name="get_output_stream">
      <return-value transfer-ownership="none">
        <type name="OutputStream"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_fn">
    <callback name="close_fn">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_async">
    <callback name="close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_finish">
    <callback name="close_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
  <field name="_g_reserved7">
    <type name="any"/>
  </field>
  <field name="_g_reserved8">
    <type name="any"/>
  </field>
  <field name="_g_reserved9">
    <type name="any"/>
  </field>
  <field name="_g_reserved10">
    <type name="any"/>
  </field>
};
struct IOStreamPrivate
{
};
  <bitfield name="IOStreamSpliceFlags" glib:type-name="GIOStreamSpliceFlags" glib:get-type="g_io_stream_splice_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_IO_STREAM_SPLICE_NONE"/>
    </member>
    <member name="close_stream1" value="1">
      <attribute name="c:identifier" value="G_IO_STREAM_SPLICE_CLOSE_STREAM1"/>
    </member>
    <member name="close_stream2" value="2">
      <attribute name="c:identifier" value="G_IO_STREAM_SPLICE_CLOSE_STREAM2"/>
    </member>
    <member name="wait_for_both" value="4">
      <attribute name="c:identifier" value="G_IO_STREAM_SPLICE_WAIT_FOR_BOTH"/>
    </member>
  </bitfield>
  <interface name="Icon" glib:type-name="GIcon" glib:get-type="g_icon_get_type" glib:type-struct="IconIface">
    <function name="hash" c:identifier="g_icon_hash">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <function name="new_for_string" c:identifier="g_icon_new_for_string" throws="1">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <method name="equal" c:identifier="g_icon_equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="icon2" transfer-ownership="none" allow-none="1">
          <type name="Icon"/>
        </parameter>
      </parameters>
    </method>
    <method name="to_string" c:identifier="g_icon_to_string">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <virtual-method name="equal" offset="65535" invoker="equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="icon2" transfer-ownership="none" allow-none="1">
          <type name="Icon"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="hash" offset="65535" invoker="hash">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </virtual-method>
    <virtual-method name="to_tokens" offset="65535" invoker="to_string">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="tokens" transfer-ownership="none">
          <array name="GLib.PtrArray">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="out_version" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct IconIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="hash">
    <callback name="hash">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="Icon"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="equal">
    <callback name="equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="icon1" transfer-ownership="none">
          <type name="Icon"/>
        </parameter>
        <parameter name="icon2" transfer-ownership="none" allow-none="1">
          <type name="Icon"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="to_tokens">
    <callback name="to_tokens">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="Icon"/>
        </parameter>
        <parameter name="tokens" transfer-ownership="none">
          <array name="GLib.PtrArray">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="out_version" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="from_tokens">
    <type name="any"/>
  </field>
};
  <class name="InetAddress" parent="GObject.Object" glib:type-struct="InetAddressClass" glib:type-name="GInetAddress" glib:get-type="g_inet_address_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="InetAddressPrivate"/>
    </field>
    <constructor name="new_any" c:identifier="g_inet_address_new_any">
      <return-value transfer-ownership="full">
        <type name="InetAddress"/>
      </return-value>
      <parameters>
        <parameter name="family" transfer-ownership="none">
          <type name="SocketFamily"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_bytes" c:identifier="g_inet_address_new_from_bytes">
      <return-value transfer-ownership="full">
        <type name="InetAddress"/>
      </return-value>
      <parameters>
        <parameter name="bytes" transfer-ownership="none">
          <array>
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="family" transfer-ownership="none">
          <type name="SocketFamily"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_string" c:identifier="g_inet_address_new_from_string">
      <return-value transfer-ownership="full">
        <type name="InetAddress"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_loopback" c:identifier="g_inet_address_new_loopback">
      <return-value transfer-ownership="full">
        <type name="InetAddress"/>
      </return-value>
      <parameters>
        <parameter name="family" transfer-ownership="none">
          <type name="SocketFamily"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="equal" c:identifier="g_inet_address_equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="other_address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_family" c:identifier="g_inet_address_get_family">
      <return-value transfer-ownership="none">
        <type name="SocketFamily"/>
      </return-value>
    </method>
    <method name="get_is_any" c:identifier="g_inet_address_get_is_any">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_link_local" c:identifier="g_inet_address_get_is_link_local">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_loopback" c:identifier="g_inet_address_get_is_loopback">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_mc_global" c:identifier="g_inet_address_get_is_mc_global">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_mc_link_local" c:identifier="g_inet_address_get_is_mc_link_local">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_mc_node_local" c:identifier="g_inet_address_get_is_mc_node_local">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_mc_org_local" c:identifier="g_inet_address_get_is_mc_org_local">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_mc_site_local" c:identifier="g_inet_address_get_is_mc_site_local">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_multicast" c:identifier="g_inet_address_get_is_multicast">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_is_site_local" c:identifier="g_inet_address_get_is_site_local">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_native_size" c:identifier="g_inet_address_get_native_size">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </method>
    <method name="to_string" c:identifier="g_inet_address_to_string">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <property name="bytes" writable="1" construct-only="1" transfer-ownership="none">
      <type name="any"/>
    </property>
    <property name="family" writable="1" construct-only="1" transfer-ownership="none">
      <type name="SocketFamily"/>
    </property>
    <property name="is-any" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-link-local" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-loopback" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-mc-global" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-mc-link-local" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-mc-node-local" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-mc-org-local" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-mc-site-local" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-multicast" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="is-site-local" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <virtual-method name="to_string" offset="65535" invoker="to_string">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
  </class>
struct InetAddressClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="to_string">
    <callback name="to_string">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="to_bytes">
    <callback name="to_bytes">
      <return-value transfer-ownership="none">
        <type name="guint8"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="InetAddressMask" parent="GObject.Object" glib:type-struct="InetAddressMaskClass" glib:type-name="GInetAddressMask" glib:get-type="g_inet_address_mask_get_type">
    <implements name="Initable"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="InetAddressMaskPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_inet_address_mask_new" throws="1">
      <return-value transfer-ownership="full">
        <type name="InetAddressMask"/>
      </return-value>
      <parameters>
        <parameter name="addr" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_string" c:identifier="g_inet_address_mask_new_from_string" throws="1">
      <return-value transfer-ownership="full">
        <type name="InetAddressMask"/>
      </return-value>
      <parameters>
        <parameter name="mask_string" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="equal" c:identifier="g_inet_address_mask_equal">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mask2" transfer-ownership="none">
          <type name="InetAddressMask"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_address" c:identifier="g_inet_address_mask_get_address">
      <return-value transfer-ownership="none">
        <type name="InetAddress"/>
      </return-value>
    </method>
    <method name="get_family" c:identifier="g_inet_address_mask_get_family">
      <return-value transfer-ownership="none">
        <type name="SocketFamily"/>
      </return-value>
    </method>
    <method name="get_length" c:identifier="g_inet_address_mask_get_length">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="matches" c:identifier="g_inet_address_mask_matches">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
      </parameters>
    </method>
    <method name="to_string" c:identifier="g_inet_address_mask_to_string">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <property name="address" writable="1" transfer-ownership="none">
      <type name="InetAddress"/>
    </property>
    <property name="family" transfer-ownership="none">
      <type name="SocketFamily"/>
    </property>
    <property name="length" writable="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
  </class>
struct InetAddressMaskClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
};
struct InetAddressMaskPrivate
{
};
struct InetAddressPrivate
{
};
  <class name="InetSocketAddress" parent="SocketAddress" glib:type-struct="InetSocketAddressClass" glib:type-name="GInetSocketAddress" glib:get-type="g_inet_socket_address_get_type">
    <implements name="SocketConnectable"/>
    <field name="parent_instance">
      <type name="SocketAddress"/>
    </field>
    <field name="priv">
      <type name="InetSocketAddressPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_inet_socket_address_new">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_address" c:identifier="g_inet_socket_address_get_address">
      <return-value transfer-ownership="none">
        <type name="InetAddress"/>
      </return-value>
    </method>
    <method name="get_flowinfo" c:identifier="g_inet_socket_address_get_flowinfo">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_port" c:identifier="g_inet_socket_address_get_port">
      <return-value transfer-ownership="none">
        <type name="guint16"/>
      </return-value>
    </method>
    <method name="get_scope_id" c:identifier="g_inet_socket_address_get_scope_id">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <property name="address" writable="1" construct-only="1" transfer-ownership="none">
      <type name="InetAddress"/>
    </property>
    <property name="flowinfo" writable="1" construct-only="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="port" writable="1" construct-only="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="scope-id" writable="1" construct-only="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
  </class>
struct InetSocketAddressClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketAddressClass"/>
  </field>
};
struct InetSocketAddressPrivate
{
};
  <interface name="Initable" glib:type-name="GInitable" glib:get-type="g_initable_get_type" glib:type-struct="InitableIface">
    <function name="newv" c:identifier="g_initable_newv" throws="1">
      <return-value transfer-ownership="full">
        <type name="any"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType"/>
        </parameter>
        <parameter name="n_parameters" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <array length="1">
            <type name="GObject.Parameter"/>
          </array>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </function>
    <method name="init" c:identifier="g_initable_init" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="init" throws="1" offset="65535" invoker="init">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct InitableIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="init">
    <callback name="init">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="initable" transfer-ownership="none">
          <type name="Initable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="InputStream" parent="GObject.Object" glib:type-struct="InputStreamClass" abstract="1" glib:type-name="GInputStream" glib:get-type="g_input_stream_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="InputStreamPrivate"/>
    </field>
    <method name="clear_pending" c:identifier="g_input_stream_clear_pending">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="close" c:identifier="g_input_stream_close" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_async" c:identifier="g_input_stream_close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_finish" c:identifier="g_input_stream_close_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="has_pending" c:identifier="g_input_stream_has_pending">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="is_closed" c:identifier="g_input_stream_is_closed">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="read" c:identifier="g_input_stream_read" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_all" c:identifier="g_input_stream_read_all" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="bytes_read" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_async" c:identifier="g_input_stream_read_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="read_finish" c:identifier="g_input_stream_read_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_pending" c:identifier="g_input_stream_set_pending" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="skip" c:identifier="g_input_stream_skip" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="skip_async" c:identifier="g_input_stream_skip_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="skip_finish" c:identifier="g_input_stream_skip_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="close_async" offset="65535" invoker="close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="close_finish" throws="1" offset="65535" invoker="close_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="close_fn" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="read_async" offset="65535" invoker="read_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="read_finish" throws="1" offset="65535" invoker="read_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="read_fn" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="skip" throws="1" offset="65535" invoker="skip">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="skip_async" offset="65535" invoker="skip_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="skip_finish" throws="1" offset="65535" invoker="skip_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct InputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="read_fn">
    <callback name="read_fn">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="skip">
    <callback name="skip">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_fn">
    <callback name="close_fn">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="read_async">
    <callback name="read_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="read_finish">
    <callback name="read_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="skip_async">
    <callback name="skip_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="skip_finish">
    <callback name="skip_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_async">
    <callback name="close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_finish">
    <callback name="close_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct InputStreamPrivate
{
};
struct InputVector
{
  <field name="buffer" writable="1">
    <type name="any"/>
  </field>
  <field name="size" writable="1">
    <type name="guint64"/>
  </field>
};
  <interface name="LoadableIcon" glib:type-name="GLoadableIcon" glib:get-type="g_loadable_icon_get_type" glib:type-struct="LoadableIconIface">
    <prerequisite name="Icon"/>
    <method name="load" c:identifier="g_loadable_icon_load" throws="1">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="load_async" c:identifier="g_loadable_icon_load_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="load_finish" c:identifier="g_loadable_icon_load_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="load" throws="1" offset="65535" invoker="load">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="load_async" offset="65535" invoker="load_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="load_finish" throws="1" offset="65535" invoker="load_finish">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct LoadableIconIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="load">
    <callback name="load">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="LoadableIcon"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="type" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="load_async">
    <callback name="load_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="LoadableIcon"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="load_finish">
    <callback name="load_finish">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="LoadableIcon"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <constant name="MENU_ATTRIBUTE_ACTION" value="action">
    <type name="utf8"/>
  </constant>
  <constant name="MENU_ATTRIBUTE_LABEL" value="label">
    <type name="utf8"/>
  </constant>
  <constant name="MENU_ATTRIBUTE_TARGET" value="target">
    <type name="utf8"/>
  </constant>
  <constant name="MENU_LINK_SECTION" value="section">
    <type name="utf8"/>
  </constant>
  <constant name="MENU_LINK_SUBMENU" value="submenu">
    <type name="utf8"/>
  </constant>
  <class name="MemoryInputStream" parent="InputStream" glib:type-struct="MemoryInputStreamClass" glib:type-name="GMemoryInputStream" glib:get-type="g_memory_input_stream_get_type">
    <implements name="Seekable"/>
    <field name="parent_instance">
      <type name="InputStream"/>
    </field>
    <field name="priv">
      <type name="MemoryInputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_memory_input_stream_new">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
    </constructor>
    <constructor name="new_from_data" c:identifier="g_memory_input_stream_new_from_data">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="full">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="destroy" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="add_data" c:identifier="g_memory_input_stream_add_data">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="full">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="destroy" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </method>
  </class>
struct MemoryInputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="InputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct MemoryInputStreamPrivate
{
};
  <class name="MemoryOutputStream" parent="OutputStream" glib:type-struct="MemoryOutputStreamClass" glib:type-name="GMemoryOutputStream" glib:get-type="g_memory_output_stream_get_type">
    <implements name="Seekable"/>
    <field name="parent_instance">
      <type name="OutputStream"/>
    </field>
    <field name="priv">
      <type name="MemoryOutputStreamPrivate"/>
    </field>
    <method name="get_data" c:identifier="g_memory_output_stream_get_data">
      <return-value transfer-ownership="none">
        <type name="any"/>
      </return-value>
    </method>
    <method name="get_data_size" c:identifier="g_memory_output_stream_get_data_size">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </method>
    <method name="get_size" c:identifier="g_memory_output_stream_get_size">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </method>
    <method name="steal_data" c:identifier="g_memory_output_stream_steal_data">
      <return-value transfer-ownership="full">
        <type name="any"/>
      </return-value>
    </method>
    <property name="data" writable="1" construct-only="1" transfer-ownership="none">
      <type name="any"/>
    </property>
    <property name="data-size" transfer-ownership="none">
      <type name="guint64"/>
    </property>
    <property name="size" writable="1" construct-only="1" transfer-ownership="none">
      <type name="guint64"/>
    </property>
  </class>
struct MemoryOutputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="OutputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct MemoryOutputStreamPrivate
{
};
  <class name="Menu" parent="MenuModel" glib:type-name="GMenu" glib:get-type="g_menu_get_type">
    <constructor name="new" c:identifier="g_menu_new">
      <return-value transfer-ownership="full">
        <type name="Menu"/>
      </return-value>
    </constructor>
    <method name="append" c:identifier="g_menu_append">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="detailed_action" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="append_item" c:identifier="g_menu_append_item">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="item" transfer-ownership="none">
          <type name="MenuItem"/>
        </parameter>
      </parameters>
    </method>
    <method name="append_section" c:identifier="g_menu_append_section">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="section" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="append_submenu" c:identifier="g_menu_append_submenu">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="submenu" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="freeze" c:identifier="g_menu_freeze">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="insert" c:identifier="g_menu_insert">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="position" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="detailed_action" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="insert_item" c:identifier="g_menu_insert_item">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="position" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="item" transfer-ownership="none">
          <type name="MenuItem"/>
        </parameter>
      </parameters>
    </method>
    <method name="insert_section" c:identifier="g_menu_insert_section">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="position" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="section" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="insert_submenu" c:identifier="g_menu_insert_submenu">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="position" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="submenu" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="prepend" c:identifier="g_menu_prepend">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="detailed_action" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="prepend_item" c:identifier="g_menu_prepend_item">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="item" transfer-ownership="none">
          <type name="MenuItem"/>
        </parameter>
      </parameters>
    </method>
    <method name="prepend_section" c:identifier="g_menu_prepend_section">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="section" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="prepend_submenu" c:identifier="g_menu_prepend_submenu">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="submenu" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="remove" c:identifier="g_menu_remove">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="position" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
  </class>
  <class name="MenuAttributeIter" parent="GObject.Object" glib:type-struct="MenuAttributeIterClass" abstract="1" glib:type-name="GMenuAttributeIter" glib:get-type="g_menu_attribute_iter_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="MenuAttributeIterPrivate"/>
    </field>
    <method name="get_name" c:identifier="g_menu_attribute_iter_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_next" c:identifier="g_menu_attribute_iter_get_next">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="out_name" transfer-ownership="none" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_value" c:identifier="g_menu_attribute_iter_get_value">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
    </method>
    <method name="next" c:identifier="g_menu_attribute_iter_next">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <virtual-method name="get_next" offset="65535" invoker="get_next">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="out_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct MenuAttributeIterClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="get_next">
    <callback name="get_next">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="iter" transfer-ownership="none">
          <type name="MenuAttributeIter"/>
        </parameter>
        <parameter name="out_type" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
struct MenuAttributeIterPrivate
{
};
  <class name="MenuItem" parent="GObject.Object" glib:type-name="GMenuItem" glib:get-type="g_menu_item_get_type">
    <constructor name="new" c:identifier="g_menu_item_new">
      <return-value transfer-ownership="full">
        <type name="MenuItem"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="detailed_action" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_section" c:identifier="g_menu_item_new_section">
      <return-value transfer-ownership="full">
        <type name="MenuItem"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="section" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_submenu" c:identifier="g_menu_item_new_submenu">
      <return-value transfer-ownership="full">
        <type name="MenuItem"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="submenu" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="set_action_and_target_value" c:identifier="g_menu_item_set_action_and_target_value">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="target_value" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_attribute_value" c:identifier="g_menu_item_set_attribute_value">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_detailed_action" c:identifier="g_menu_item_set_detailed_action">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="detailed_action" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_label" c:identifier="g_menu_item_set_label">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_link" c:identifier="g_menu_item_set_link">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="link" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="model" transfer-ownership="none" allow-none="1">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_section" c:identifier="g_menu_item_set_section">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="section" transfer-ownership="none" allow-none="1">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_submenu" c:identifier="g_menu_item_set_submenu">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="submenu" transfer-ownership="none" allow-none="1">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
  </class>
  <class name="MenuLinkIter" parent="GObject.Object" glib:type-struct="MenuLinkIterClass" abstract="1" glib:type-name="GMenuLinkIter" glib:get-type="g_menu_link_iter_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="MenuLinkIterPrivate"/>
    </field>
    <method name="get_name" c:identifier="g_menu_link_iter_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_next" c:identifier="g_menu_link_iter_get_next">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="out_link" transfer-ownership="none" direction="out" caller-allocates="0" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_value" c:identifier="g_menu_link_iter_get_value">
      <return-value transfer-ownership="full">
        <type name="MenuModel"/>
      </return-value>
    </method>
    <method name="next" c:identifier="g_menu_link_iter_next">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <virtual-method name="get_next" offset="65535" invoker="get_next">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="out_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct MenuLinkIterClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="get_next">
    <callback name="get_next">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="iter" transfer-ownership="none">
          <type name="MenuLinkIter"/>
        </parameter>
        <parameter name="out_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
struct MenuLinkIterPrivate
{
};
  <class name="MenuModel" parent="GObject.Object" glib:type-struct="MenuModelClass" abstract="1" glib:type-name="GMenuModel" glib:get-type="g_menu_model_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="MenuModelPrivate"/>
    </field>
    <method name="get_item_attribute_value" c:identifier="g_menu_model_get_item_attribute_value">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="expected_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_item_link" c:identifier="g_menu_model_get_item_link">
      <return-value transfer-ownership="full">
        <type name="MenuModel"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="link" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_n_items" c:identifier="g_menu_model_get_n_items">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="is_mutable" c:identifier="g_menu_model_is_mutable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="items_changed" c:identifier="g_menu_model_items_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="position" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="removed" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="added" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="iterate_item_attributes" c:identifier="g_menu_model_iterate_item_attributes">
      <return-value transfer-ownership="full">
        <type name="MenuAttributeIter"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="iterate_item_links" c:identifier="g_menu_model_iterate_item_links">
      <return-value transfer-ownership="full">
        <type name="MenuLinkIter"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <glib:signal name="items-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="position" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="removed" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="added" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="get_item_attribute_value" offset="65535" invoker="get_item_attribute_value">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="expected_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_item_attributes" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="GLib.HashTable">
            <type name="any"/>
            <type name="any"/>
          </type>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_item_link" offset="65535" invoker="get_item_link">
      <return-value transfer-ownership="full">
        <type name="MenuModel"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="link" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_item_links" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="links" transfer-ownership="none">
          <type name="GLib.HashTable">
            <type name="any"/>
            <type name="any"/>
          </type>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_n_items" offset="65535" invoker="get_n_items">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </virtual-method>
    <virtual-method name="is_mutable" offset="65535" invoker="is_mutable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="iterate_item_attributes" offset="65535" invoker="iterate_item_attributes">
      <return-value transfer-ownership="full">
        <type name="MenuAttributeIter"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="iterate_item_links" offset="65535" invoker="iterate_item_links">
      <return-value transfer-ownership="full">
        <type name="MenuLinkIter"/>
      </return-value>
      <parameters>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct MenuModelClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="is_mutable">
    <callback name="is_mutable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_n_items">
    <callback name="get_n_items">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_item_attributes">
    <callback name="get_item_attributes">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="attributes" transfer-ownership="none">
          <type name="GLib.HashTable">
            <type name="any"/>
            <type name="any"/>
          </type>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="iterate_item_attributes">
    <callback name="iterate_item_attributes">
      <return-value transfer-ownership="full">
        <type name="MenuAttributeIter"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_item_attribute_value">
    <callback name="get_item_attribute_value">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="attribute" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="expected_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_item_links">
    <callback name="get_item_links">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="links" transfer-ownership="none">
          <type name="GLib.HashTable">
            <type name="any"/>
            <type name="any"/>
          </type>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="iterate_item_links">
    <callback name="iterate_item_links">
      <return-value transfer-ownership="full">
        <type name="MenuLinkIter"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_item_link">
    <callback name="get_item_link">
      <return-value transfer-ownership="full">
        <type name="MenuModel"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <type name="MenuModel"/>
        </parameter>
        <parameter name="item_index" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="link" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
struct MenuModelPrivate
{
};
  <interface name="Mount" glib:type-name="GMount" glib:get-type="g_mount_get_type" glib:type-struct="MountIface">
    <method name="can_eject" c:identifier="g_mount_can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="can_unmount" c:identifier="g_mount_can_unmount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="eject" c:identifier="g_mount_eject" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_finish" c:identifier="g_mount_eject_finish" deprecated="1" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_with_operation" c:identifier="g_mount_eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_with_operation_finish" c:identifier="g_mount_eject_with_operation_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_default_location" c:identifier="g_mount_get_default_location">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </method>
    <method name="get_drive" c:identifier="g_mount_get_drive">
      <return-value transfer-ownership="full">
        <type name="Drive"/>
      </return-value>
    </method>
    <method name="get_icon" c:identifier="g_mount_get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
    </method>
    <method name="get_name" c:identifier="g_mount_get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_root" c:identifier="g_mount_get_root">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </method>
    <method name="get_sort_key" c:identifier="g_mount_get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_uuid" c:identifier="g_mount_get_uuid">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_volume" c:identifier="g_mount_get_volume">
      <return-value transfer-ownership="full">
        <type name="Volume"/>
      </return-value>
    </method>
    <method name="guess_content_type" c:identifier="g_mount_guess_content_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="force_rescan" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="guess_content_type_finish" c:identifier="g_mount_guess_content_type_finish" throws="1">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="guess_content_type_sync" c:identifier="g_mount_guess_content_type_sync" throws="1">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="force_rescan" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="is_shadowed" c:identifier="g_mount_is_shadowed">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="remount" c:identifier="g_mount_remount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="remount_finish" c:identifier="g_mount_remount_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="shadow" c:identifier="g_mount_shadow">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="unmount" c:identifier="g_mount_unmount" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="unmount_finish" c:identifier="g_mount_unmount_finish" deprecated="1" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="unmount_with_operation" c:identifier="g_mount_unmount_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="unmount_with_operation_finish" c:identifier="g_mount_unmount_with_operation_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="unshadow" c:identifier="g_mount_unshadow">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <glib:signal name="changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="pre-unmount" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="unmounted" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <virtual-method name="can_eject" offset="65535" invoker="can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_unmount" offset="65535" invoker="can_unmount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="eject" offset="65535" invoker="eject">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_finish" throws="1" offset="65535" invoker="eject_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_with_operation" offset="65535" invoker="eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_with_operation_finish" throws="1" offset="65535" invoker="eject_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_default_location" offset="65535" invoker="get_default_location">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_drive" offset="65535" invoker="get_drive">
      <return-value transfer-ownership="full">
        <type name="Drive"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_icon" offset="65535" invoker="get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_name" offset="65535" invoker="get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_root" offset="65535" invoker="get_root">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_sort_key" offset="65535" invoker="get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_uuid" offset="65535" invoker="get_uuid">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_volume" offset="65535" invoker="get_volume">
      <return-value transfer-ownership="full">
        <type name="Volume"/>
      </return-value>
    </virtual-method>
    <virtual-method name="guess_content_type" offset="65535" invoker="guess_content_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="force_rescan" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="guess_content_type_finish" throws="1" offset="65535" invoker="guess_content_type_finish">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="guess_content_type_sync" throws="1" offset="65535" invoker="guess_content_type_sync">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="force_rescan" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="pre_unmount" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="remount" offset="65535" invoker="remount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="remount_finish" throws="1" offset="65535" invoker="remount_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmount" offset="65535" invoker="unmount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmount_finish" throws="1" offset="65535" invoker="unmount_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmount_with_operation" offset="65535" invoker="unmount_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmount_with_operation_finish" throws="1" offset="65535" invoker="unmount_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="unmounted" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
  </interface>
struct MountIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="changed">
    <callback name="changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="unmounted">
    <callback name="unmounted">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_root">
    <callback name="get_root">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_name">
    <callback name="get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_icon">
    <callback name="get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_uuid">
    <callback name="get_uuid">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_volume">
    <callback name="get_volume">
      <return-value transfer-ownership="full">
        <type name="Volume"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_drive">
    <callback name="get_drive">
      <return-value transfer-ownership="full">
        <type name="Drive"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_unmount">
    <callback name="can_unmount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_eject">
    <callback name="can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="unmount">
    <callback name="unmount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="unmount_finish">
    <callback name="unmount_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject">
    <callback name="eject">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_finish">
    <callback name="eject_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="remount">
    <callback name="remount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="remount_finish">
    <callback name="remount_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="guess_content_type">
    <callback name="guess_content_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="force_rescan" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="guess_content_type_finish">
    <callback name="guess_content_type_finish">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="guess_content_type_sync">
    <callback name="guess_content_type_sync">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="force_rescan" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="pre_unmount">
    <callback name="pre_unmount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="unmount_with_operation">
    <callback name="unmount_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="unmount_with_operation_finish">
    <callback name="unmount_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_with_operation">
    <callback name="eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_with_operation_finish">
    <callback name="eject_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_default_location">
    <callback name="get_default_location">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_sort_key">
    <callback name="get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <bitfield name="MountMountFlags" glib:type-name="GMountMountFlags" glib:get-type="g_mount_mount_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_MOUNT_MOUNT_NONE"/>
    </member>
  </bitfield>
  <class name="MountOperation" parent="GObject.Object" glib:type-struct="MountOperationClass" glib:type-name="GMountOperation" glib:get-type="g_mount_operation_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="MountOperationPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_mount_operation_new">
      <return-value transfer-ownership="full">
        <type name="MountOperation"/>
      </return-value>
    </constructor>
    <method name="get_anonymous" c:identifier="g_mount_operation_get_anonymous">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_choice" c:identifier="g_mount_operation_get_choice">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="get_domain" c:identifier="g_mount_operation_get_domain">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_password" c:identifier="g_mount_operation_get_password">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_password_save" c:identifier="g_mount_operation_get_password_save">
      <return-value transfer-ownership="none">
        <type name="PasswordSave"/>
      </return-value>
    </method>
    <method name="get_username" c:identifier="g_mount_operation_get_username">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="reply" c:identifier="g_mount_operation_reply">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="MountOperationResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_anonymous" c:identifier="g_mount_operation_set_anonymous">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="anonymous" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_choice" c:identifier="g_mount_operation_set_choice">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="choice" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_domain" c:identifier="g_mount_operation_set_domain">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_password" c:identifier="g_mount_operation_set_password">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_password_save" c:identifier="g_mount_operation_set_password_save">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="save" transfer-ownership="none">
          <type name="PasswordSave"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_username" c:identifier="g_mount_operation_set_username">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="username" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <property name="anonymous" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="choice" writable="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
    <property name="domain" writable="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="password" writable="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="password-save" writable="1" transfer-ownership="none">
      <type name="PasswordSave"/>
    </property>
    <property name="username" writable="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <glib:signal name="aborted" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="ask-password" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_user" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="AskPasswordFlags"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="ask-question" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="choices" transfer-ownership="none">
          <array zero-terminated="1">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="reply" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="MountOperationResult"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="show-processes" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="processes" transfer-ownership="none">
          <array name="GLib.Array">
            <type name="gint32"/>
          </array>
        </parameter>
        <parameter name="choices" transfer-ownership="none">
          <array zero-terminated="1">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="aborted" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="ask_password" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_user" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="AskPasswordFlags"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="ask_question" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="choices" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="reply" offset="65535" invoker="reply">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="MountOperationResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="show_processes" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="processes" transfer-ownership="none">
          <array name="GLib.Array">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="choices" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct MountOperationClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="ask_password">
    <callback name="ask_password">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_user" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="AskPasswordFlags"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="ask_question">
    <callback name="ask_question">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="choices" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="reply">
    <callback name="reply">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="MountOperationResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="aborted">
    <callback name="aborted">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="MountOperation"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="show_processes">
    <callback name="show_processes">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="op" transfer-ownership="none">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="processes" transfer-ownership="none">
          <array name="GLib.Array">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="choices" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
  <field name="_g_reserved7">
    <type name="any"/>
  </field>
  <field name="_g_reserved8">
    <type name="any"/>
  </field>
  <field name="_g_reserved9">
    <type name="any"/>
  </field>
  <field name="_g_reserved10">
    <type name="any"/>
  </field>
};
struct MountOperationPrivate
{
};
  <enumeration name="MountOperationResult" glib:type-name="GMountOperationResult" glib:get-type="g_mount_operation_result_get_type">
    <member name="handled" value="0">
      <attribute name="c:identifier" value="G_MOUNT_OPERATION_HANDLED"/>
    </member>
    <member name="aborted" value="1">
      <attribute name="c:identifier" value="G_MOUNT_OPERATION_ABORTED"/>
    </member>
    <member name="unhandled" value="2">
      <attribute name="c:identifier" value="G_MOUNT_OPERATION_UNHANDLED"/>
    </member>
  </enumeration>
  <bitfield name="MountUnmountFlags" glib:type-name="GMountUnmountFlags" glib:get-type="g_mount_unmount_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_MOUNT_UNMOUNT_NONE"/>
    </member>
    <member name="force" value="1">
      <attribute name="c:identifier" value="G_MOUNT_UNMOUNT_FORCE"/>
    </member>
  </bitfield>
  <constant name="NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME" value="gio-native-volume-monitor">
    <type name="utf8"/>
  </constant>
  <constant name="NETWORK_MONITOR_EXTENSION_POINT_NAME" value="gio-network-monitor">
    <type name="utf8"/>
  </constant>
  <class name="NativeVolumeMonitor" parent="VolumeMonitor" glib:type-struct="NativeVolumeMonitorClass" abstract="1" glib:type-name="GNativeVolumeMonitor" glib:get-type="g_native_volume_monitor_get_type">
    <field name="parent_instance">
      <type name="VolumeMonitor"/>
    </field>
  </class>
struct NativeVolumeMonitorClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="VolumeMonitorClass"/>
  </field>
  <field name="get_mount_for_mount_path">
    <type name="any"/>
  </field>
};
  <class name="NetworkAddress" parent="GObject.Object" glib:type-struct="NetworkAddressClass" glib:type-name="GNetworkAddress" glib:get-type="g_network_address_get_type">
    <implements name="SocketConnectable"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="NetworkAddressPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_network_address_new">
      <return-value transfer-ownership="full">
        <type name="NetworkAddress"/>
      </return-value>
      <parameters>
        <parameter name="hostname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="parse" c:identifier="g_network_address_parse" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnectable"/>
      </return-value>
      <parameters>
        <parameter name="host_and_port" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_uri" c:identifier="g_network_address_parse_uri" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnectable"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
      </parameters>
    </function>
    <method name="get_hostname" c:identifier="g_network_address_get_hostname">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_port" c:identifier="g_network_address_get_port">
      <return-value transfer-ownership="none">
        <type name="guint16"/>
      </return-value>
    </method>
    <method name="get_scheme" c:identifier="g_network_address_get_scheme">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <property name="hostname" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="port" writable="1" construct-only="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="scheme" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
  </class>
struct NetworkAddressClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
};
struct NetworkAddressPrivate
{
};
  <interface name="NetworkMonitor" glib:type-name="GNetworkMonitor" glib:get-type="g_network_monitor_get_type" glib:type-struct="NetworkMonitorInterface">
    <prerequisite name="Initable"/>
    <function name="get_default" c:identifier="g_network_monitor_get_default">
      <return-value transfer-ownership="none">
        <type name="NetworkMonitor"/>
      </return-value>
    </function>
    <method name="can_reach" c:identifier="g_network_monitor_can_reach" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="can_reach_async" c:identifier="g_network_monitor_can_reach_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="can_reach_finish" c:identifier="g_network_monitor_can_reach_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_network_available" c:identifier="g_network_monitor_get_network_available">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <property name="network-available" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <glib:signal name="network-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="available" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="can_reach" throws="1" offset="65535" invoker="can_reach">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="can_reach_async" offset="65535" invoker="can_reach_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="can_reach_finish" throws="1" offset="65535" invoker="can_reach_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="network_changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="available" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct NetworkMonitorInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="network_changed">
    <callback name="network_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="monitor" transfer-ownership="none">
          <type name="NetworkMonitor"/>
        </parameter>
        <parameter name="available" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_reach">
    <callback name="can_reach">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="monitor" transfer-ownership="none">
          <type name="NetworkMonitor"/>
        </parameter>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_reach_async">
    <callback name="can_reach_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="monitor" transfer-ownership="none">
          <type name="NetworkMonitor"/>
        </parameter>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_reach_finish">
    <callback name="can_reach_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="monitor" transfer-ownership="none">
          <type name="NetworkMonitor"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="NetworkService" parent="GObject.Object" glib:type-struct="NetworkServiceClass" glib:type-name="GNetworkService" glib:get-type="g_network_service_get_type">
    <implements name="SocketConnectable"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="NetworkServicePrivate"/>
    </field>
    <constructor name="new" c:identifier="g_network_service_new">
      <return-value transfer-ownership="full">
        <type name="NetworkService"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_domain" c:identifier="g_network_service_get_domain">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_protocol" c:identifier="g_network_service_get_protocol">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_scheme" c:identifier="g_network_service_get_scheme">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_service" c:identifier="g_network_service_get_service">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="set_scheme" c:identifier="g_network_service_set_scheme">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="scheme" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <property name="domain" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="protocol" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="scheme" writable="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="service" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
  </class>
struct NetworkServiceClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
};
struct NetworkServicePrivate
{
};
  <class name="OutputStream" parent="GObject.Object" glib:type-struct="OutputStreamClass" abstract="1" glib:type-name="GOutputStream" glib:get-type="g_output_stream_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="OutputStreamPrivate"/>
    </field>
    <method name="clear_pending" c:identifier="g_output_stream_clear_pending">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="close" c:identifier="g_output_stream_close" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_async" c:identifier="g_output_stream_close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="close_finish" c:identifier="g_output_stream_close_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="flush" c:identifier="g_output_stream_flush" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="flush_async" c:identifier="g_output_stream_flush_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="flush_finish" c:identifier="g_output_stream_flush_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="has_pending" c:identifier="g_output_stream_has_pending">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="is_closed" c:identifier="g_output_stream_is_closed">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="is_closing" c:identifier="g_output_stream_is_closing">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="set_pending" c:identifier="g_output_stream_set_pending" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="splice" c:identifier="g_output_stream_splice" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="OutputStreamSpliceFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="splice_async" c:identifier="g_output_stream_splice_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="OutputStreamSpliceFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="splice_finish" c:identifier="g_output_stream_splice_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="write" c:identifier="g_output_stream_write" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="write_all" c:identifier="g_output_stream_write_all" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="bytes_written" transfer-ownership="full" direction="out" caller-allocates="0">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="write_async" c:identifier="g_output_stream_write_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="write_finish" c:identifier="g_output_stream_write_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="close_async" offset="65535" invoker="close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="close_finish" throws="1" offset="65535" invoker="close_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="close_fn" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="flush" throws="1" offset="65535" invoker="flush">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="flush_async" offset="65535" invoker="flush_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="flush_finish" throws="1" offset="65535" invoker="flush_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="splice" throws="1" offset="65535" invoker="splice">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="OutputStreamSpliceFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="splice_async" offset="65535" invoker="splice_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="OutputStreamSpliceFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="splice_finish" throws="1" offset="65535" invoker="splice_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="write_async" offset="65535" invoker="write_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="write_finish" throws="1" offset="65535" invoker="write_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="write_fn" throws="1" offset="65535" invoker="write">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct OutputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="write_fn">
    <callback name="write_fn">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="splice">
    <callback name="splice">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="source" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="OutputStreamSpliceFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="flush">
    <callback name="flush">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_fn">
    <callback name="close_fn">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="write_async">
    <callback name="write_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="write_finish">
    <callback name="write_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="splice_async">
    <callback name="splice_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="source" transfer-ownership="none">
          <type name="InputStream"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="OutputStreamSpliceFlags"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="splice_finish">
    <callback name="splice_finish">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="flush_async">
    <callback name="flush_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="flush_finish">
    <callback name="flush_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_async">
    <callback name="close_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="close_finish">
    <callback name="close_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="OutputStream"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
  <field name="_g_reserved7">
    <type name="any"/>
  </field>
  <field name="_g_reserved8">
    <type name="any"/>
  </field>
};
struct OutputStreamPrivate
{
};
  <bitfield name="OutputStreamSpliceFlags" glib:type-name="GOutputStreamSpliceFlags" glib:get-type="g_output_stream_splice_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_OUTPUT_STREAM_SPLICE_NONE"/>
    </member>
    <member name="close_source" value="1">
      <attribute name="c:identifier" value="G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE"/>
    </member>
    <member name="close_target" value="2">
      <attribute name="c:identifier" value="G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET"/>
    </member>
  </bitfield>
struct OutputVector
{
  <field name="buffer" writable="1">
    <type name="any"/>
  </field>
  <field name="size" writable="1">
    <type name="guint64"/>
  </field>
};
  <constant name="PROXY_EXTENSION_POINT_NAME" value="gio-proxy">
    <type name="utf8"/>
  </constant>
  <constant name="PROXY_RESOLVER_EXTENSION_POINT_NAME" value="gio-proxy-resolver">
    <type name="utf8"/>
  </constant>
  <enumeration name="PasswordSave" glib:type-name="GPasswordSave" glib:get-type="g_password_save_get_type">
    <member name="never" value="0">
      <attribute name="c:identifier" value="G_PASSWORD_SAVE_NEVER"/>
    </member>
    <member name="for_session" value="1">
      <attribute name="c:identifier" value="G_PASSWORD_SAVE_FOR_SESSION"/>
    </member>
    <member name="permanently" value="2">
      <attribute name="c:identifier" value="G_PASSWORD_SAVE_PERMANENTLY"/>
    </member>
  </enumeration>
  <class name="Permission" parent="GObject.Object" glib:type-struct="PermissionClass" abstract="1" glib:type-name="GPermission" glib:get-type="g_permission_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="PermissionPrivate"/>
    </field>
    <method name="acquire" c:identifier="g_permission_acquire" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="acquire_async" c:identifier="g_permission_acquire_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="acquire_finish" c:identifier="g_permission_acquire_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_allowed" c:identifier="g_permission_get_allowed">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_can_acquire" c:identifier="g_permission_get_can_acquire">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_can_release" c:identifier="g_permission_get_can_release">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="impl_update" c:identifier="g_permission_impl_update">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="allowed" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="can_acquire" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="can_release" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="release" c:identifier="g_permission_release" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="release_async" c:identifier="g_permission_release_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="release_finish" c:identifier="g_permission_release_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <property name="allowed" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="can-acquire" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="can-release" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <virtual-method name="acquire" throws="1" offset="65535" invoker="acquire">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="acquire_async" offset="65535" invoker="acquire_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="acquire_finish" throws="1" offset="65535" invoker="acquire_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="release" throws="1" offset="65535" invoker="release">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="release_async" offset="65535" invoker="release_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="release_finish" throws="1" offset="65535" invoker="release_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct PermissionClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="acquire">
    <callback name="acquire">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="permission" transfer-ownership="none">
          <type name="Permission"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="acquire_async">
    <callback name="acquire_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="permission" transfer-ownership="none">
          <type name="Permission"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="acquire_finish">
    <callback name="acquire_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="permission" transfer-ownership="none">
          <type name="Permission"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="release">
    <callback name="release">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="permission" transfer-ownership="none">
          <type name="Permission"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="release_async">
    <callback name="release_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="permission" transfer-ownership="none">
          <type name="Permission"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="release_finish">
    <callback name="release_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="permission" transfer-ownership="none">
          <type name="Permission"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="reserved">
    <array fixed-size="16">
      <type name="any"/>
    </array>
  </field>
};
struct PermissionPrivate
{
};
  <interface name="PollableInputStream" glib:type-name="GPollableInputStream" glib:get-type="g_pollable_input_stream_get_type" glib:type-struct="PollableInputStreamInterface">
    <prerequisite name="InputStream"/>
    <method name="can_poll" c:identifier="g_pollable_input_stream_can_poll">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="create_source" c:identifier="g_pollable_input_stream_create_source">
      <return-value transfer-ownership="full">
        <type name="GLib.Source"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="is_readable" c:identifier="g_pollable_input_stream_is_readable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="read_nonblocking" c:identifier="g_pollable_input_stream_read_nonblocking" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="can_poll" offset="65535" invoker="can_poll">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="create_source" offset="65535" invoker="create_source">
      <return-value transfer-ownership="full">
        <type name="GLib.Source"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="is_readable" offset="65535" invoker="is_readable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="read_nonblocking" throws="1" offset="65535" invoker="read_nonblocking">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct PollableInputStreamInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="can_poll">
    <callback name="can_poll">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="PollableInputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="is_readable">
    <callback name="is_readable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="PollableInputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create_source">
    <callback name="create_source">
      <return-value transfer-ownership="full">
        <type name="GLib.Source"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="PollableInputStream"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="read_nonblocking">
    <callback name="read_nonblocking">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="PollableInputStream"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <interface name="PollableOutputStream" glib:type-name="GPollableOutputStream" glib:get-type="g_pollable_output_stream_get_type" glib:type-struct="PollableOutputStreamInterface">
    <prerequisite name="OutputStream"/>
    <method name="can_poll" c:identifier="g_pollable_output_stream_can_poll">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="create_source" c:identifier="g_pollable_output_stream_create_source">
      <return-value transfer-ownership="full">
        <type name="GLib.Source"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="is_writable" c:identifier="g_pollable_output_stream_is_writable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="write_nonblocking" c:identifier="g_pollable_output_stream_write_nonblocking" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="can_poll" offset="65535" invoker="can_poll">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="create_source" offset="65535" invoker="create_source">
      <return-value transfer-ownership="full">
        <type name="GLib.Source"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="is_writable" offset="65535" invoker="is_writable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="write_nonblocking" throws="1" offset="65535" invoker="write_nonblocking">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct PollableOutputStreamInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="can_poll">
    <callback name="can_poll">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="PollableOutputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="is_writable">
    <callback name="is_writable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="PollableOutputStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create_source">
    <callback name="create_source">
      <return-value transfer-ownership="full">
        <type name="GLib.Source"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="PollableOutputStream"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="write_nonblocking">
    <callback name="write_nonblocking">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="stream" transfer-ownership="none">
          <type name="PollableOutputStream"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <callback name="PollableSourceFunc">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="pollable_stream" transfer-ownership="none">
        <type name="GObject.Object"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="1">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <interface name="Proxy" glib:type-name="GProxy" glib:get-type="g_proxy_get_type" glib:type-struct="ProxyInterface">
    <function name="get_default_for_protocol" c:identifier="g_proxy_get_default_for_protocol">
      <return-value transfer-ownership="full">
        <type name="Proxy"/>
      </return-value>
      <parameters>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <method name="connect" c:identifier="g_proxy_connect" throws="1">
      <return-value transfer-ownership="full">
        <type name="IOStream"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="proxy_address" transfer-ownership="none">
          <type name="ProxyAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_async" c:identifier="g_proxy_connect_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="proxy_address" transfer-ownership="none">
          <type name="ProxyAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_finish" c:identifier="g_proxy_connect_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="IOStream"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="supports_hostname" c:identifier="g_proxy_supports_hostname">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <virtual-method name="connect" throws="1" offset="65535" invoker="connect">
      <return-value transfer-ownership="full">
        <type name="IOStream"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="proxy_address" transfer-ownership="none">
          <type name="ProxyAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="connect_async" offset="65535" invoker="connect_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="proxy_address" transfer-ownership="none">
          <type name="ProxyAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="connect_finish" throws="1" offset="65535" invoker="connect_finish">
      <return-value transfer-ownership="full">
        <type name="IOStream"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="supports_hostname" offset="65535" invoker="supports_hostname">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
  </interface>
  <class name="ProxyAddress" parent="InetSocketAddress" glib:type-struct="ProxyAddressClass" glib:type-name="GProxyAddress" glib:get-type="g_proxy_address_get_type">
    <implements name="SocketConnectable"/>
    <field name="parent_instance">
      <type name="InetSocketAddress"/>
    </field>
    <field name="priv">
      <type name="ProxyAddressPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_proxy_address_new">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="inetaddr" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="dest_hostname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="dest_port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
        <parameter name="username" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
        <parameter name="password" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_destination_hostname" c:identifier="g_proxy_address_get_destination_hostname">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_destination_port" c:identifier="g_proxy_address_get_destination_port">
      <return-value transfer-ownership="none">
        <type name="guint16"/>
      </return-value>
    </method>
    <method name="get_password" c:identifier="g_proxy_address_get_password">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_protocol" c:identifier="g_proxy_address_get_protocol">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_username" c:identifier="g_proxy_address_get_username">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <property name="destination-hostname" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="destination-port" writable="1" construct-only="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="password" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="protocol" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="username" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
  </class>
struct ProxyAddressClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="InetSocketAddressClass"/>
  </field>
};
  <class name="ProxyAddressEnumerator" parent="SocketAddressEnumerator" glib:type-struct="ProxyAddressEnumeratorClass" glib:type-name="GProxyAddressEnumerator" glib:get-type="g_proxy_address_enumerator_get_type">
    <field name="parent_instance">
      <type name="SocketAddressEnumerator"/>
    </field>
    <field name="priv">
      <type name="ProxyAddressEnumeratorPrivate"/>
    </field>
    <property name="connectable" writable="1" construct-only="1" transfer-ownership="none">
      <type name="SocketConnectable"/>
    </property>
    <property name="uri" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
  </class>
struct ProxyAddressEnumeratorClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketAddressEnumeratorClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
  <field name="_g_reserved7">
    <type name="any"/>
  </field>
};
struct ProxyAddressEnumeratorPrivate
{
};
struct ProxyAddressPrivate
{
};
struct ProxyInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="connect">
    <callback name="connect">
      <return-value transfer-ownership="full">
        <type name="IOStream"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="Proxy"/>
        </parameter>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="proxy_address" transfer-ownership="none">
          <type name="ProxyAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="connect_async">
    <callback name="connect_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="Proxy"/>
        </parameter>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="proxy_address" transfer-ownership="none">
          <type name="ProxyAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="connect_finish">
    <callback name="connect_finish">
      <return-value transfer-ownership="full">
        <type name="IOStream"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="Proxy"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="supports_hostname">
    <callback name="supports_hostname">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="Proxy"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <interface name="ProxyResolver" glib:type-name="GProxyResolver" glib:get-type="g_proxy_resolver_get_type" glib:type-struct="ProxyResolverInterface">
    <function name="get_default" c:identifier="g_proxy_resolver_get_default">
      <return-value transfer-ownership="none">
        <type name="ProxyResolver"/>
      </return-value>
    </function>
    <method name="is_supported" c:identifier="g_proxy_resolver_is_supported">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="lookup" c:identifier="g_proxy_resolver_lookup" throws="1">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_async" c:identifier="g_proxy_resolver_lookup_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_finish" c:identifier="g_proxy_resolver_lookup_finish" throws="1">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="is_supported" offset="65535" invoker="is_supported">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="lookup" throws="1" offset="65535" invoker="lookup">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_async" offset="65535" invoker="lookup_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_finish" throws="1" offset="65535" invoker="lookup_finish">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct ProxyResolverInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="is_supported">
    <callback name="is_supported">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="ProxyResolver"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup">
    <callback name="lookup">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="ProxyResolver"/>
        </parameter>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_async">
    <callback name="lookup_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="ProxyResolver"/>
        </parameter>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_finish">
    <callback name="lookup_finish">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="ProxyResolver"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <interface name="RemoteActionGroup" glib:type-name="GRemoteActionGroup" glib:get-type="g_remote_action_group_get_type" glib:type-struct="RemoteActionGroupInterface">
    <prerequisite name="ActionGroup"/>
    <method name="activate_action_full" c:identifier="g_remote_action_group_activate_action_full">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameter" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="change_action_state_full" c:identifier="g_remote_action_group_change_action_state_full">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="activate_action_full" offset="65535" invoker="activate_action_full">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameter" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="change_action_state_full" offset="65535" invoker="change_action_state_full">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct RemoteActionGroupInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="activate_action_full">
    <callback name="activate_action_full">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="remote" transfer-ownership="none">
          <type name="RemoteActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameter" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="change_action_state_full">
    <callback name="change_action_state_full">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="remote" transfer-ownership="none">
          <type name="RemoteActionGroup"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
        <parameter name="platform_data" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="Resolver" parent="GObject.Object" glib:type-struct="ResolverClass" glib:type-name="GResolver" glib:get-type="g_resolver_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="ResolverPrivate"/>
    </field>
    <function name="get_default" c:identifier="g_resolver_get_default">
      <return-value transfer-ownership="full">
        <type name="Resolver"/>
      </return-value>
    </function>
    <method name="lookup_by_address" c:identifier="g_resolver_lookup_by_address" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_by_address_async" c:identifier="g_resolver_lookup_by_address_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_by_address_finish" c:identifier="g_resolver_lookup_by_address_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_by_name" c:identifier="g_resolver_lookup_by_name" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="InetAddress"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="hostname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_by_name_async" c:identifier="g_resolver_lookup_by_name_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="hostname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_by_name_finish" c:identifier="g_resolver_lookup_by_name_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="InetAddress"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_service" c:identifier="g_resolver_lookup_service" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="SrvTarget"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_service_async" c:identifier="g_resolver_lookup_service_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_service_finish" c:identifier="g_resolver_lookup_service_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="SrvTarget"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_default" c:identifier="g_resolver_set_default">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <glib:signal name="reload" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <virtual-method name="lookup_by_address" throws="1" offset="65535" invoker="lookup_by_address">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_by_address_async" offset="65535" invoker="lookup_by_address_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_by_address_finish" throws="1" offset="65535" invoker="lookup_by_address_finish">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_by_name" throws="1" offset="65535" invoker="lookup_by_name">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="InetAddress"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="hostname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_by_name_async" offset="65535" invoker="lookup_by_name_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="hostname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_by_name_finish" throws="1" offset="65535" invoker="lookup_by_name_finish">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="InetAddress"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_service_async" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="rrname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_service_finish" throws="1" offset="65535" invoker="lookup_service_finish">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="SrvTarget"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="reload" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
  </class>
struct ResolverClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="reload">
    <callback name="reload">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_by_name">
    <callback name="lookup_by_name">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="InetAddress"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
        <parameter name="hostname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_by_name_async">
    <callback name="lookup_by_name_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
        <parameter name="hostname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_by_name_finish">
    <callback name="lookup_by_name_finish">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="InetAddress"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_by_address">
    <callback name="lookup_by_address">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_by_address_async">
    <callback name="lookup_by_address_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
        <parameter name="address" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_by_address_finish">
    <callback name="lookup_by_address_finish">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_service">
    <type name="any"/>
  </field>
  <field name="lookup_service_async">
    <callback name="lookup_service_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
        <parameter name="rrname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_service_finish">
    <callback name="lookup_service_finish">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="SrvTarget"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="resolver" transfer-ownership="none">
          <type name="Resolver"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
};
  <enumeration name="ResolverError" glib:type-name="GResolverError" glib:get-type="g_resolver_error_get_type" glib:error-domain="g-resolver-error-quark">
    <member name="not_found" value="0">
      <attribute name="c:identifier" value="G_RESOLVER_ERROR_NOT_FOUND"/>
    </member>
    <member name="temporary_failure" value="1">
      <attribute name="c:identifier" value="G_RESOLVER_ERROR_TEMPORARY_FAILURE"/>
    </member>
    <member name="internal" value="2">
      <attribute name="c:identifier" value="G_RESOLVER_ERROR_INTERNAL"/>
    </member>
  </enumeration>
struct ResolverPrivate
{
};
struct Resource
{
 glib:type-name="GResource" glib:get-type="g_resource_get_type"  <constructor name="new_from_data" c:identifier="g_resource_new_from_data" throws="1">
    <return-value transfer-ownership="full">
      <type name="Resource"/>
    </return-value>
    <parameters>
      <parameter name="data" transfer-ownership="none">
        <type name="GLib.Bytes"/>
      </parameter>
    </parameters>
  </constructor>
  <method name="_register" c:identifier="g_resources_register">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <method name="_unregister" c:identifier="g_resources_unregister">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <method name="enumerate_children" c:identifier="g_resource_enumerate_children" throws="1">
    <return-value transfer-ownership="full">
      <array zero-terminated="1">
        <type name="utf8"/>
      </array>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="lookup_flags" transfer-ownership="none">
        <type name="ResourceLookupFlags"/>
      </parameter>
    </parameters>
  </method>
  <method name="get_info" c:identifier="g_resource_get_info" throws="1">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="lookup_flags" transfer-ownership="none">
        <type name="ResourceLookupFlags"/>
      </parameter>
      <parameter name="size" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
        <type name="guint64"/>
      </parameter>
      <parameter name="flags" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
        <type name="guint32"/>
      </parameter>
    </parameters>
  </method>
  <method name="lookup_data" c:identifier="g_resource_lookup_data" throws="1">
    <return-value transfer-ownership="full">
      <type name="GLib.Bytes"/>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="lookup_flags" transfer-ownership="none">
        <type name="ResourceLookupFlags"/>
      </parameter>
    </parameters>
  </method>
  <method name="open_stream" c:identifier="g_resource_open_stream" throws="1">
    <return-value transfer-ownership="full">
      <type name="InputStream"/>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="lookup_flags" transfer-ownership="none">
        <type name="ResourceLookupFlags"/>
      </parameter>
    </parameters>
  </method>
  <method name="ref" c:identifier="g_resource_ref">
    <return-value transfer-ownership="full">
      <type name="Resource"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_resource_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <function name="load" c:identifier="g_resource_load" throws="1">
    <return-value transfer-ownership="full">
      <type name="Resource"/>
    </return-value>
    <parameters>
      <parameter name="filename" transfer-ownership="none">
        <type name="filename"/>
      </parameter>
    </parameters>
  </function>
};
  <enumeration name="ResourceError" glib:type-name="GResourceError" glib:get-type="g_resource_error_get_type" glib:error-domain="g-resource-error-quark">
    <member name="not_found" value="0">
      <attribute name="c:identifier" value="G_RESOURCE_ERROR_NOT_FOUND"/>
    </member>
    <member name="internal" value="1">
      <attribute name="c:identifier" value="G_RESOURCE_ERROR_INTERNAL"/>
    </member>
  </enumeration>
  <bitfield name="ResourceFlags" glib:type-name="GResourceFlags" glib:get-type="g_resource_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_RESOURCE_FLAGS_NONE"/>
    </member>
    <member name="compressed" value="1">
      <attribute name="c:identifier" value="G_RESOURCE_FLAGS_COMPRESSED"/>
    </member>
  </bitfield>
  <bitfield name="ResourceLookupFlags" glib:type-name="GResourceLookupFlags" glib:get-type="g_resource_lookup_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_RESOURCE_LOOKUP_FLAGS_NONE"/>
    </member>
  </bitfield>
  <interface name="Seekable" glib:type-name="GSeekable" glib:get-type="g_seekable_get_type" glib:type-struct="SeekableIface">
    <method name="can_seek" c:identifier="g_seekable_can_seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="can_truncate" c:identifier="g_seekable_can_truncate">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="seek" c:identifier="g_seekable_seek" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="tell" c:identifier="g_seekable_tell">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </method>
    <method name="truncate" c:identifier="g_seekable_truncate" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="can_seek" offset="65535" invoker="can_seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_truncate" offset="65535" invoker="can_truncate">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="seek" throws="1" offset="65535" invoker="seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="tell" offset="65535" invoker="tell">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </virtual-method>
    <virtual-method name="truncate_fn" throws="1" offset="65535" invoker="truncate">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
  </interface>
struct SeekableIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="tell">
    <callback name="tell">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="seekable" transfer-ownership="none">
          <type name="Seekable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_seek">
    <callback name="can_seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="seekable" transfer-ownership="none">
          <type name="Seekable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="seek">
    <callback name="seek">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="seekable" transfer-ownership="none">
          <type name="Seekable"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GLib.SeekType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_truncate">
    <callback name="can_truncate">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="seekable" transfer-ownership="none">
          <type name="Seekable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="truncate_fn">
    <callback name="truncate_fn">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="seekable" transfer-ownership="none">
          <type name="Seekable"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="Settings" parent="GObject.Object" glib:type-struct="SettingsClass" glib:type-name="GSettings" glib:get-type="g_settings_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="SettingsPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_settings_new">
      <return-value transfer-ownership="full">
        <type name="Settings"/>
      </return-value>
      <parameters>
        <parameter name="schema_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_full" c:identifier="g_settings_new_full">
      <return-value transfer-ownership="full">
        <type name="Settings"/>
      </return-value>
      <parameters>
        <parameter name="schema" transfer-ownership="none">
          <type name="SettingsSchema"/>
        </parameter>
        <parameter name="backend" transfer-ownership="none" allow-none="1">
          <type name="SettingsBackend"/>
        </parameter>
        <parameter name="path" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_with_backend" c:identifier="g_settings_new_with_backend">
      <return-value transfer-ownership="full">
        <type name="Settings"/>
      </return-value>
      <parameters>
        <parameter name="schema_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="backend" transfer-ownership="none">
          <type name="SettingsBackend"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_with_backend_and_path" c:identifier="g_settings_new_with_backend_and_path">
      <return-value transfer-ownership="full">
        <type name="Settings"/>
      </return-value>
      <parameters>
        <parameter name="schema_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="backend" transfer-ownership="none">
          <type name="SettingsBackend"/>
        </parameter>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_with_path" c:identifier="g_settings_new_with_path">
      <return-value transfer-ownership="full">
        <type name="Settings"/>
      </return-value>
      <parameters>
        <parameter name="schema_id" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="list_relocatable_schemas" c:identifier="g_settings_list_relocatable_schemas">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </function>
    <function name="list_schemas" c:identifier="g_settings_list_schemas">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </function>
    <function name="sync" c:identifier="g_settings_sync">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </function>
    <function name="unbind" c:identifier="g_settings_unbind">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <method name="apply" c:identifier="g_settings_apply">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="bind" c:identifier="g_settings_bind">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="SettingsBindFlags"/>
        </parameter>
      </parameters>
    </method>
    <method name="bind_writable" c:identifier="g_settings_bind_writable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="inverted" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="create_action" c:identifier="g_settings_create_action">
      <return-value transfer-ownership="full">
        <type name="Action"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="delay" c:identifier="g_settings_delay">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="get_boolean" c:identifier="g_settings_get_boolean">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_child" c:identifier="g_settings_get_child">
      <return-value transfer-ownership="full">
        <type name="Settings"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_double" c:identifier="g_settings_get_double">
      <return-value transfer-ownership="none">
        <type name="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_enum" c:identifier="g_settings_get_enum">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_flags" c:identifier="g_settings_get_flags">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_has_unapplied" c:identifier="g_settings_get_has_unapplied">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_int" c:identifier="g_settings_get_int">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_mapped" c:identifier="g_settings_get_mapped">
      <return-value transfer-ownership="full">
        <type name="any"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="mapping" transfer-ownership="none" scope="call" closure="2">
          <type name="SettingsGetMapping"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_range" c:identifier="g_settings_get_range">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_string" c:identifier="g_settings_get_string">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_strv" c:identifier="g_settings_get_strv">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_uint" c:identifier="g_settings_get_uint">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_value" c:identifier="g_settings_get_value">
      <return-value transfer-ownership="full">
        <type name="GLib.Variant"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="is_writable" c:identifier="g_settings_is_writable">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="list_children" c:identifier="g_settings_list_children">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="list_keys" c:identifier="g_settings_list_keys">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="range_check" c:identifier="g_settings_range_check">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <method name="reset" c:identifier="g_settings_reset">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="revert" c:identifier="g_settings_revert">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="set_boolean" c:identifier="g_settings_set_boolean">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_double" c:identifier="g_settings_set_double">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gdouble"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_enum" c:identifier="g_settings_set_enum">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_flags" c:identifier="g_settings_set_flags">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_int" c:identifier="g_settings_set_int">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_string" c:identifier="g_settings_set_string">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_strv" c:identifier="g_settings_set_strv">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none" allow-none="1">
          <array zero-terminated="1">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </method>
    <method name="set_uint" c:identifier="g_settings_set_uint">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_value" c:identifier="g_settings_set_value">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <property name="delay-apply" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="has-unapplied" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="path" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="schema" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="schema-id" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="settings-schema" writable="1" construct-only="1" transfer-ownership="none">
      <type name="SettingsSchema"/>
    </property>
    <glib:signal name="change-event" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="keys" transfer-ownership="none" allow-none="1">
          <array length="1">
            <type name="guint32"/>
          </array>
        </parameter>
        <parameter name="n_keys" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="changed" when="CLEANUP" detailed="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="writable-change-event" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="writable-changed" when="CLEANUP" detailed="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="change_event" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="keys" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
        <parameter name="n_keys" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="writable_change_event" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="writable_changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct SettingsBackend
{
};
  <bitfield name="SettingsBindFlags" glib:type-name="GSettingsBindFlags" glib:get-type="g_settings_bind_flags_get_type">
    <member name="default" value="0">
      <attribute name="c:identifier" value="G_SETTINGS_BIND_DEFAULT"/>
    </member>
    <member name="get" value="1">
      <attribute name="c:identifier" value="G_SETTINGS_BIND_GET"/>
    </member>
    <member name="set" value="2">
      <attribute name="c:identifier" value="G_SETTINGS_BIND_SET"/>
    </member>
    <member name="no_sensitivity" value="4">
      <attribute name="c:identifier" value="G_SETTINGS_BIND_NO_SENSITIVITY"/>
    </member>
    <member name="get_no_changes" value="8">
      <attribute name="c:identifier" value="G_SETTINGS_BIND_GET_NO_CHANGES"/>
    </member>
    <member name="invert_boolean" value="16">
      <attribute name="c:identifier" value="G_SETTINGS_BIND_INVERT_BOOLEAN"/>
    </member>
  </bitfield>
  <callback name="SettingsBindGetMapping">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="value" transfer-ownership="none">
        <type name="GObject.Value"/>
      </parameter>
      <parameter name="variant" transfer-ownership="none">
        <type name="GLib.Variant"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <callback name="SettingsBindSetMapping">
    <return-value transfer-ownership="full">
      <type name="GLib.Variant"/>
    </return-value>
    <parameters>
      <parameter name="value" transfer-ownership="none">
        <type name="GObject.Value"/>
      </parameter>
      <parameter name="expected_type" transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
struct SettingsClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="writable_changed">
    <callback name="writable_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="settings" transfer-ownership="none">
          <type name="Settings"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="changed">
    <callback name="changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="settings" transfer-ownership="none">
          <type name="Settings"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="writable_change_event">
    <callback name="writable_change_event">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="settings" transfer-ownership="none">
          <type name="Settings"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="change_event">
    <callback name="change_event">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="settings" transfer-ownership="none">
          <type name="Settings"/>
        </parameter>
        <parameter name="keys" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
        <parameter name="n_keys" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="20">
      <type name="any"/>
    </array>
  </field>
};
  <callback name="SettingsGetMapping">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="value" transfer-ownership="none">
        <type name="GLib.Variant"/>
      </parameter>
      <parameter name="result" transfer-ownership="full" direction="out" caller-allocates="0">
        <type name="any"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
struct SettingsPrivate
{
};
struct SettingsSchema
{
 glib:type-name="GSettingsSchema" glib:get-type="g_settings_schema_get_type"  <method name="get_id" c:identifier="g_settings_schema_get_id">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="get_path" c:identifier="g_settings_schema_get_path">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="ref" c:identifier="g_settings_schema_ref">
    <return-value transfer-ownership="full">
      <type name="SettingsSchema"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_settings_schema_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
struct SettingsSchemaSource
{
 glib:type-name="GSettingsSchemaSource" glib:get-type="g_settings_schema_source_get_type"  <constructor name="new_from_directory" c:identifier="g_settings_schema_source_new_from_directory" throws="1">
    <return-value transfer-ownership="full">
      <type name="SettingsSchemaSource"/>
    </return-value>
    <parameters>
      <parameter name="directory" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="parent" transfer-ownership="none" allow-none="1">
        <type name="SettingsSchemaSource"/>
      </parameter>
      <parameter name="trusted" transfer-ownership="none">
        <type name="gboolean"/>
      </parameter>
    </parameters>
  </constructor>
  <method name="lookup" c:identifier="g_settings_schema_source_lookup">
    <return-value transfer-ownership="full">
      <type name="SettingsSchema"/>
    </return-value>
    <parameters>
      <parameter name="schema_id" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="recursive" transfer-ownership="none">
        <type name="gboolean"/>
      </parameter>
    </parameters>
  </method>
  <method name="ref" c:identifier="g_settings_schema_source_ref">
    <return-value transfer-ownership="full">
      <type name="SettingsSchemaSource"/>
    </return-value>
  </method>
  <method name="unref" c:identifier="g_settings_schema_source_unref">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <function name="get_default" c:identifier="g_settings_schema_source_get_default">
    <return-value transfer-ownership="none">
      <type name="SettingsSchemaSource"/>
    </return-value>
  </function>
};
  <class name="SimpleAction" parent="GObject.Object" glib:type-name="GSimpleAction" glib:get-type="g_simple_action_get_type">
    <implements name="Action"/>
    <constructor name="new" c:identifier="g_simple_action_new">
      <return-value transfer-ownership="full">
        <type name="SimpleAction"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameter_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_stateful" c:identifier="g_simple_action_new_stateful">
      <return-value transfer-ownership="full">
        <type name="SimpleAction"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="parameter_type" transfer-ownership="none" allow-none="1">
          <type name="GLib.VariantType"/>
        </parameter>
        <parameter name="state" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="set_enabled" c:identifier="g_simple_action_set_enabled">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="enabled" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_state" c:identifier="g_simple_action_set_state">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </method>
    <property name="enabled" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="name" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="parameter-type" writable="1" construct-only="1" transfer-ownership="none">
      <type name="GLib.VariantType"/>
    </property>
    <property name="state" writable="1" transfer-ownership="none">
      <type name="GLib.Variant"/>
    </property>
    <property name="state-type" transfer-ownership="none">
      <type name="GLib.VariantType"/>
    </property>
    <glib:signal name="activate" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="parameter" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="change-state" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none" allow-none="1">
          <type name="GLib.Variant"/>
        </parameter>
      </parameters>
    </glib:signal>
  </class>
  <class name="SimpleActionGroup" parent="GObject.Object" glib:type-struct="SimpleActionGroupClass" glib:type-name="GSimpleActionGroup" glib:get-type="g_simple_action_group_get_type">
    <implements name="ActionGroup"/>
    <implements name="ActionMap"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="SimpleActionGroupPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_simple_action_group_new">
      <return-value transfer-ownership="full">
        <type name="SimpleActionGroup"/>
      </return-value>
    </constructor>
    <method name="add_entries" c:identifier="g_simple_action_group_add_entries">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="entries" transfer-ownership="none">
          <array length="1">
            <type name="ActionEntry"/>
          </array>
        </parameter>
        <parameter name="n_entries" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="insert" c:identifier="g_simple_action_group_insert">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <type name="Action"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup" c:identifier="g_simple_action_group_lookup">
      <return-value transfer-ownership="none">
        <type name="Action"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="remove" c:identifier="g_simple_action_group_remove">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="action_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
  </class>
struct SimpleActionGroupClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="padding">
    <array fixed-size="12">
      <type name="any"/>
    </array>
  </field>
};
struct SimpleActionGroupPrivate
{
};
  <class name="SimpleAsyncResult" parent="GObject.Object" glib:type-struct="SimpleAsyncResultClass" glib:type-name="GSimpleAsyncResult" glib:get-type="g_simple_async_result_get_type">
    <implements name="AsyncResult"/>
    <constructor name="new" c:identifier="g_simple_async_result_new">
      <return-value transfer-ownership="full">
        <type name="SimpleAsyncResult"/>
      </return-value>
      <parameters>
        <parameter name="source_object" transfer-ownership="none" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="source_tag" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_error" c:identifier="g_simple_async_result_new_from_error">
      <return-value transfer-ownership="full">
        <type name="SimpleAsyncResult"/>
      </return-value>
      <parameters>
        <parameter name="source_object" transfer-ownership="none" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="is_valid" c:identifier="g_simple_async_result_is_valid">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="source" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
        <parameter name="source_tag" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </function>
    <method name="complete" c:identifier="g_simple_async_result_complete">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="complete_in_idle" c:identifier="g_simple_async_result_complete_in_idle">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="get_op_res_gboolean" c:identifier="g_simple_async_result_get_op_res_gboolean">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_op_res_gssize" c:identifier="g_simple_async_result_get_op_res_gssize">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </method>
    <method name="propagate_error" c:identifier="g_simple_async_result_propagate_error" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="set_check_cancellable" c:identifier="g_simple_async_result_set_check_cancellable">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="check_cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_from_error" c:identifier="g_simple_async_result_set_from_error">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_handle_cancellation" c:identifier="g_simple_async_result_set_handle_cancellation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="handle_cancellation" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_op_res_gboolean" c:identifier="g_simple_async_result_set_op_res_gboolean">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="op_res" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_op_res_gssize" c:identifier="g_simple_async_result_set_op_res_gssize">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="op_res" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
      </parameters>
    </method>
  </class>
struct SimpleAsyncResultClass
{
 glib:is-gtype-struct="1"};
  <callback name="SimpleAsyncThreadFunc">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="res" transfer-ownership="none">
        <type name="SimpleAsyncResult"/>
      </parameter>
      <parameter name="object" transfer-ownership="none">
        <type name="GObject.Object"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
    </parameters>
  </callback>
  <class name="SimplePermission" parent="Permission" glib:type-name="GSimplePermission" glib:get-type="g_simple_permission_get_type">
    <constructor name="new" c:identifier="g_simple_permission_new">
      <return-value transfer-ownership="full">
        <type name="Permission"/>
      </return-value>
      <parameters>
        <parameter name="allowed" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </constructor>
  </class>
  <class name="Socket" parent="GObject.Object" glib:type-struct="SocketClass" glib:type-name="GSocket" glib:get-type="g_socket_get_type">
    <implements name="Initable"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="SocketPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_socket_new" throws="1">
      <return-value transfer-ownership="full">
        <type name="Socket"/>
      </return-value>
      <parameters>
        <parameter name="family" transfer-ownership="none">
          <type name="SocketFamily"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="SocketType"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="SocketProtocol"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_fd" c:identifier="g_socket_new_from_fd" throws="1">
      <return-value transfer-ownership="full">
        <type name="Socket"/>
      </return-value>
      <parameters>
        <parameter name="fd" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="accept" c:identifier="g_socket_accept" throws="1">
      <return-value transfer-ownership="full">
        <type name="Socket"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="bind" c:identifier="g_socket_bind" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="allow_reuse" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="check_connect_result" c:identifier="g_socket_check_connect_result" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="close" c:identifier="g_socket_close" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="condition_check" c:identifier="g_socket_condition_check">
      <return-value transfer-ownership="none">
        <type name="GLib.IOCondition"/>
      </return-value>
      <parameters>
        <parameter name="condition" transfer-ownership="none">
          <type name="GLib.IOCondition"/>
        </parameter>
      </parameters>
    </method>
    <method name="condition_timed_wait" c:identifier="g_socket_condition_timed_wait" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="condition" transfer-ownership="none">
          <type name="GLib.IOCondition"/>
        </parameter>
        <parameter name="timeout" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="condition_wait" c:identifier="g_socket_condition_wait" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="condition" transfer-ownership="none">
          <type name="GLib.IOCondition"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect" c:identifier="g_socket_connect" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="connection_factory_create_connection" c:identifier="g_socket_connection_factory_create_connection">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
    </method>
    <method name="get_available_bytes" c:identifier="g_socket_get_available_bytes">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </method>
    <method name="get_blocking" c:identifier="g_socket_get_blocking">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_broadcast" c:identifier="g_socket_get_broadcast">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_credentials" c:identifier="g_socket_get_credentials" throws="1">
      <return-value transfer-ownership="full">
        <type name="Credentials"/>
      </return-value>
    </method>
    <method name="get_family" c:identifier="g_socket_get_family">
      <return-value transfer-ownership="none">
        <type name="SocketFamily"/>
      </return-value>
    </method>
    <method name="get_fd" c:identifier="g_socket_get_fd">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="get_keepalive" c:identifier="g_socket_get_keepalive">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_listen_backlog" c:identifier="g_socket_get_listen_backlog">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="get_local_address" c:identifier="g_socket_get_local_address" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
    </method>
    <method name="get_multicast_loopback" c:identifier="g_socket_get_multicast_loopback">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_multicast_ttl" c:identifier="g_socket_get_multicast_ttl">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_protocol" c:identifier="g_socket_get_protocol">
      <return-value transfer-ownership="none">
        <type name="SocketProtocol"/>
      </return-value>
    </method>
    <method name="get_remote_address" c:identifier="g_socket_get_remote_address" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
    </method>
    <method name="get_socket_type" c:identifier="g_socket_get_socket_type">
      <return-value transfer-ownership="none">
        <type name="SocketType"/>
      </return-value>
    </method>
    <method name="get_timeout" c:identifier="g_socket_get_timeout">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_ttl" c:identifier="g_socket_get_ttl">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="is_closed" c:identifier="g_socket_is_closed">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="is_connected" c:identifier="g_socket_is_connected">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="join_multicast_group" c:identifier="g_socket_join_multicast_group" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="group" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="source_specific" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="iface" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="leave_multicast_group" c:identifier="g_socket_leave_multicast_group" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="group" transfer-ownership="none">
          <type name="InetAddress"/>
        </parameter>
        <parameter name="source_specific" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="iface" transfer-ownership="none" allow-none="1">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="listen" c:identifier="g_socket_listen" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="receive" c:identifier="g_socket_receive" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="receive_from" c:identifier="g_socket_receive_from" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="receive_message" c:identifier="g_socket_receive_message" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="vectors" transfer-ownership="none">
          <array length="2">
            <type name="InputVector"/>
          </array>
        </parameter>
        <parameter name="num_vectors" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="messages" transfer-ownership="none" allow-none="1">
          <array length="4">
            <type name="SocketControlMessage"/>
          </array>
        </parameter>
        <parameter name="num_messages" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="receive_with_blocking" c:identifier="g_socket_receive_with_blocking" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="blocking" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="send" c:identifier="g_socket_send" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_message" c:identifier="g_socket_send_message" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none" allow-none="1">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="vectors" transfer-ownership="none">
          <array length="2">
            <type name="OutputVector"/>
          </array>
        </parameter>
        <parameter name="num_vectors" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="messages" transfer-ownership="none" allow-none="1">
          <array length="4">
            <type name="SocketControlMessage"/>
          </array>
        </parameter>
        <parameter name="num_messages" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_to" c:identifier="g_socket_send_to" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none" allow-none="1">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_with_blocking" c:identifier="g_socket_send_with_blocking" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="blocking" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_blocking" c:identifier="g_socket_set_blocking">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="blocking" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_broadcast" c:identifier="g_socket_set_broadcast">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="broadcast" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_keepalive" c:identifier="g_socket_set_keepalive">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="keepalive" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_listen_backlog" c:identifier="g_socket_set_listen_backlog">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="backlog" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_multicast_loopback" c:identifier="g_socket_set_multicast_loopback">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="loopback" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_multicast_ttl" c:identifier="g_socket_set_multicast_ttl">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="ttl" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_timeout" c:identifier="g_socket_set_timeout">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="timeout" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_ttl" c:identifier="g_socket_set_ttl">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="ttl" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="shutdown" c:identifier="g_socket_shutdown" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="shutdown_read" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
        <parameter name="shutdown_write" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="speaks_ipv4" c:identifier="g_socket_speaks_ipv4">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <property name="blocking" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="broadcast" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="family" writable="1" construct-only="1" transfer-ownership="none">
      <type name="SocketFamily"/>
    </property>
    <property name="fd" writable="1" construct-only="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
    <property name="keepalive" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="listen-backlog" writable="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
    <property name="local-address" transfer-ownership="none">
      <type name="SocketAddress"/>
    </property>
    <property name="multicast-loopback" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="multicast-ttl" writable="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="protocol" writable="1" construct-only="1" transfer-ownership="none">
      <type name="SocketProtocol"/>
    </property>
    <property name="remote-address" transfer-ownership="none">
      <type name="SocketAddress"/>
    </property>
    <property name="timeout" writable="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="ttl" writable="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="type" writable="1" construct-only="1" transfer-ownership="none">
      <type name="SocketType"/>
    </property>
  </class>
  <class name="SocketAddress" parent="GObject.Object" glib:type-struct="SocketAddressClass" abstract="1" glib:type-name="GSocketAddress" glib:get-type="g_socket_address_get_type">
    <implements name="SocketConnectable"/>
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <constructor name="new_from_native" c:identifier="g_socket_address_new_from_native">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="native" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_family" c:identifier="g_socket_address_get_family">
      <return-value transfer-ownership="none">
        <type name="SocketFamily"/>
      </return-value>
    </method>
    <method name="get_native_size" c:identifier="g_socket_address_get_native_size">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </method>
    <method name="to_native" c:identifier="g_socket_address_to_native" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="destlen" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <property name="family" transfer-ownership="none">
      <type name="SocketFamily"/>
    </property>
    <virtual-method name="get_family" offset="65535" invoker="get_family">
      <return-value transfer-ownership="none">
        <type name="SocketFamily"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_native_size" offset="65535" invoker="get_native_size">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
    </virtual-method>
    <virtual-method name="to_native" throws="1" offset="65535" invoker="to_native">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="destlen" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct SocketAddressClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="get_family">
    <callback name="get_family">
      <return-value transfer-ownership="none">
        <type name="SocketFamily"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="SocketAddress"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_native_size">
    <callback name="get_native_size">
      <return-value transfer-ownership="none">
        <type name="gint64"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="SocketAddress"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="to_native">
    <callback name="to_native">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="dest" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="destlen" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="SocketAddressEnumerator" parent="GObject.Object" glib:type-struct="SocketAddressEnumeratorClass" abstract="1" glib:type-name="GSocketAddressEnumerator" glib:get-type="g_socket_address_enumerator_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <method name="next" c:identifier="g_socket_address_enumerator_next" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="next_async" c:identifier="g_socket_address_enumerator_next_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="next_finish" c:identifier="g_socket_address_enumerator_next_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="next" throws="1" offset="65535" invoker="next">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="next_async" offset="65535" invoker="next_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="next_finish" throws="1" offset="65535" invoker="next_finish">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct SocketAddressEnumeratorClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="next">
    <callback name="next">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="SocketAddressEnumerator"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="next_async">
    <callback name="next_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="SocketAddressEnumerator"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="next_finish">
    <callback name="next_finish">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="enumerator" transfer-ownership="none">
          <type name="SocketAddressEnumerator"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
struct SocketClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
  <field name="_g_reserved7">
    <type name="any"/>
  </field>
  <field name="_g_reserved8">
    <type name="any"/>
  </field>
  <field name="_g_reserved9">
    <type name="any"/>
  </field>
  <field name="_g_reserved10">
    <type name="any"/>
  </field>
};
  <class name="SocketClient" parent="GObject.Object" glib:type-struct="SocketClientClass" glib:type-name="GSocketClient" glib:get-type="g_socket_client_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="SocketClientPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_socket_client_new">
      <return-value transfer-ownership="full">
        <type name="SocketClient"/>
      </return-value>
    </constructor>
    <method name="add_application_proxy" c:identifier="g_socket_client_add_application_proxy">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect" c:identifier="g_socket_client_connect" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_async" c:identifier="g_socket_client_connect_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_finish" c:identifier="g_socket_client_connect_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_host" c:identifier="g_socket_client_connect_to_host" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="host_and_port" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_host_async" c:identifier="g_socket_client_connect_to_host_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="host_and_port" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_host_finish" c:identifier="g_socket_client_connect_to_host_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_service" c:identifier="g_socket_client_connect_to_service" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="service" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_service_async" c:identifier="g_socket_client_connect_to_service_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="domain" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="service" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_service_finish" c:identifier="g_socket_client_connect_to_service_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_uri" c:identifier="g_socket_client_connect_to_uri" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_uri_async" c:identifier="g_socket_client_connect_to_uri_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="default_port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_to_uri_finish" c:identifier="g_socket_client_connect_to_uri_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_enable_proxy" c:identifier="g_socket_client_get_enable_proxy">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_family" c:identifier="g_socket_client_get_family">
      <return-value transfer-ownership="none">
        <type name="SocketFamily"/>
      </return-value>
    </method>
    <method name="get_local_address" c:identifier="g_socket_client_get_local_address">
      <return-value transfer-ownership="none">
        <type name="SocketAddress"/>
      </return-value>
    </method>
    <method name="get_protocol" c:identifier="g_socket_client_get_protocol">
      <return-value transfer-ownership="none">
        <type name="SocketProtocol"/>
      </return-value>
    </method>
    <method name="get_socket_type" c:identifier="g_socket_client_get_socket_type">
      <return-value transfer-ownership="none">
        <type name="SocketType"/>
      </return-value>
    </method>
    <method name="get_timeout" c:identifier="g_socket_client_get_timeout">
      <return-value transfer-ownership="none">
        <type name="guint32"/>
      </return-value>
    </method>
    <method name="get_tls" c:identifier="g_socket_client_get_tls">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_tls_validation_flags" c:identifier="g_socket_client_get_tls_validation_flags">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
    </method>
    <method name="set_enable_proxy" c:identifier="g_socket_client_set_enable_proxy">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="enable" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_family" c:identifier="g_socket_client_set_family">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="family" transfer-ownership="none">
          <type name="SocketFamily"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_local_address" c:identifier="g_socket_client_set_local_address">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none" allow-none="1">
          <type name="SocketAddress"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_protocol" c:identifier="g_socket_client_set_protocol">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="protocol" transfer-ownership="none">
          <type name="SocketProtocol"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_socket_type" c:identifier="g_socket_client_set_socket_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="SocketType"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_timeout" c:identifier="g_socket_client_set_timeout">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="timeout" transfer-ownership="none">
          <type name="guint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_tls" c:identifier="g_socket_client_set_tls">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="tls" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_tls_validation_flags" c:identifier="g_socket_client_set_tls_validation_flags">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsCertificateFlags"/>
        </parameter>
      </parameters>
    </method>
    <property name="enable-proxy" writable="1" construct="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="family" writable="1" construct="1" transfer-ownership="none">
      <type name="SocketFamily"/>
    </property>
    <property name="local-address" writable="1" construct="1" transfer-ownership="none">
      <type name="SocketAddress"/>
    </property>
    <property name="protocol" writable="1" construct="1" transfer-ownership="none">
      <type name="SocketProtocol"/>
    </property>
    <property name="timeout" writable="1" construct="1" transfer-ownership="none">
      <type name="guint32"/>
    </property>
    <property name="tls" writable="1" construct="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="tls-validation-flags" writable="1" construct="1" transfer-ownership="none">
      <type name="TlsCertificateFlags"/>
    </property>
    <property name="type" writable="1" construct="1" transfer-ownership="none">
      <type name="SocketType"/>
    </property>
    <glib:signal name="event" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <type name="SocketClientEvent"/>
        </parameter>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="event" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <type name="SocketClientEvent"/>
        </parameter>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct SocketClientClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="event">
    <callback name="event">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="client" transfer-ownership="none">
          <type name="SocketClient"/>
        </parameter>
        <parameter name="event" transfer-ownership="none">
          <type name="SocketClientEvent"/>
        </parameter>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="connection" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
};
  <enumeration name="SocketClientEvent" glib:type-name="GSocketClientEvent" glib:get-type="g_socket_client_event_get_type">
    <member name="resolving" value="0">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_RESOLVING"/>
    </member>
    <member name="resolved" value="1">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_RESOLVED"/>
    </member>
    <member name="connecting" value="2">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_CONNECTING"/>
    </member>
    <member name="connected" value="3">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_CONNECTED"/>
    </member>
    <member name="proxy_negotiating" value="4">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_PROXY_NEGOTIATING"/>
    </member>
    <member name="proxy_negotiated" value="5">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_PROXY_NEGOTIATED"/>
    </member>
    <member name="tls_handshaking" value="6">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_TLS_HANDSHAKING"/>
    </member>
    <member name="tls_handshaked" value="7">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_TLS_HANDSHAKED"/>
    </member>
    <member name="complete" value="8">
      <attribute name="c:identifier" value="G_SOCKET_CLIENT_COMPLETE"/>
    </member>
  </enumeration>
struct SocketClientPrivate
{
};
  <interface name="SocketConnectable" glib:type-name="GSocketConnectable" glib:get-type="g_socket_connectable_get_type" glib:type-struct="SocketConnectableIface">
    <method name="enumerate" c:identifier="g_socket_connectable_enumerate">
      <return-value transfer-ownership="full">
        <type name="SocketAddressEnumerator"/>
      </return-value>
    </method>
    <method name="proxy_enumerate" c:identifier="g_socket_connectable_proxy_enumerate">
      <return-value transfer-ownership="full">
        <type name="SocketAddressEnumerator"/>
      </return-value>
    </method>
    <virtual-method name="enumerate" offset="65535" invoker="enumerate">
      <return-value transfer-ownership="full">
        <type name="SocketAddressEnumerator"/>
      </return-value>
    </virtual-method>
    <virtual-method name="proxy_enumerate" offset="65535" invoker="proxy_enumerate">
      <return-value transfer-ownership="full">
        <type name="SocketAddressEnumerator"/>
      </return-value>
    </virtual-method>
  </interface>
struct SocketConnectableIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="enumerate">
    <callback name="enumerate">
      <return-value transfer-ownership="full">
        <type name="SocketAddressEnumerator"/>
      </return-value>
      <parameters>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="proxy_enumerate">
    <callback name="proxy_enumerate">
      <return-value transfer-ownership="full">
        <type name="SocketAddressEnumerator"/>
      </return-value>
      <parameters>
        <parameter name="connectable" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="SocketConnection" parent="IOStream" glib:type-struct="SocketConnectionClass" glib:type-name="GSocketConnection" glib:get-type="g_socket_connection_get_type">
    <field name="parent_instance">
      <type name="IOStream"/>
    </field>
    <field name="priv">
      <type name="SocketConnectionPrivate"/>
    </field>
    <function name="factory_lookup_type" c:identifier="g_socket_connection_factory_lookup_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
      <parameters>
        <parameter name="family" transfer-ownership="none">
          <type name="SocketFamily"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="SocketType"/>
        </parameter>
        <parameter name="protocol_id" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="factory_register_type" c:identifier="g_socket_connection_factory_register_type">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="g_type" transfer-ownership="none">
          <type name="GType"/>
        </parameter>
        <parameter name="family" transfer-ownership="none">
          <type name="SocketFamily"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="SocketType"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </function>
    <method name="connect" c:identifier="g_socket_connection_connect" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_async" c:identifier="g_socket_connection_connect_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="connect_finish" c:identifier="g_socket_connection_connect_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_local_address" c:identifier="g_socket_connection_get_local_address" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
    </method>
    <method name="get_remote_address" c:identifier="g_socket_connection_get_remote_address" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
    </method>
    <method name="get_socket" c:identifier="g_socket_connection_get_socket">
      <return-value transfer-ownership="none">
        <type name="Socket"/>
      </return-value>
    </method>
    <method name="is_connected" c:identifier="g_socket_connection_is_connected">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <property name="socket" writable="1" construct-only="1" transfer-ownership="none">
      <type name="Socket"/>
    </property>
  </class>
struct SocketConnectionClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="IOStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
};
struct SocketConnectionPrivate
{
};
  <class name="SocketControlMessage" parent="GObject.Object" glib:type-struct="SocketControlMessageClass" abstract="1" glib:type-name="GSocketControlMessage" glib:get-type="g_socket_control_message_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="SocketControlMessagePrivate"/>
    </field>
    <function name="deserialize" c:identifier="g_socket_control_message_deserialize">
      <return-value transfer-ownership="full">
        <type name="SocketControlMessage"/>
      </return-value>
      <parameters>
        <parameter name="level" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <array length="2">
            <type name="guint8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <method name="get_level" c:identifier="g_socket_control_message_get_level">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="get_msg_type" c:identifier="g_socket_control_message_get_msg_type">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="get_size" c:identifier="g_socket_control_message_get_size">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </method>
    <method name="serialize" c:identifier="g_socket_control_message_serialize">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="get_level" offset="65535" invoker="get_level">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_size" offset="65535" invoker="get_size">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_type" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </virtual-method>
    <virtual-method name="serialize" offset="65535" invoker="serialize">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct SocketControlMessageClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="get_size">
    <callback name="get_size">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="SocketControlMessage"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_level">
    <callback name="get_level">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="SocketControlMessage"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_type">
    <callback name="get_type">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="SocketControlMessage"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="serialize">
    <callback name="serialize">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="message" transfer-ownership="none">
          <type name="SocketControlMessage"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="deserialize">
    <type name="any"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct SocketControlMessagePrivate
{
};
  <enumeration name="SocketFamily" glib:type-name="GSocketFamily" glib:get-type="g_socket_family_get_type">
    <member name="invalid" value="0">
      <attribute name="c:identifier" value="G_SOCKET_FAMILY_INVALID"/>
    </member>
    <member name="unix" value="1">
      <attribute name="c:identifier" value="G_SOCKET_FAMILY_UNIX"/>
    </member>
    <member name="ipv4" value="2">
      <attribute name="c:identifier" value="G_SOCKET_FAMILY_IPV4"/>
    </member>
    <member name="ipv6" value="10">
      <attribute name="c:identifier" value="G_SOCKET_FAMILY_IPV6"/>
    </member>
  </enumeration>
  <class name="SocketListener" parent="GObject.Object" glib:type-struct="SocketListenerClass" glib:type-name="GSocketListener" glib:get-type="g_socket_listener_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="SocketListenerPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_socket_listener_new">
      <return-value transfer-ownership="full">
        <type name="SocketListener"/>
      </return-value>
    </constructor>
    <method name="accept" c:identifier="g_socket_listener_accept" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="source_object" transfer-ownership="none" direction="out" caller-allocates="0" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="accept_async" c:identifier="g_socket_listener_accept_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="accept_finish" c:identifier="g_socket_listener_accept_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none" direction="out" caller-allocates="0" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </method>
    <method name="accept_socket" c:identifier="g_socket_listener_accept_socket" throws="1">
      <return-value transfer-ownership="full">
        <type name="Socket"/>
      </return-value>
      <parameters>
        <parameter name="source_object" transfer-ownership="none" direction="out" caller-allocates="0" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="accept_socket_async" c:identifier="g_socket_listener_accept_socket_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="accept_socket_finish" c:identifier="g_socket_listener_accept_socket_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="Socket"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none" direction="out" caller-allocates="0" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </method>
    <method name="add_address" c:identifier="g_socket_listener_add_address" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="SocketAddress"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="SocketType"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="SocketProtocol"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
        <parameter name="effective_address" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="SocketAddress"/>
        </parameter>
      </parameters>
    </method>
    <method name="add_any_inet_port" c:identifier="g_socket_listener_add_any_inet_port" throws="1">
      <return-value transfer-ownership="none">
        <type name="guint16"/>
      </return-value>
      <parameters>
        <parameter name="source_object" transfer-ownership="none" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </method>
    <method name="add_inet_port" c:identifier="g_socket_listener_add_inet_port" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="port" transfer-ownership="none">
          <type name="guint16"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </method>
    <method name="add_socket" c:identifier="g_socket_listener_add_socket" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="socket" transfer-ownership="none">
          <type name="Socket"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </method>
    <method name="close" c:identifier="g_socket_listener_close">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="set_backlog" c:identifier="g_socket_listener_set_backlog">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="listen_backlog" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <property name="listen-backlog" writable="1" construct="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
    <virtual-method name="changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
  </class>
struct SocketListenerClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="changed">
    <callback name="changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="listener" transfer-ownership="none">
          <type name="SocketListener"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
};
struct SocketListenerPrivate
{
};
  <bitfield name="SocketMsgFlags" glib:type-name="GSocketMsgFlags" glib:get-type="g_socket_msg_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_SOCKET_MSG_NONE"/>
    </member>
    <member name="oob" value="1">
      <attribute name="c:identifier" value="G_SOCKET_MSG_OOB"/>
    </member>
    <member name="peek" value="2">
      <attribute name="c:identifier" value="G_SOCKET_MSG_PEEK"/>
    </member>
    <member name="dontroute" value="4">
      <attribute name="c:identifier" value="G_SOCKET_MSG_DONTROUTE"/>
    </member>
  </bitfield>
struct SocketPrivate
{
};
  <enumeration name="SocketProtocol" glib:type-name="GSocketProtocol" glib:get-type="g_socket_protocol_get_type">
    <member name="unknown" value="-1">
      <attribute name="c:identifier" value="G_SOCKET_PROTOCOL_UNKNOWN"/>
    </member>
    <member name="default" value="0">
      <attribute name="c:identifier" value="G_SOCKET_PROTOCOL_DEFAULT"/>
    </member>
    <member name="tcp" value="6">
      <attribute name="c:identifier" value="G_SOCKET_PROTOCOL_TCP"/>
    </member>
    <member name="udp" value="17">
      <attribute name="c:identifier" value="G_SOCKET_PROTOCOL_UDP"/>
    </member>
    <member name="sctp" value="132">
      <attribute name="c:identifier" value="G_SOCKET_PROTOCOL_SCTP"/>
    </member>
  </enumeration>
  <class name="SocketService" parent="SocketListener" glib:type-struct="SocketServiceClass" glib:type-name="GSocketService" glib:get-type="g_socket_service_get_type">
    <field name="parent_instance">
      <type name="SocketListener"/>
    </field>
    <field name="priv">
      <type name="SocketServicePrivate"/>
    </field>
    <constructor name="new" c:identifier="g_socket_service_new">
      <return-value transfer-ownership="full">
        <type name="SocketService"/>
      </return-value>
    </constructor>
    <method name="is_active" c:identifier="g_socket_service_is_active">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="start" c:identifier="g_socket_service_start">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <method name="stop" c:identifier="g_socket_service_stop">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </method>
    <glib:signal name="incoming" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="SocketConnection"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none" allow-none="1">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="incoming" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="SocketConnection"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct SocketServiceClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketListenerClass"/>
  </field>
  <field name="incoming">
    <callback name="incoming">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <type name="SocketService"/>
        </parameter>
        <parameter name="connection" transfer-ownership="none">
          <type name="SocketConnection"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
};
struct SocketServicePrivate
{
};
  <callback name="SocketSourceFunc">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="socket" transfer-ownership="none">
        <type name="Socket"/>
      </parameter>
      <parameter name="condition" transfer-ownership="none">
        <type name="GLib.IOCondition"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none" closure="2">
        <type name="any"/>
      </parameter>
    </parameters>
  </callback>
  <enumeration name="SocketType" glib:type-name="GSocketType" glib:get-type="g_socket_type_get_type">
    <member name="invalid" value="0">
      <attribute name="c:identifier" value="G_SOCKET_TYPE_INVALID"/>
    </member>
    <member name="stream" value="1">
      <attribute name="c:identifier" value="G_SOCKET_TYPE_STREAM"/>
    </member>
    <member name="datagram" value="2">
      <attribute name="c:identifier" value="G_SOCKET_TYPE_DATAGRAM"/>
    </member>
    <member name="seqpacket" value="3">
      <attribute name="c:identifier" value="G_SOCKET_TYPE_SEQPACKET"/>
    </member>
  </enumeration>
struct SrvTarget
{
 glib:type-name="GSrvTarget" glib:get-type="g_srv_target_get_type"  <constructor name="new" c:identifier="g_srv_target_new">
    <return-value transfer-ownership="full">
      <type name="SrvTarget"/>
    </return-value>
    <parameters>
      <parameter name="hostname" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="port" transfer-ownership="none">
        <type name="guint16"/>
      </parameter>
      <parameter name="priority" transfer-ownership="none">
        <type name="guint16"/>
      </parameter>
      <parameter name="weight" transfer-ownership="none">
        <type name="guint16"/>
      </parameter>
    </parameters>
  </constructor>
  <method name="copy" c:identifier="g_srv_target_copy">
    <return-value transfer-ownership="full">
      <type name="SrvTarget"/>
    </return-value>
  </method>
  <method name="free" c:identifier="g_srv_target_free">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <method name="get_hostname" c:identifier="g_srv_target_get_hostname">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="get_port" c:identifier="g_srv_target_get_port">
    <return-value transfer-ownership="none">
      <type name="guint16"/>
    </return-value>
  </method>
  <method name="get_priority" c:identifier="g_srv_target_get_priority">
    <return-value transfer-ownership="none">
      <type name="guint16"/>
    </return-value>
  </method>
  <method name="get_weight" c:identifier="g_srv_target_get_weight">
    <return-value transfer-ownership="none">
      <type name="guint16"/>
    </return-value>
  </method>
};
struct StaticResource
{
  <field name="data" writable="1">
    <type name="guint8"/>
  </field>
  <field name="data_len" writable="1">
    <type name="guint64"/>
  </field>
  <field name="resource" writable="1">
    <type name="Resource"/>
  </field>
  <field name="next" writable="1">
    <type name="StaticResource"/>
  </field>
  <field name="padding" writable="1">
    <type name="any"/>
  </field>
  <method name="fini" c:identifier="g_static_resource_fini">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <method name="get_resource" c:identifier="g_static_resource_get_resource">
    <return-value transfer-ownership="none">
      <type name="Resource"/>
    </return-value>
  </method>
  <method name="init" c:identifier="g_static_resource_init">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
};
  <constant name="TLS_BACKEND_EXTENSION_POINT_NAME" value="gio-tls-backend">
    <type name="utf8"/>
  </constant>
  <constant name="TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT" value="1.3.6.1.5.5.7.3.2">
    <type name="utf8"/>
  </constant>
  <constant name="TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER" value="1.3.6.1.5.5.7.3.1">
    <type name="utf8"/>
  </constant>
  <class name="TcpConnection" parent="SocketConnection" glib:type-struct="TcpConnectionClass" glib:type-name="GTcpConnection" glib:get-type="g_tcp_connection_get_type">
    <field name="parent_instance">
      <type name="SocketConnection"/>
    </field>
    <field name="priv">
      <type name="TcpConnectionPrivate"/>
    </field>
    <method name="get_graceful_disconnect" c:identifier="g_tcp_connection_get_graceful_disconnect">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="set_graceful_disconnect" c:identifier="g_tcp_connection_set_graceful_disconnect">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="graceful_disconnect" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <property name="graceful-disconnect" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
  </class>
struct TcpConnectionClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketConnectionClass"/>
  </field>
};
struct TcpConnectionPrivate
{
};
  <class name="TcpWrapperConnection" parent="TcpConnection" glib:type-struct="TcpWrapperConnectionClass" glib:type-name="GTcpWrapperConnection" glib:get-type="g_tcp_wrapper_connection_get_type">
    <field name="parent_instance">
      <type name="TcpConnection"/>
    </field>
    <field name="priv">
      <type name="TcpWrapperConnectionPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_tcp_wrapper_connection_new">
      <return-value transfer-ownership="full">
        <type name="SocketConnection"/>
      </return-value>
      <parameters>
        <parameter name="base_io_stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="socket" transfer-ownership="none">
          <type name="Socket"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_base_io_stream" c:identifier="g_tcp_wrapper_connection_get_base_io_stream">
      <return-value transfer-ownership="none">
        <type name="IOStream"/>
      </return-value>
    </method>
    <property name="base-io-stream" writable="1" construct-only="1" transfer-ownership="none">
      <type name="IOStream"/>
    </property>
  </class>
struct TcpWrapperConnectionClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="TcpConnectionClass"/>
  </field>
};
struct TcpWrapperConnectionPrivate
{
};
  <class name="ThemedIcon" parent="GObject.Object" glib:type-struct="ThemedIconClass" glib:type-name="GThemedIcon" glib:get-type="g_themed_icon_get_type">
    <implements name="Icon"/>
    <constructor name="new" c:identifier="g_themed_icon_new">
      <return-value transfer-ownership="full">
        <type name="ThemedIcon"/>
      </return-value>
      <parameters>
        <parameter name="iconname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_names" c:identifier="g_themed_icon_new_from_names">
      <return-value transfer-ownership="full">
        <type name="ThemedIcon"/>
      </return-value>
      <parameters>
        <parameter name="iconnames" transfer-ownership="none">
          <array length="1">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_with_default_fallbacks" c:identifier="g_themed_icon_new_with_default_fallbacks">
      <return-value transfer-ownership="full">
        <type name="ThemedIcon"/>
      </return-value>
      <parameters>
        <parameter name="iconname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="append_name" c:identifier="g_themed_icon_append_name">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="iconname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_names" c:identifier="g_themed_icon_get_names">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="prepend_name" c:identifier="g_themed_icon_prepend_name">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="iconname" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <property name="name" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="names" writable="1" construct-only="1" transfer-ownership="none">
      <array zero-terminated="1">
        <type name="utf8"/>
      </array>
    </property>
    <property name="use-default-fallbacks" writable="1" construct-only="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
  </class>
struct ThemedIconClass
{
 glib:is-gtype-struct="1"};
  <class name="ThreadedSocketService" parent="SocketService" glib:type-struct="ThreadedSocketServiceClass" glib:type-name="GThreadedSocketService" glib:get-type="g_threaded_socket_service_get_type">
    <field name="parent_instance">
      <type name="SocketService"/>
    </field>
    <field name="priv">
      <type name="ThreadedSocketServicePrivate"/>
    </field>
    <constructor name="new" c:identifier="g_threaded_socket_service_new">
      <return-value transfer-ownership="full">
        <type name="SocketService"/>
      </return-value>
      <parameters>
        <parameter name="max_threads" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </constructor>
    <property name="max-threads" writable="1" construct-only="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
    <glib:signal name="run" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="SocketConnection"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="run" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="SocketConnection"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct ThreadedSocketServiceClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketServiceClass"/>
  </field>
  <field name="run">
    <callback name="run">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <type name="ThreadedSocketService"/>
        </parameter>
        <parameter name="connection" transfer-ownership="none">
          <type name="SocketConnection"/>
        </parameter>
        <parameter name="source_object" transfer-ownership="none">
          <type name="GObject.Object"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct ThreadedSocketServicePrivate
{
};
  <enumeration name="TlsAuthenticationMode" glib:type-name="GTlsAuthenticationMode" glib:get-type="g_tls_authentication_mode_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_TLS_AUTHENTICATION_NONE"/>
    </member>
    <member name="requested" value="1">
      <attribute name="c:identifier" value="G_TLS_AUTHENTICATION_REQUESTED"/>
    </member>
    <member name="required" value="2">
      <attribute name="c:identifier" value="G_TLS_AUTHENTICATION_REQUIRED"/>
    </member>
  </enumeration>
  <interface name="TlsBackend" glib:type-name="GTlsBackend" glib:get-type="g_tls_backend_get_type" glib:type-struct="TlsBackendInterface">
    <function name="get_default" c:identifier="g_tls_backend_get_default">
      <return-value transfer-ownership="none">
        <type name="TlsBackend"/>
      </return-value>
    </function>
    <method name="get_certificate_type" c:identifier="g_tls_backend_get_certificate_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
    </method>
    <method name="get_client_connection_type" c:identifier="g_tls_backend_get_client_connection_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
    </method>
    <method name="get_default_database" c:identifier="g_tls_backend_get_default_database">
      <return-value transfer-ownership="full">
        <type name="TlsDatabase"/>
      </return-value>
    </method>
    <method name="get_file_database_type" c:identifier="g_tls_backend_get_file_database_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
    </method>
    <method name="get_server_connection_type" c:identifier="g_tls_backend_get_server_connection_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
    </method>
    <method name="supports_tls" c:identifier="g_tls_backend_supports_tls">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <virtual-method name="get_default_database" offset="65535" invoker="get_default_database">
      <return-value transfer-ownership="full">
        <type name="TlsDatabase"/>
      </return-value>
    </virtual-method>
    <virtual-method name="supports_tls" offset="65535" invoker="supports_tls">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
  </interface>
struct TlsBackendInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="supports_tls">
    <callback name="supports_tls">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="backend" transfer-ownership="none">
          <type name="TlsBackend"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_certificate_type">
    <callback name="get_certificate_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
    </callback>
  </field>
  <field name="get_client_connection_type">
    <callback name="get_client_connection_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
    </callback>
  </field>
  <field name="get_server_connection_type">
    <callback name="get_server_connection_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
    </callback>
  </field>
  <field name="get_file_database_type">
    <callback name="get_file_database_type">
      <return-value transfer-ownership="none">
        <type name="GType"/>
      </return-value>
    </callback>
  </field>
  <field name="get_default_database">
    <callback name="get_default_database">
      <return-value transfer-ownership="full">
        <type name="TlsDatabase"/>
      </return-value>
      <parameters>
        <parameter name="backend" transfer-ownership="none">
          <type name="TlsBackend"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="TlsCertificate" parent="GObject.Object" glib:type-struct="TlsCertificateClass" abstract="1" glib:type-name="GTlsCertificate" glib:get-type="g_tls_certificate_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="TlsCertificatePrivate"/>
    </field>
    <constructor name="new_from_file" c:identifier="g_tls_certificate_new_from_file" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_files" c:identifier="g_tls_certificate_new_from_files" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="cert_file" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="key_file" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_from_pem" c:identifier="g_tls_certificate_new_from_pem" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="list_new_from_file" c:identifier="g_tls_certificate_list_new_from_file" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="TlsCertificate"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <method name="get_issuer" c:identifier="g_tls_certificate_get_issuer">
      <return-value transfer-ownership="none">
        <type name="TlsCertificate"/>
      </return-value>
    </method>
    <method name="verify" c:identifier="g_tls_certificate_verify">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="trusted_ca" transfer-ownership="none" allow-none="1">
          <type name="TlsCertificate"/>
        </parameter>
      </parameters>
    </method>
    <property name="certificate" writable="1" construct-only="1" transfer-ownership="none">
      <array name="GLib.ByteArray">
        <type name="any"/>
      </array>
    </property>
    <property name="certificate-pem" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="issuer" writable="1" construct-only="1" transfer-ownership="none">
      <type name="TlsCertificate"/>
    </property>
    <property name="private-key" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <array name="GLib.ByteArray">
        <type name="any"/>
      </array>
    </property>
    <property name="private-key-pem" readable="0" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <virtual-method name="verify" offset="65535" invoker="verify">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="trusted_ca" transfer-ownership="none" allow-none="1">
          <type name="TlsCertificate"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct TlsCertificateClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="verify">
    <callback name="verify">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="cert" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="trusted_ca" transfer-ownership="none" allow-none="1">
          <type name="TlsCertificate"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
  <bitfield name="TlsCertificateFlags" glib:type-name="GTlsCertificateFlags" glib:get-type="g_tls_certificate_flags_get_type">
    <member name="unknown_ca" value="1">
      <attribute name="c:identifier" value="G_TLS_CERTIFICATE_UNKNOWN_CA"/>
    </member>
    <member name="bad_identity" value="2">
      <attribute name="c:identifier" value="G_TLS_CERTIFICATE_BAD_IDENTITY"/>
    </member>
    <member name="not_activated" value="4">
      <attribute name="c:identifier" value="G_TLS_CERTIFICATE_NOT_ACTIVATED"/>
    </member>
    <member name="expired" value="8">
      <attribute name="c:identifier" value="G_TLS_CERTIFICATE_EXPIRED"/>
    </member>
    <member name="revoked" value="16">
      <attribute name="c:identifier" value="G_TLS_CERTIFICATE_REVOKED"/>
    </member>
    <member name="insecure" value="32">
      <attribute name="c:identifier" value="G_TLS_CERTIFICATE_INSECURE"/>
    </member>
    <member name="generic_error" value="64">
      <attribute name="c:identifier" value="G_TLS_CERTIFICATE_GENERIC_ERROR"/>
    </member>
    <member name="validate_all" value="127">
      <attribute name="c:identifier" value="G_TLS_CERTIFICATE_VALIDATE_ALL"/>
    </member>
  </bitfield>
struct TlsCertificatePrivate
{
};
  <interface name="TlsClientConnection" glib:type-name="GTlsClientConnection" glib:get-type="g_tls_client_connection_get_type" glib:type-struct="TlsClientConnectionInterface">
    <prerequisite name="TlsConnection"/>
    <function name="new" c:identifier="g_tls_client_connection_new" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsClientConnection"/>
      </return-value>
      <parameters>
        <parameter name="base_io_stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="server_identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
      </parameters>
    </function>
    <method name="get_accepted_cas" c:identifier="g_tls_client_connection_get_accepted_cas">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <array name="GLib.ByteArray">
            <type name="any"/>
          </array>
        </type>
      </return-value>
    </method>
    <method name="get_server_identity" c:identifier="g_tls_client_connection_get_server_identity">
      <return-value transfer-ownership="none">
        <type name="SocketConnectable"/>
      </return-value>
    </method>
    <method name="get_use_ssl3" c:identifier="g_tls_client_connection_get_use_ssl3">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_validation_flags" c:identifier="g_tls_client_connection_get_validation_flags">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
    </method>
    <method name="set_server_identity" c:identifier="g_tls_client_connection_set_server_identity">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="identity" transfer-ownership="none">
          <type name="SocketConnectable"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_use_ssl3" c:identifier="g_tls_client_connection_set_use_ssl3">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="use_ssl3" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_validation_flags" c:identifier="g_tls_client_connection_set_validation_flags">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsCertificateFlags"/>
        </parameter>
      </parameters>
    </method>
    <property name="accepted-cas" transfer-ownership="none">
      <type name="any"/>
    </property>
    <property name="server-identity" writable="1" construct="1" transfer-ownership="none">
      <type name="SocketConnectable"/>
    </property>
    <property name="use-ssl3" writable="1" construct="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="validation-flags" writable="1" construct="1" transfer-ownership="none">
      <type name="TlsCertificateFlags"/>
    </property>
  </interface>
struct TlsClientConnectionInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
};
  <class name="TlsConnection" parent="IOStream" glib:type-struct="TlsConnectionClass" abstract="1" glib:type-name="GTlsConnection" glib:get-type="g_tls_connection_get_type">
    <field name="parent_instance">
      <type name="IOStream"/>
    </field>
    <field name="priv">
      <type name="TlsConnectionPrivate"/>
    </field>
    <method name="emit_accept_certificate" c:identifier="g_tls_connection_emit_accept_certificate">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="peer_cert" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="errors" transfer-ownership="none">
          <type name="TlsCertificateFlags"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_certificate" c:identifier="g_tls_connection_get_certificate">
      <return-value transfer-ownership="none">
        <type name="TlsCertificate"/>
      </return-value>
    </method>
    <method name="get_database" c:identifier="g_tls_connection_get_database">
      <return-value transfer-ownership="none">
        <type name="TlsDatabase"/>
      </return-value>
    </method>
    <method name="get_interaction" c:identifier="g_tls_connection_get_interaction">
      <return-value transfer-ownership="none">
        <type name="TlsInteraction"/>
      </return-value>
    </method>
    <method name="get_peer_certificate" c:identifier="g_tls_connection_get_peer_certificate">
      <return-value transfer-ownership="none">
        <type name="TlsCertificate"/>
      </return-value>
    </method>
    <method name="get_peer_certificate_errors" c:identifier="g_tls_connection_get_peer_certificate_errors">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
    </method>
    <method name="get_rehandshake_mode" c:identifier="g_tls_connection_get_rehandshake_mode">
      <return-value transfer-ownership="none">
        <type name="TlsRehandshakeMode"/>
      </return-value>
    </method>
    <method name="get_require_close_notify" c:identifier="g_tls_connection_get_require_close_notify">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_use_system_certdb" c:identifier="g_tls_connection_get_use_system_certdb" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="handshake" c:identifier="g_tls_connection_handshake" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="handshake_async" c:identifier="g_tls_connection_handshake_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="handshake_finish" c:identifier="g_tls_connection_handshake_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_certificate" c:identifier="g_tls_connection_set_certificate">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_database" c:identifier="g_tls_connection_set_database">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="database" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_interaction" c:identifier="g_tls_connection_set_interaction">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_rehandshake_mode" c:identifier="g_tls_connection_set_rehandshake_mode">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mode" transfer-ownership="none">
          <type name="TlsRehandshakeMode"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_require_close_notify" c:identifier="g_tls_connection_set_require_close_notify">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="require_close_notify" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_use_system_certdb" c:identifier="g_tls_connection_set_use_system_certdb" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="use_system_certdb" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <property name="base-io-stream" writable="1" construct-only="1" transfer-ownership="none">
      <type name="IOStream"/>
    </property>
    <property name="certificate" writable="1" transfer-ownership="none">
      <type name="TlsCertificate"/>
    </property>
    <property name="database" writable="1" transfer-ownership="none">
      <type name="TlsDatabase"/>
    </property>
    <property name="interaction" writable="1" transfer-ownership="none">
      <type name="TlsInteraction"/>
    </property>
    <property name="peer-certificate" transfer-ownership="none">
      <type name="TlsCertificate"/>
    </property>
    <property name="peer-certificate-errors" transfer-ownership="none">
      <type name="TlsCertificateFlags"/>
    </property>
    <property name="rehandshake-mode" writable="1" construct="1" transfer-ownership="none">
      <type name="TlsRehandshakeMode"/>
    </property>
    <property name="require-close-notify" writable="1" construct="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="use-system-certdb" writable="1" construct="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <glib:signal name="accept-certificate" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="peer_cert" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="errors" transfer-ownership="none">
          <type name="TlsCertificateFlags"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="accept_certificate" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="peer_cert" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="errors" transfer-ownership="none">
          <type name="TlsCertificateFlags"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="handshake" throws="1" offset="65535" invoker="handshake">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="handshake_async" offset="65535" invoker="handshake_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="handshake_finish" throws="1" offset="65535" invoker="handshake_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct TlsConnectionClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="IOStreamClass"/>
  </field>
  <field name="accept_certificate">
    <callback name="accept_certificate">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="TlsConnection"/>
        </parameter>
        <parameter name="peer_cert" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="errors" transfer-ownership="none">
          <type name="TlsCertificateFlags"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="handshake">
    <callback name="handshake">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="conn" transfer-ownership="none">
          <type name="TlsConnection"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="handshake_async">
    <callback name="handshake_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="conn" transfer-ownership="none">
          <type name="TlsConnection"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="handshake_finish">
    <callback name="handshake_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="conn" transfer-ownership="none">
          <type name="TlsConnection"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
struct TlsConnectionPrivate
{
};
  <class name="TlsDatabase" parent="GObject.Object" glib:type-struct="TlsDatabaseClass" abstract="1" glib:type-name="GTlsDatabase" glib:get-type="g_tls_database_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="TlsDatabasePrivate"/>
    </field>
    <method name="create_certificate_handle" c:identifier="g_tls_database_create_certificate_handle">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_certificate_for_handle" c:identifier="g_tls_database_lookup_certificate_for_handle" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="handle" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_certificate_for_handle_async" c:identifier="g_tls_database_lookup_certificate_for_handle_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="handle" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_certificate_for_handle_finish" c:identifier="g_tls_database_lookup_certificate_for_handle_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_certificate_issuer" c:identifier="g_tls_database_lookup_certificate_issuer" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_certificate_issuer_async" c:identifier="g_tls_database_lookup_certificate_issuer_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_certificate_issuer_finish" c:identifier="g_tls_database_lookup_certificate_issuer_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_certificates_issued_by" c:identifier="g_tls_database_lookup_certificates_issued_by" throws="1">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="TlsCertificate"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="issuer_raw_dn" transfer-ownership="none">
          <array name="GLib.ByteArray">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="lookup_certificates_issued_by_async" c:identifier="g_tls_database_lookup_certificates_issued_by_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="issuer_raw_dn" transfer-ownership="none">
          <array name="GLib.ByteArray">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="verify_chain" c:identifier="g_tls_database_verify_chain" throws="1">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="chain" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="purpose" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseVerifyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="verify_chain_async" c:identifier="g_tls_database_verify_chain_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="chain" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="purpose" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseVerifyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="7">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="verify_chain_finish" c:identifier="g_tls_database_verify_chain_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="create_certificate_handle" offset="65535" invoker="create_certificate_handle">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_certificate_for_handle" throws="1" offset="65535" invoker="lookup_certificate_for_handle">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="handle" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_certificate_for_handle_async" offset="65535" invoker="lookup_certificate_for_handle_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="handle" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_certificate_for_handle_finish" throws="1" offset="65535" invoker="lookup_certificate_for_handle_finish">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_certificate_issuer" throws="1" offset="65535" invoker="lookup_certificate_issuer">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_certificate_issuer_async" offset="65535" invoker="lookup_certificate_issuer_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_certificate_issuer_finish" throws="1" offset="65535" invoker="lookup_certificate_issuer_finish">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_certificates_issued_by" throws="1" offset="65535" invoker="lookup_certificates_issued_by">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="TlsCertificate"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="issuer_raw_dn" transfer-ownership="none">
          <array name="GLib.ByteArray">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="lookup_certificates_issued_by_async" offset="65535" invoker="lookup_certificates_issued_by_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="issuer_raw_dn" transfer-ownership="none">
          <array name="GLib.ByteArray">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="verify_chain" throws="1" offset="65535" invoker="verify_chain">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="chain" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="purpose" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseVerifyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="verify_chain_async" offset="65535" invoker="verify_chain_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="chain" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="purpose" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseVerifyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="7">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="7">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="verify_chain_finish" throws="1" offset="65535" invoker="verify_chain_finish">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct TlsDatabaseClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="verify_chain">
    <callback name="verify_chain">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="chain" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="purpose" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseVerifyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="verify_chain_async">
    <callback name="verify_chain_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="chain" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="purpose" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="identity" transfer-ownership="none" allow-none="1">
          <type name="SocketConnectable"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseVerifyFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="8">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="8">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="verify_chain_finish">
    <callback name="verify_chain_finish">
      <return-value transfer-ownership="none">
        <type name="TlsCertificateFlags"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="create_certificate_handle">
    <callback name="create_certificate_handle">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificate_for_handle">
    <callback name="lookup_certificate_for_handle">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="handle" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificate_for_handle_async">
    <callback name="lookup_certificate_for_handle_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="handle" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificate_for_handle_finish">
    <callback name="lookup_certificate_for_handle_finish">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificate_issuer">
    <callback name="lookup_certificate_issuer">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificate_issuer_async">
    <callback name="lookup_certificate_issuer_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="certificate" transfer-ownership="none">
          <type name="TlsCertificate"/>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificate_issuer_finish">
    <callback name="lookup_certificate_issuer_finish">
      <return-value transfer-ownership="full">
        <type name="TlsCertificate"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificates_issued_by">
    <callback name="lookup_certificates_issued_by">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="TlsCertificate"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="issuer_raw_dn" transfer-ownership="none">
          <array name="GLib.ByteArray">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificates_issued_by_async">
    <callback name="lookup_certificates_issued_by_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TlsDatabase"/>
        </parameter>
        <parameter name="issuer_raw_dn" transfer-ownership="none">
          <array name="GLib.ByteArray">
            <type name="any"/>
          </array>
        </parameter>
        <parameter name="interaction" transfer-ownership="none" allow-none="1">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsDatabaseLookupFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="lookup_certificates_issued_by_finish">
    <type name="any"/>
  </field>
  <field name="padding">
    <array fixed-size="16">
      <type name="any"/>
    </array>
  </field>
};
  <enumeration name="TlsDatabaseLookupFlags" glib:type-name="GTlsDatabaseLookupFlags" glib:get-type="g_tls_database_lookup_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_TLS_DATABASE_LOOKUP_NONE"/>
    </member>
    <member name="keypair" value="1">
      <attribute name="c:identifier" value="G_TLS_DATABASE_LOOKUP_KEYPAIR"/>
    </member>
  </enumeration>
struct TlsDatabasePrivate
{
};
  <bitfield name="TlsDatabaseVerifyFlags" glib:type-name="GTlsDatabaseVerifyFlags" glib:get-type="g_tls_database_verify_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_TLS_DATABASE_VERIFY_NONE"/>
    </member>
  </bitfield>
  <enumeration name="TlsError" glib:type-name="GTlsError" glib:get-type="g_tls_error_get_type" glib:error-domain="g-tls-error-quark">
    <member name="unavailable" value="0">
      <attribute name="c:identifier" value="G_TLS_ERROR_UNAVAILABLE"/>
    </member>
    <member name="misc" value="1">
      <attribute name="c:identifier" value="G_TLS_ERROR_MISC"/>
    </member>
    <member name="bad_certificate" value="2">
      <attribute name="c:identifier" value="G_TLS_ERROR_BAD_CERTIFICATE"/>
    </member>
    <member name="not_tls" value="3">
      <attribute name="c:identifier" value="G_TLS_ERROR_NOT_TLS"/>
    </member>
    <member name="handshake" value="4">
      <attribute name="c:identifier" value="G_TLS_ERROR_HANDSHAKE"/>
    </member>
    <member name="certificate_required" value="5">
      <attribute name="c:identifier" value="G_TLS_ERROR_CERTIFICATE_REQUIRED"/>
    </member>
    <member name="eof" value="6">
      <attribute name="c:identifier" value="G_TLS_ERROR_EOF"/>
    </member>
  </enumeration>
  <interface name="TlsFileDatabase" glib:type-name="GTlsFileDatabase" glib:get-type="g_tls_file_database_get_type" glib:type-struct="TlsFileDatabaseInterface">
    <prerequisite name="TlsDatabase"/>
    <function name="new" c:identifier="g_tls_file_database_new" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsFileDatabase"/>
      </return-value>
      <parameters>
        <parameter name="anchors" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </function>
    <property name="anchors" writable="1" construct="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
  </interface>
struct TlsFileDatabaseInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="padding">
    <array fixed-size="8">
      <type name="any"/>
    </array>
  </field>
};
  <class name="TlsInteraction" parent="GObject.Object" glib:type-struct="TlsInteractionClass" glib:type-name="GTlsInteraction" glib:get-type="g_tls_interaction_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="TlsInteractionPrivate"/>
    </field>
    <method name="ask_password" c:identifier="g_tls_interaction_ask_password" throws="1">
      <return-value transfer-ownership="none">
        <type name="TlsInteractionResult"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="ask_password_async" c:identifier="g_tls_interaction_ask_password_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" allow-none="1">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="ask_password_finish" c:identifier="g_tls_interaction_ask_password_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="TlsInteractionResult"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="invoke_ask_password" c:identifier="g_tls_interaction_invoke_ask_password" throws="1">
      <return-value transfer-ownership="none">
        <type name="TlsInteractionResult"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="ask_password" throws="1" offset="65535" invoker="ask_password">
      <return-value transfer-ownership="none">
        <type name="TlsInteractionResult"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="ask_password_async" offset="65535" invoker="ask_password_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" allow-none="1" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="ask_password_finish" throws="1" offset="65535" invoker="ask_password_finish">
      <return-value transfer-ownership="none">
        <type name="TlsInteractionResult"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct TlsInteractionClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="ask_password">
    <callback name="ask_password">
      <return-value transfer-ownership="none">
        <type name="TlsInteractionResult"/>
      </return-value>
      <parameters>
        <parameter name="interaction" transfer-ownership="none">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="ask_password_async">
    <callback name="ask_password_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="interaction" transfer-ownership="none">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" allow-none="1" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="ask_password_finish">
    <callback name="ask_password_finish">
      <return-value transfer-ownership="none">
        <type name="TlsInteractionResult"/>
      </return-value>
      <parameters>
        <parameter name="interaction" transfer-ownership="none">
          <type name="TlsInteraction"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="24">
      <type name="any"/>
    </array>
  </field>
};
struct TlsInteractionPrivate
{
};
  <enumeration name="TlsInteractionResult" glib:type-name="GTlsInteractionResult" glib:get-type="g_tls_interaction_result_get_type">
    <member name="unhandled" value="0">
      <attribute name="c:identifier" value="G_TLS_INTERACTION_UNHANDLED"/>
    </member>
    <member name="handled" value="1">
      <attribute name="c:identifier" value="G_TLS_INTERACTION_HANDLED"/>
    </member>
    <member name="failed" value="2">
      <attribute name="c:identifier" value="G_TLS_INTERACTION_FAILED"/>
    </member>
  </enumeration>
  <class name="TlsPassword" parent="GObject.Object" glib:type-struct="TlsPasswordClass" glib:type-name="GTlsPassword" glib:get-type="g_tls_password_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="TlsPasswordPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_tls_password_new">
      <return-value transfer-ownership="full">
        <type name="TlsPassword"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsPasswordFlags"/>
        </parameter>
        <parameter name="description" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_description" c:identifier="g_tls_password_get_description">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_flags" c:identifier="g_tls_password_get_flags">
      <return-value transfer-ownership="none">
        <type name="TlsPasswordFlags"/>
      </return-value>
    </method>
    <method name="get_value" c:identifier="g_tls_password_get_value">
      <return-value transfer-ownership="none">
        <type name="guint8"/>
      </return-value>
      <parameters>
        <parameter name="length" transfer-ownership="none" allow-none="1">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_warning" c:identifier="g_tls_password_get_warning">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="set_description" c:identifier="g_tls_password_set_description">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="description" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_flags" c:identifier="g_tls_password_set_flags">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="TlsPasswordFlags"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_value" c:identifier="g_tls_password_set_value">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="guint8"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_value_full" c:identifier="g_tls_password_set_value_full">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="guint8"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="destroy" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </method>
    <method name="set_warning" c:identifier="g_tls_password_set_warning">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="warning" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <property name="description" writable="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="flags" writable="1" transfer-ownership="none">
      <type name="TlsPasswordFlags"/>
    </property>
    <property name="warning" writable="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <virtual-method name="get_default_warning" offset="65535">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_value" offset="65535" invoker="get_value">
      <return-value transfer-ownership="none">
        <type name="guint8"/>
      </return-value>
      <parameters>
        <parameter name="length" transfer-ownership="none" allow-none="1">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="set_value" offset="65535" invoker="set_value_full">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="guint8"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="destroy" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct TlsPasswordClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="get_value">
    <callback name="get_value">
      <return-value transfer-ownership="none">
        <type name="guint8"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="length" transfer-ownership="none" allow-none="1">
          <type name="guint64"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="set_value">
    <callback name="set_value">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="guint8"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <type name="gint64"/>
        </parameter>
        <parameter name="destroy" transfer-ownership="none" allow-none="1" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_default_warning">
    <callback name="get_default_warning">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="password" transfer-ownership="none">
          <type name="TlsPassword"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="padding">
    <array fixed-size="4">
      <type name="any"/>
    </array>
  </field>
};
  <bitfield name="TlsPasswordFlags" glib:type-name="GTlsPasswordFlags" glib:get-type="g_tls_password_flags_get_type">
    <member name="none" value="0">
      <attribute name="c:identifier" value="G_TLS_PASSWORD_NONE"/>
    </member>
    <member name="retry" value="2">
      <attribute name="c:identifier" value="G_TLS_PASSWORD_RETRY"/>
    </member>
    <member name="many_tries" value="4">
      <attribute name="c:identifier" value="G_TLS_PASSWORD_MANY_TRIES"/>
    </member>
    <member name="final_try" value="8">
      <attribute name="c:identifier" value="G_TLS_PASSWORD_FINAL_TRY"/>
    </member>
  </bitfield>
struct TlsPasswordPrivate
{
};
  <enumeration name="TlsRehandshakeMode" glib:type-name="GTlsRehandshakeMode" glib:get-type="g_tls_rehandshake_mode_get_type">
    <member name="never" value="0">
      <attribute name="c:identifier" value="G_TLS_REHANDSHAKE_NEVER"/>
    </member>
    <member name="safely" value="1">
      <attribute name="c:identifier" value="G_TLS_REHANDSHAKE_SAFELY"/>
    </member>
    <member name="unsafely" value="2">
      <attribute name="c:identifier" value="G_TLS_REHANDSHAKE_UNSAFELY"/>
    </member>
  </enumeration>
  <interface name="TlsServerConnection" glib:type-name="GTlsServerConnection" glib:get-type="g_tls_server_connection_get_type" glib:type-struct="TlsServerConnectionInterface">
    <prerequisite name="TlsConnection"/>
    <function name="new" c:identifier="g_tls_server_connection_new" throws="1">
      <return-value transfer-ownership="full">
        <type name="TlsServerConnection"/>
      </return-value>
      <parameters>
        <parameter name="base_io_stream" transfer-ownership="none">
          <type name="IOStream"/>
        </parameter>
        <parameter name="certificate" transfer-ownership="none" allow-none="1">
          <type name="TlsCertificate"/>
        </parameter>
      </parameters>
    </function>
    <property name="authentication-mode" writable="1" transfer-ownership="none">
      <type name="TlsAuthenticationMode"/>
    </property>
  </interface>
struct TlsServerConnectionInterface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
};
  <class name="UnixConnection" parent="SocketConnection" glib:type-struct="UnixConnectionClass" glib:type-name="GUnixConnection" glib:get-type="g_unix_connection_get_type">
    <field name="parent_instance">
      <type name="SocketConnection"/>
    </field>
    <field name="priv">
      <type name="UnixConnectionPrivate"/>
    </field>
    <method name="receive_credentials" c:identifier="g_unix_connection_receive_credentials" throws="1">
      <return-value transfer-ownership="full">
        <type name="Credentials"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="receive_credentials_async" c:identifier="g_unix_connection_receive_credentials_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="receive_credentials_finish" c:identifier="g_unix_connection_receive_credentials_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="Credentials"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="receive_fd" c:identifier="g_unix_connection_receive_fd" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_credentials" c:identifier="g_unix_connection_send_credentials" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_credentials_async" c:identifier="g_unix_connection_send_credentials_async">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_credentials_finish" c:identifier="g_unix_connection_send_credentials_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="send_fd" c:identifier="g_unix_connection_send_fd" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="fd" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </method>
  </class>
struct UnixConnectionClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketConnectionClass"/>
  </field>
};
struct UnixConnectionPrivate
{
};
  <class name="UnixCredentialsMessage" parent="SocketControlMessage" glib:type-struct="UnixCredentialsMessageClass" glib:type-name="GUnixCredentialsMessage" glib:get-type="g_unix_credentials_message_get_type">
    <field name="parent_instance">
      <type name="SocketControlMessage"/>
    </field>
    <field name="priv">
      <type name="UnixCredentialsMessagePrivate"/>
    </field>
    <constructor name="new" c:identifier="g_unix_credentials_message_new">
      <return-value transfer-ownership="full">
        <type name="SocketControlMessage"/>
      </return-value>
    </constructor>
    <constructor name="new_with_credentials" c:identifier="g_unix_credentials_message_new_with_credentials">
      <return-value transfer-ownership="full">
        <type name="SocketControlMessage"/>
      </return-value>
      <parameters>
        <parameter name="credentials" transfer-ownership="none">
          <type name="Credentials"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="is_supported" c:identifier="g_unix_credentials_message_is_supported">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </function>
    <method name="get_credentials" c:identifier="g_unix_credentials_message_get_credentials">
      <return-value transfer-ownership="none">
        <type name="Credentials"/>
      </return-value>
    </method>
    <property name="credentials" writable="1" construct-only="1" transfer-ownership="none">
      <type name="Credentials"/>
    </property>
  </class>
struct UnixCredentialsMessageClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketControlMessageClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
};
struct UnixCredentialsMessagePrivate
{
};
  <class name="UnixFDList" parent="GObject.Object" glib:type-struct="UnixFDListClass" glib:type-name="GUnixFDList" glib:get-type="g_unix_fd_list_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="UnixFDListPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_unix_fd_list_new">
      <return-value transfer-ownership="full">
        <type name="UnixFDList"/>
      </return-value>
    </constructor>
    <constructor name="new_from_array" c:identifier="g_unix_fd_list_new_from_array">
      <return-value transfer-ownership="full">
        <type name="UnixFDList"/>
      </return-value>
      <parameters>
        <parameter name="fds" transfer-ownership="none">
          <array length="1">
            <type name="gint32"/>
          </array>
        </parameter>
        <parameter name="n_fds" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="append" c:identifier="g_unix_fd_list_append" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="fd" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="get" c:identifier="g_unix_fd_list_get" throws="1">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
      <parameters>
        <parameter name="index_" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_length" c:identifier="g_unix_fd_list_get_length">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="peek_fds" c:identifier="g_unix_fd_list_peek_fds">
      <return-value transfer-ownership="none">
        <array length="0">
          <type name="gint32"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="steal_fds" c:identifier="g_unix_fd_list_steal_fds">
      <return-value transfer-ownership="full">
        <array length="0">
          <type name="gint32"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
  </class>
struct UnixFDListClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct UnixFDListPrivate
{
};
  <class name="UnixFDMessage" parent="SocketControlMessage" glib:type-struct="UnixFDMessageClass" glib:type-name="GUnixFDMessage" glib:get-type="g_unix_fd_message_get_type">
    <field name="parent_instance">
      <type name="SocketControlMessage"/>
    </field>
    <field name="priv">
      <type name="UnixFDMessagePrivate"/>
    </field>
    <constructor name="new" c:identifier="g_unix_fd_message_new">
      <return-value transfer-ownership="full">
        <type name="SocketControlMessage"/>
      </return-value>
    </constructor>
    <constructor name="new_with_fd_list" c:identifier="g_unix_fd_message_new_with_fd_list">
      <return-value transfer-ownership="full">
        <type name="SocketControlMessage"/>
      </return-value>
      <parameters>
        <parameter name="fd_list" transfer-ownership="none">
          <type name="UnixFDList"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="append_fd" c:identifier="g_unix_fd_message_append_fd" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="fd" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_fd_list" c:identifier="g_unix_fd_message_get_fd_list">
      <return-value transfer-ownership="none">
        <type name="UnixFDList"/>
      </return-value>
    </method>
    <method name="steal_fds" c:identifier="g_unix_fd_message_steal_fds">
      <return-value transfer-ownership="full">
        <array length="0">
          <type name="gint32"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="length" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <property name="fd-list" writable="1" construct-only="1" transfer-ownership="none">
      <type name="UnixFDList"/>
    </property>
  </class>
struct UnixFDMessageClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketControlMessageClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
};
struct UnixFDMessagePrivate
{
};
  <class name="UnixInputStream" parent="InputStream" glib:type-struct="UnixInputStreamClass" glib:type-name="GUnixInputStream" glib:get-type="g_unix_input_stream_get_type">
    <implements name="FileDescriptorBased"/>
    <implements name="PollableInputStream"/>
    <field name="parent_instance">
      <type name="InputStream"/>
    </field>
    <field name="priv">
      <type name="UnixInputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_unix_input_stream_new">
      <return-value transfer-ownership="full">
        <type name="InputStream"/>
      </return-value>
      <parameters>
        <parameter name="fd" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="close_fd" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_close_fd" c:identifier="g_unix_input_stream_get_close_fd">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_fd" c:identifier="g_unix_input_stream_get_fd">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="set_close_fd" c:identifier="g_unix_input_stream_set_close_fd">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="close_fd" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <property name="close-fd" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="fd" writable="1" construct-only="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
  </class>
struct UnixInputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="InputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct UnixInputStreamPrivate
{
};
struct UnixMountEntry
{
};
  <class name="UnixMountMonitor" parent="GObject.Object" glib:type-struct="UnixMountMonitorClass" glib:type-name="GUnixMountMonitor" glib:get-type="g_unix_mount_monitor_get_type">
    <constructor name="new" c:identifier="g_unix_mount_monitor_new">
      <return-value transfer-ownership="full">
        <type name="UnixMountMonitor"/>
      </return-value>
    </constructor>
    <method name="set_rate_limit" c:identifier="g_unix_mount_monitor_set_rate_limit">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="limit_msec" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </method>
    <glib:signal name="mountpoints-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="mounts-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
  </class>
struct UnixMountMonitorClass
{
 glib:is-gtype-struct="1"};
struct UnixMountPoint
{
  <method name="compare" c:identifier="g_unix_mount_point_compare">
    <return-value transfer-ownership="none">
      <type name="gint32"/>
    </return-value>
    <parameters>
      <parameter name="mount2" transfer-ownership="none">
        <type name="UnixMountPoint"/>
      </parameter>
    </parameters>
  </method>
  <method name="free" c:identifier="g_unix_mount_point_free">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </method>
  <method name="get_device_path" c:identifier="g_unix_mount_point_get_device_path">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="get_fs_type" c:identifier="g_unix_mount_point_get_fs_type">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="get_mount_path" c:identifier="g_unix_mount_point_get_mount_path">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="get_options" c:identifier="g_unix_mount_point_get_options">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="guess_can_eject" c:identifier="g_unix_mount_point_guess_can_eject">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
  </method>
  <method name="guess_icon" c:identifier="g_unix_mount_point_guess_icon">
    <return-value transfer-ownership="full">
      <type name="Icon"/>
    </return-value>
  </method>
  <method name="guess_name" c:identifier="g_unix_mount_point_guess_name">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
  </method>
  <method name="is_loopback" c:identifier="g_unix_mount_point_is_loopback">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
  </method>
  <method name="is_readonly" c:identifier="g_unix_mount_point_is_readonly">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
  </method>
  <method name="is_user_mountable" c:identifier="g_unix_mount_point_is_user_mountable">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
  </method>
};
  <class name="UnixOutputStream" parent="OutputStream" glib:type-struct="UnixOutputStreamClass" glib:type-name="GUnixOutputStream" glib:get-type="g_unix_output_stream_get_type">
    <implements name="FileDescriptorBased"/>
    <implements name="PollableOutputStream"/>
    <field name="parent_instance">
      <type name="OutputStream"/>
    </field>
    <field name="priv">
      <type name="UnixOutputStreamPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_unix_output_stream_new">
      <return-value transfer-ownership="full">
        <type name="OutputStream"/>
      </return-value>
      <parameters>
        <parameter name="fd" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="close_fd" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_close_fd" c:identifier="g_unix_output_stream_get_close_fd">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_fd" c:identifier="g_unix_output_stream_get_fd">
      <return-value transfer-ownership="none">
        <type name="gint32"/>
      </return-value>
    </method>
    <method name="set_close_fd" c:identifier="g_unix_output_stream_set_close_fd">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="close_fd" transfer-ownership="none">
          <type name="gboolean"/>
        </parameter>
      </parameters>
    </method>
    <property name="close-fd" writable="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="fd" writable="1" construct-only="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
  </class>
struct UnixOutputStreamClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="OutputStreamClass"/>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
};
struct UnixOutputStreamPrivate
{
};
  <class name="UnixSocketAddress" parent="SocketAddress" glib:type-struct="UnixSocketAddressClass" glib:type-name="GUnixSocketAddress" glib:get-type="g_unix_socket_address_get_type">
    <implements name="SocketConnectable"/>
    <field name="parent_instance">
      <type name="SocketAddress"/>
    </field>
    <field name="priv">
      <type name="UnixSocketAddressPrivate"/>
    </field>
    <constructor name="new" c:identifier="g_unix_socket_address_new">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_abstract" c:identifier="g_unix_socket_address_new_abstract" deprecated="1">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="path_len" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </constructor>
    <constructor name="new_with_type" c:identifier="g_unix_socket_address_new_with_type">
      <return-value transfer-ownership="full">
        <type name="SocketAddress"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <array length="1">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="path_len" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="UnixSocketAddressType"/>
        </parameter>
      </parameters>
    </constructor>
    <function name="abstract_names_supported" c:identifier="g_unix_socket_address_abstract_names_supported">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </function>
    <method name="get_address_type" c:identifier="g_unix_socket_address_get_address_type">
      <return-value transfer-ownership="none">
        <type name="UnixSocketAddressType"/>
      </return-value>
    </method>
    <method name="get_is_abstract" c:identifier="g_unix_socket_address_get_is_abstract" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="get_path" c:identifier="g_unix_socket_address_get_path">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_path_len" c:identifier="g_unix_socket_address_get_path_len">
      <return-value transfer-ownership="none">
        <type name="guint64"/>
      </return-value>
    </method>
    <property name="abstract" writable="1" construct-only="1" transfer-ownership="none">
      <type name="gboolean"/>
    </property>
    <property name="address-type" writable="1" construct-only="1" transfer-ownership="none">
      <type name="UnixSocketAddressType"/>
    </property>
    <property name="path" writable="1" construct-only="1" transfer-ownership="none">
      <type name="utf8"/>
    </property>
    <property name="path-as-array" writable="1" construct-only="1" transfer-ownership="none">
      <array name="GLib.ByteArray">
        <type name="any"/>
      </array>
    </property>
  </class>
struct UnixSocketAddressClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="SocketAddressClass"/>
  </field>
};
struct UnixSocketAddressPrivate
{
};
  <enumeration name="UnixSocketAddressType" glib:type-name="GUnixSocketAddressType" glib:get-type="g_unix_socket_address_type_get_type">
    <member name="invalid" value="0">
      <attribute name="c:identifier" value="G_UNIX_SOCKET_ADDRESS_INVALID"/>
    </member>
    <member name="anonymous" value="1">
      <attribute name="c:identifier" value="G_UNIX_SOCKET_ADDRESS_ANONYMOUS"/>
    </member>
    <member name="path" value="2">
      <attribute name="c:identifier" value="G_UNIX_SOCKET_ADDRESS_PATH"/>
    </member>
    <member name="abstract" value="3">
      <attribute name="c:identifier" value="G_UNIX_SOCKET_ADDRESS_ABSTRACT"/>
    </member>
    <member name="abstract_padded" value="4">
      <attribute name="c:identifier" value="G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED"/>
    </member>
  </enumeration>
  <constant name="VFS_EXTENSION_POINT_NAME" value="gio-vfs">
    <type name="utf8"/>
  </constant>
  <constant name="VOLUME_IDENTIFIER_KIND_CLASS" value="class">
    <type name="utf8"/>
  </constant>
  <constant name="VOLUME_IDENTIFIER_KIND_HAL_UDI" value="hal-udi">
    <type name="utf8"/>
  </constant>
  <constant name="VOLUME_IDENTIFIER_KIND_LABEL" value="label">
    <type name="utf8"/>
  </constant>
  <constant name="VOLUME_IDENTIFIER_KIND_NFS_MOUNT" value="nfs-mount">
    <type name="utf8"/>
  </constant>
  <constant name="VOLUME_IDENTIFIER_KIND_UNIX_DEVICE" value="unix-device">
    <type name="utf8"/>
  </constant>
  <constant name="VOLUME_IDENTIFIER_KIND_UUID" value="uuid">
    <type name="utf8"/>
  </constant>
  <constant name="VOLUME_MONITOR_EXTENSION_POINT_NAME" value="gio-volume-monitor">
    <type name="utf8"/>
  </constant>
  <class name="Vfs" parent="GObject.Object" glib:type-struct="VfsClass" glib:type-name="GVfs" glib:get-type="g_vfs_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <function name="get_default" c:identifier="g_vfs_get_default">
      <return-value transfer-ownership="none">
        <type name="Vfs"/>
      </return-value>
    </function>
    <function name="get_local" c:identifier="g_vfs_get_local">
      <return-value transfer-ownership="none">
        <type name="Vfs"/>
      </return-value>
    </function>
    <method name="get_file_for_path" c:identifier="g_vfs_get_file_for_path">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_file_for_uri" c:identifier="g_vfs_get_file_for_uri">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_supported_uri_schemes" c:identifier="g_vfs_get_supported_uri_schemes">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="is_active" c:identifier="g_vfs_is_active">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="parse_name" c:identifier="g_vfs_parse_name">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="parse_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <virtual-method name="add_writable_namespaces" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <type name="FileAttributeInfoList"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_file_for_path" offset="65535" invoker="get_file_for_path">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_file_for_uri" offset="65535" invoker="get_file_for_uri">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_supported_uri_schemes" offset="65535" invoker="get_supported_uri_schemes">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </virtual-method>
    <virtual-method name="is_active" offset="65535" invoker="is_active">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="local_file_add_info" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="attribute_matcher" transfer-ownership="none">
          <type name="FileAttributeMatcher"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="extra_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="free_extra_data" transfer-ownership="none" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="local_file_moved" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="source" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="dest" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="local_file_removed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="local_file_set_attributes" throws="1" offset="65535">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="parse_name" offset="65535" invoker="parse_name">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="parse_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct VfsClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="is_active">
    <callback name="is_active">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_file_for_path">
    <callback name="get_file_for_path">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_file_for_uri">
    <callback name="get_file_for_uri">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_supported_uri_schemes">
    <callback name="get_supported_uri_schemes">
      <return-value transfer-ownership="none">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="parse_name">
    <callback name="parse_name">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
        <parameter name="parse_name" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="local_file_add_info">
    <callback name="local_file_add_info">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <type name="guint64"/>
        </parameter>
        <parameter name="attribute_matcher" transfer-ownership="none">
          <type name="FileAttributeMatcher"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="extra_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
        <parameter name="free_extra_data" transfer-ownership="none" scope="async">
          <type name="GLib.DestroyNotify"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="add_writable_namespaces">
    <callback name="add_writable_namespaces">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
        <parameter name="list" transfer-ownership="none">
          <type name="FileAttributeInfoList"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="local_file_set_attributes">
    <callback name="local_file_set_attributes">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <type name="FileInfo"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="FileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="local_file_removed">
    <callback name="local_file_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="local_file_moved">
    <callback name="local_file_moved">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="vfs" transfer-ownership="none">
          <type name="Vfs"/>
        </parameter>
        <parameter name="source" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
        <parameter name="dest" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
  <field name="_g_reserved7">
    <type name="any"/>
  </field>
};
  <interface name="Volume" glib:type-name="GVolume" glib:get-type="g_volume_get_type" glib:type-struct="VolumeIface">
    <method name="can_eject" c:identifier="g_volume_can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="can_mount" c:identifier="g_volume_can_mount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <method name="eject" c:identifier="g_volume_eject" deprecated="1">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_finish" c:identifier="g_volume_eject_finish" deprecated="1" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_with_operation" c:identifier="g_volume_eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="eject_with_operation_finish" c:identifier="g_volume_eject_with_operation_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="enumerate_identifiers" c:identifier="g_volume_enumerate_identifiers">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </method>
    <method name="get_activation_root" c:identifier="g_volume_get_activation_root">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </method>
    <method name="get_drive" c:identifier="g_volume_get_drive">
      <return-value transfer-ownership="full">
        <type name="Drive"/>
      </return-value>
    </method>
    <method name="get_icon" c:identifier="g_volume_get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
    </method>
    <method name="get_identifier" c:identifier="g_volume_get_identifier">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_mount" c:identifier="g_volume_get_mount">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
    </method>
    <method name="get_name" c:identifier="g_volume_get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_sort_key" c:identifier="g_volume_get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="get_uuid" c:identifier="g_volume_get_uuid">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </method>
    <method name="mount" c:identifier="g_volume_mount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any"/>
        </parameter>
      </parameters>
    </method>
    <method name="mount_finish" c:identifier="g_volume_mount_finish" throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </method>
    <method name="should_automount" c:identifier="g_volume_should_automount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </method>
    <glib:signal name="changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <glib:signal name="removed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </glib:signal>
    <virtual-method name="can_eject" offset="65535" invoker="can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="can_mount" offset="65535" invoker="can_mount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
    <virtual-method name="changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="eject" offset="65535" invoker="eject">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_finish" throws="1" offset="65535" invoker="eject_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_with_operation" offset="65535" invoker="eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="eject_with_operation_finish" throws="1" offset="65535" invoker="eject_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="enumerate_identifiers" offset="65535" invoker="enumerate_identifiers">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
    </virtual-method>
    <virtual-method name="get_activation_root" offset="65535" invoker="get_activation_root">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_drive" offset="65535" invoker="get_drive">
      <return-value transfer-ownership="full">
        <type name="Drive"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_icon" offset="65535" invoker="get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_identifier" offset="65535" invoker="get_identifier">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_mount" offset="65535" invoker="get_mount">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_name" offset="65535" invoker="get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_sort_key" offset="65535" invoker="get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="get_uuid" offset="65535" invoker="get_uuid">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
    </virtual-method>
    <virtual-method name="mount_finish" throws="1" offset="65535" invoker="mount_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="mount_fn" offset="65535" invoker="mount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="removed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
    </virtual-method>
    <virtual-method name="should_automount" offset="65535" invoker="should_automount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </virtual-method>
  </interface>
struct VolumeIface
{
 glib:is-gtype-struct="1"  <field name="g_iface">
    <type name="GObject.TypeInterface"/>
  </field>
  <field name="changed">
    <callback name="changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="removed">
    <callback name="removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_name">
    <callback name="get_name">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_icon">
    <callback name="get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_uuid">
    <callback name="get_uuid">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_drive">
    <callback name="get_drive">
      <return-value transfer-ownership="full">
        <type name="Drive"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_mount">
    <callback name="get_mount">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_mount">
    <callback name="can_mount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="can_eject">
    <callback name="can_eject">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_fn">
    <callback name="mount_fn">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountMountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_finish">
    <callback name="mount_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject">
    <callback name="eject">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="4">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_finish">
    <callback name="eject_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_identifier">
    <callback name="get_identifier">
      <return-value transfer-ownership="full">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
        <parameter name="kind" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="enumerate_identifiers">
    <callback name="enumerate_identifiers">
      <return-value transfer-ownership="full">
        <array zero-terminated="1">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="should_automount">
    <callback name="should_automount">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_activation_root">
    <callback name="get_activation_root">
      <return-value transfer-ownership="full">
        <type name="File"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_with_operation">
    <callback name="eject_with_operation">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="MountUnmountFlags"/>
        </parameter>
        <parameter name="mount_operation" transfer-ownership="none" allow-none="1">
          <type name="MountOperation"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable"/>
        </parameter>
        <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="5">
          <type name="AsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="5">
          <type name="any"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="eject_with_operation_finish">
    <callback name="eject_with_operation_finish">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <type name="AsyncResult"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_sort_key">
    <callback name="get_sort_key">
      <return-value transfer-ownership="none">
        <type name="utf8"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
};
  <class name="VolumeMonitor" parent="GObject.Object" glib:type-struct="VolumeMonitorClass" glib:type-name="GVolumeMonitor" glib:get-type="g_volume_monitor_get_type">
    <field name="parent_instance">
      <type name="GObject.Object"/>
    </field>
    <field name="priv">
      <type name="any"/>
    </field>
    <function name="adopt_orphan_mount" c:identifier="g_volume_monitor_adopt_orphan_mount" deprecated="1">
      <return-value transfer-ownership="full">
        <type name="Volume"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </function>
    <function name="get" c:identifier="g_volume_monitor_get">
      <return-value transfer-ownership="full">
        <type name="VolumeMonitor"/>
      </return-value>
    </function>
    <method name="get_connected_drives" c:identifier="g_volume_monitor_get_connected_drives">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Drive"/>
        </type>
      </return-value>
    </method>
    <method name="get_mount_for_uuid" c:identifier="g_volume_monitor_get_mount_for_uuid">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="uuid" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_mounts" c:identifier="g_volume_monitor_get_mounts">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Mount"/>
        </type>
      </return-value>
    </method>
    <method name="get_volume_for_uuid" c:identifier="g_volume_monitor_get_volume_for_uuid">
      <return-value transfer-ownership="full">
        <type name="Volume"/>
      </return-value>
      <parameters>
        <parameter name="uuid" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </method>
    <method name="get_volumes" c:identifier="g_volume_monitor_get_volumes">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Volume"/>
        </type>
      </return-value>
    </method>
    <glib:signal name="drive-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="drive-connected" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="drive-disconnected" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="drive-eject-button" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="drive-stop-button" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="mount-added" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="mount-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="mount-pre-unmount" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="mount-removed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="volume-added" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="volume-changed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </glib:signal>
    <glib:signal name="volume-removed" when="CLEANUP">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </glib:signal>
    <virtual-method name="drive_changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="drive_connected" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="drive_disconnected" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="drive_eject_button" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="drive_stop_button" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_connected_drives" offset="65535" invoker="get_connected_drives">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Drive"/>
        </type>
      </return-value>
    </virtual-method>
    <virtual-method name="get_mount_for_uuid" offset="65535" invoker="get_mount_for_uuid">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="uuid" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_mounts" offset="65535" invoker="get_mounts">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Mount"/>
        </type>
      </return-value>
    </virtual-method>
    <virtual-method name="get_volume_for_uuid" offset="65535" invoker="get_volume_for_uuid">
      <return-value transfer-ownership="full">
        <type name="Volume"/>
      </return-value>
      <parameters>
        <parameter name="uuid" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="get_volumes" offset="65535" invoker="get_volumes">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Volume"/>
        </type>
      </return-value>
    </virtual-method>
    <virtual-method name="mount_added" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="mount_changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="mount_pre_unmount" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="mount_removed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="volume_added" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="volume_changed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </virtual-method>
    <virtual-method name="volume_removed" offset="65535">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </virtual-method>
  </class>
struct VolumeMonitorClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
  <field name="volume_added">
    <callback name="volume_added">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="volume_removed">
    <callback name="volume_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="volume_changed">
    <callback name="volume_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="volume" transfer-ownership="none">
          <type name="Volume"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_added">
    <callback name="mount_added">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_removed">
    <callback name="mount_removed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_pre_unmount">
    <callback name="mount_pre_unmount">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="mount_changed">
    <callback name="mount_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="mount" transfer-ownership="none">
          <type name="Mount"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="drive_connected">
    <callback name="drive_connected">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="drive_disconnected">
    <callback name="drive_disconnected">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="drive_changed">
    <callback name="drive_changed">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="is_supported">
    <callback name="is_supported">
      <return-value transfer-ownership="none">
        <type name="gboolean"/>
      </return-value>
    </callback>
  </field>
  <field name="get_connected_drives">
    <callback name="get_connected_drives">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Drive"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_volumes">
    <callback name="get_volumes">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Volume"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_mounts">
    <callback name="get_mounts">
      <return-value transfer-ownership="full">
        <type name="GLib.List">
          <type name="Mount"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_volume_for_uuid">
    <callback name="get_volume_for_uuid">
      <return-value transfer-ownership="full">
        <type name="Volume"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="uuid" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="get_mount_for_uuid">
    <callback name="get_mount_for_uuid">
      <return-value transfer-ownership="full">
        <type name="Mount"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="uuid" transfer-ownership="none">
          <type name="utf8"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="adopt_orphan_mount">
    <type name="any"/>
  </field>
  <field name="drive_eject_button">
    <callback name="drive_eject_button">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="drive_stop_button">
    <callback name="drive_stop_button">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="volume_monitor" transfer-ownership="none">
          <type name="VolumeMonitor"/>
        </parameter>
        <parameter name="drive" transfer-ownership="none">
          <type name="Drive"/>
        </parameter>
      </parameters>
    </callback>
  </field>
  <field name="_g_reserved1">
    <type name="any"/>
  </field>
  <field name="_g_reserved2">
    <type name="any"/>
  </field>
  <field name="_g_reserved3">
    <type name="any"/>
  </field>
  <field name="_g_reserved4">
    <type name="any"/>
  </field>
  <field name="_g_reserved5">
    <type name="any"/>
  </field>
  <field name="_g_reserved6">
    <type name="any"/>
  </field>
};
  <class name="ZlibCompressor" parent="GObject.Object" glib:type-struct="ZlibCompressorClass" glib:type-name="GZlibCompressor" glib:get-type="g_zlib_compressor_get_type">
    <implements name="Converter"/>
    <constructor name="new" c:identifier="g_zlib_compressor_new">
      <return-value transfer-ownership="full">
        <type name="ZlibCompressor"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="ZlibCompressorFormat"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="gint32"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_file_info" c:identifier="g_zlib_compressor_get_file_info">
      <return-value transfer-ownership="none">
        <type name="FileInfo"/>
      </return-value>
    </method>
    <method name="set_file_info" c:identifier="g_zlib_compressor_set_file_info">
      <return-value transfer-ownership="none">
        <type name="none"/>
      </return-value>
      <parameters>
        <parameter name="file_info" transfer-ownership="none" allow-none="1">
          <type name="FileInfo"/>
        </parameter>
      </parameters>
    </method>
    <property name="file-info" writable="1" transfer-ownership="none">
      <type name="FileInfo"/>
    </property>
    <property name="format" writable="1" construct-only="1" transfer-ownership="none">
      <type name="ZlibCompressorFormat"/>
    </property>
    <property name="level" writable="1" construct-only="1" transfer-ownership="none">
      <type name="gint32"/>
    </property>
  </class>
struct ZlibCompressorClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
};
  <enumeration name="ZlibCompressorFormat" glib:type-name="GZlibCompressorFormat" glib:get-type="g_zlib_compressor_format_get_type">
    <member name="zlib" value="0">
      <attribute name="c:identifier" value="G_ZLIB_COMPRESSOR_FORMAT_ZLIB"/>
    </member>
    <member name="gzip" value="1">
      <attribute name="c:identifier" value="G_ZLIB_COMPRESSOR_FORMAT_GZIP"/>
    </member>
    <member name="raw" value="2">
      <attribute name="c:identifier" value="G_ZLIB_COMPRESSOR_FORMAT_RAW"/>
    </member>
  </enumeration>
  <class name="ZlibDecompressor" parent="GObject.Object" glib:type-struct="ZlibDecompressorClass" glib:type-name="GZlibDecompressor" glib:get-type="g_zlib_decompressor_get_type">
    <implements name="Converter"/>
    <constructor name="new" c:identifier="g_zlib_decompressor_new">
      <return-value transfer-ownership="full">
        <type name="ZlibDecompressor"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="ZlibCompressorFormat"/>
        </parameter>
      </parameters>
    </constructor>
    <method name="get_file_info" c:identifier="g_zlib_decompressor_get_file_info">
      <return-value transfer-ownership="none">
        <type name="FileInfo"/>
      </return-value>
    </method>
    <property name="file-info" transfer-ownership="none">
      <type name="FileInfo"/>
    </property>
    <property name="format" writable="1" construct-only="1" transfer-ownership="none">
      <type name="ZlibCompressorFormat"/>
    </property>
  </class>
struct ZlibDecompressorClass
{
 glib:is-gtype-struct="1"  <field name="parent_class">
    <type name="GObject.ObjectClass"/>
  </field>
};
  <function name="app_info_create_from_commandline" c:identifier="g_app_info_create_from_commandline" throws="1">
    <return-value transfer-ownership="full">
      <type name="AppInfo"/>
    </return-value>
    <parameters>
      <parameter name="commandline" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="application_name" transfer-ownership="none" allow-none="1">
        <type name="utf8"/>
      </parameter>
      <parameter name="flags" transfer-ownership="none">
        <type name="AppInfoCreateFlags"/>
      </parameter>
    </parameters>
  </function>
  <function name="app_info_get_all" c:identifier="g_app_info_get_all">
    <return-value transfer-ownership="full">
      <type name="GLib.List">
        <type name="AppInfo"/>
      </type>
    </return-value>
  </function>
  <function name="app_info_get_all_for_type" c:identifier="g_app_info_get_all_for_type">
    <return-value transfer-ownership="full">
      <type name="GLib.List">
        <type name="AppInfo"/>
      </type>
    </return-value>
    <parameters>
      <parameter name="content_type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="app_info_get_default_for_type" c:identifier="g_app_info_get_default_for_type">
    <return-value transfer-ownership="full">
      <type name="AppInfo"/>
    </return-value>
    <parameters>
      <parameter name="content_type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="must_support_uris" transfer-ownership="none">
        <type name="gboolean"/>
      </parameter>
    </parameters>
  </function>
  <function name="app_info_get_default_for_uri_scheme" c:identifier="g_app_info_get_default_for_uri_scheme">
    <return-value transfer-ownership="full">
      <type name="AppInfo"/>
    </return-value>
    <parameters>
      <parameter name="uri_scheme" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="app_info_get_fallback_for_type" c:identifier="g_app_info_get_fallback_for_type">
    <return-value transfer-ownership="full">
      <type name="GLib.List">
        <type name="AppInfo"/>
      </type>
    </return-value>
    <parameters>
      <parameter name="content_type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="app_info_get_recommended_for_type" c:identifier="g_app_info_get_recommended_for_type">
    <return-value transfer-ownership="full">
      <type name="GLib.List">
        <type name="AppInfo"/>
      </type>
    </return-value>
    <parameters>
      <parameter name="content_type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="app_info_launch_default_for_uri" c:identifier="g_app_info_launch_default_for_uri" throws="1">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="uri" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="launch_context" transfer-ownership="none" allow-none="1">
        <type name="AppLaunchContext"/>
      </parameter>
    </parameters>
  </function>
  <function name="app_info_reset_type_associations" c:identifier="g_app_info_reset_type_associations">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="content_type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="async_initable_newv_async" c:identifier="g_async_initable_newv_async">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="object_type" transfer-ownership="none">
        <type name="GType"/>
      </parameter>
      <parameter name="n_parameters" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
      <parameter name="parameters" transfer-ownership="none">
        <type name="GObject.Parameter"/>
      </parameter>
      <parameter name="io_priority" transfer-ownership="none">
        <type name="gint32"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
      <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="6">
        <type name="AsyncReadyCallback"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_get" c:identifier="g_bus_get">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="bus_type" transfer-ownership="none">
        <type name="BusType"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
      <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
        <type name="AsyncReadyCallback"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_get_finish" c:identifier="g_bus_get_finish" throws="1">
    <return-value transfer-ownership="full">
      <type name="DBusConnection"/>
    </return-value>
    <parameters>
      <parameter name="res" transfer-ownership="none">
        <type name="AsyncResult"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_get_sync" c:identifier="g_bus_get_sync" throws="1">
    <return-value transfer-ownership="full">
      <type name="DBusConnection"/>
    </return-value>
    <parameters>
      <parameter name="bus_type" transfer-ownership="none">
        <type name="BusType"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_own_name_on_connection" c:identifier="g_bus_own_name_on_connection_with_closures">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="flags" transfer-ownership="none">
        <type name="BusNameOwnerFlags"/>
      </parameter>
      <parameter name="name_acquired_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
      <parameter name="name_lost_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_own_name" c:identifier="g_bus_own_name_with_closures">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
    <parameters>
      <parameter name="bus_type" transfer-ownership="none">
        <type name="BusType"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="flags" transfer-ownership="none">
        <type name="BusNameOwnerFlags"/>
      </parameter>
      <parameter name="bus_acquired_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
      <parameter name="name_acquired_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
      <parameter name="name_lost_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_unown_name" c:identifier="g_bus_unown_name">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="owner_id" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_unwatch_name" c:identifier="g_bus_unwatch_name">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="watcher_id" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_watch_name_on_connection" c:identifier="g_bus_watch_name_on_connection_with_closures">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
    <parameters>
      <parameter name="connection" transfer-ownership="none">
        <type name="DBusConnection"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="flags" transfer-ownership="none">
        <type name="BusNameWatcherFlags"/>
      </parameter>
      <parameter name="name_appeared_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
      <parameter name="name_vanished_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
    </parameters>
  </function>
  <function name="bus_watch_name" c:identifier="g_bus_watch_name_with_closures">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
    <parameters>
      <parameter name="bus_type" transfer-ownership="none">
        <type name="BusType"/>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="flags" transfer-ownership="none">
        <type name="BusNameWatcherFlags"/>
      </parameter>
      <parameter name="name_appeared_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
      <parameter name="name_vanished_closure" transfer-ownership="none" allow-none="1">
        <type name="GObject.Closure"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_can_be_executable" c:identifier="g_content_type_can_be_executable">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_equals" c:identifier="g_content_type_equals">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="type1" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="type2" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_from_mime_type" c:identifier="g_content_type_from_mime_type">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="mime_type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_get_description" c:identifier="g_content_type_get_description">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_get_icon" c:identifier="g_content_type_get_icon">
    <return-value transfer-ownership="full">
      <type name="Icon"/>
    </return-value>
    <parameters>
      <parameter name="type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_get_mime_type" c:identifier="g_content_type_get_mime_type">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_guess" c:identifier="g_content_type_guess">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="filename" transfer-ownership="none" allow-none="1">
        <type name="utf8"/>
      </parameter>
      <parameter name="data" transfer-ownership="none" allow-none="1">
        <array length="2">
          <type name="guint8"/>
        </array>
      </parameter>
      <parameter name="data_size" transfer-ownership="none">
        <type name="guint64"/>
      </parameter>
      <parameter name="result_uncertain" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
        <type name="gboolean"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_guess_for_tree" c:identifier="g_content_type_guess_for_tree">
    <return-value transfer-ownership="full">
      <array zero-terminated="1">
        <type name="utf8"/>
      </array>
    </return-value>
    <parameters>
      <parameter name="root" transfer-ownership="none">
        <type name="File"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_is_a" c:identifier="g_content_type_is_a">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="supertype" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_type_is_unknown" c:identifier="g_content_type_is_unknown">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="type" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="content_types_get_registered" c:identifier="g_content_types_get_registered">
    <return-value transfer-ownership="full">
      <type name="GLib.List">
        <type name="utf8"/>
      </type>
    </return-value>
  </function>
  <function name="dbus_address_get_for_bus_sync" c:identifier="g_dbus_address_get_for_bus_sync" throws="1">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="bus_type" transfer-ownership="none">
        <type name="BusType"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_address_get_stream" c:identifier="g_dbus_address_get_stream">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="address" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
      <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="3">
        <type name="AsyncReadyCallback"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_address_get_stream_finish" c:identifier="g_dbus_address_get_stream_finish" throws="1">
    <return-value transfer-ownership="full">
      <type name="IOStream"/>
    </return-value>
    <parameters>
      <parameter name="res" transfer-ownership="none">
        <type name="AsyncResult"/>
      </parameter>
      <parameter name="out_guid" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_address_get_stream_sync" c:identifier="g_dbus_address_get_stream_sync" throws="1">
    <return-value transfer-ownership="full">
      <type name="IOStream"/>
    </return-value>
    <parameters>
      <parameter name="address" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="out_guid" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_annotation_info_lookup" c:identifier="g_dbus_annotation_info_lookup">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="annotations" transfer-ownership="none" allow-none="1">
        <array zero-terminated="1">
          <type name="DBusAnnotationInfo"/>
        </array>
      </parameter>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_error_encode_gerror" c:identifier="g_dbus_error_encode_gerror">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="error" transfer-ownership="none">
        <type name="GLib.Error"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_error_get_remote_error" c:identifier="g_dbus_error_get_remote_error">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="error" transfer-ownership="none">
        <type name="GLib.Error"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_error_is_remote_error" c:identifier="g_dbus_error_is_remote_error">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="error" transfer-ownership="none">
        <type name="GLib.Error"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_error_new_for_dbus_error" c:identifier="g_dbus_error_new_for_dbus_error">
    <return-value transfer-ownership="full">
      <type name="GLib.Error"/>
    </return-value>
    <parameters>
      <parameter name="dbus_error_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="dbus_error_message" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_error_quark" c:identifier="g_dbus_error_quark">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
  </function>
  <function name="dbus_error_register_error" c:identifier="g_dbus_error_register_error">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="error_domain" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
      <parameter name="error_code" transfer-ownership="none">
        <type name="gint32"/>
      </parameter>
      <parameter name="dbus_error_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_error_register_error_domain" c:identifier="g_dbus_error_register_error_domain">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="error_domain_quark_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="quark_volatile" transfer-ownership="none">
        <type name="guint64"/>
      </parameter>
      <parameter name="entries" transfer-ownership="none">
        <type name="DBusErrorEntry"/>
      </parameter>
      <parameter name="num_entries" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_error_strip_remote_error" c:identifier="g_dbus_error_strip_remote_error">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="error" transfer-ownership="none">
        <type name="GLib.Error"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_error_unregister_error" c:identifier="g_dbus_error_unregister_error">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="error_domain" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
      <parameter name="error_code" transfer-ownership="none">
        <type name="gint32"/>
      </parameter>
      <parameter name="dbus_error_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_generate_guid" c:identifier="g_dbus_generate_guid">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
  </function>
  <function name="dbus_gvalue_to_gvariant" c:identifier="g_dbus_gvalue_to_gvariant">
    <return-value transfer-ownership="full">
      <type name="GLib.Variant"/>
    </return-value>
    <parameters>
      <parameter name="gvalue" transfer-ownership="none">
        <type name="GObject.Value"/>
      </parameter>
      <parameter name="type" transfer-ownership="none">
        <type name="GLib.VariantType"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_gvariant_to_gvalue" c:identifier="g_dbus_gvariant_to_gvalue">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="value" transfer-ownership="none">
        <type name="GLib.Variant"/>
      </parameter>
      <parameter name="out_gvalue" transfer-ownership="none">
        <type name="GObject.Value"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_is_address" c:identifier="g_dbus_is_address">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="string" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_is_guid" c:identifier="g_dbus_is_guid">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="string" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_is_interface_name" c:identifier="g_dbus_is_interface_name">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="string" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_is_member_name" c:identifier="g_dbus_is_member_name">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="string" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_is_name" c:identifier="g_dbus_is_name">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="string" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_is_supported_address" c:identifier="g_dbus_is_supported_address" throws="1">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="string" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="dbus_is_unique_name" c:identifier="g_dbus_is_unique_name">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="string" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="file_new_for_commandline_arg" c:identifier="g_file_new_for_commandline_arg">
    <return-value transfer-ownership="full">
      <type name="File"/>
    </return-value>
    <parameters>
      <parameter name="arg" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="file_new_for_path" c:identifier="g_file_new_for_path">
    <return-value transfer-ownership="full">
      <type name="File"/>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="file_new_for_uri" c:identifier="g_file_new_for_uri">
    <return-value transfer-ownership="full">
      <type name="File"/>
    </return-value>
    <parameters>
      <parameter name="uri" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="file_new_tmp" c:identifier="g_file_new_tmp" throws="1">
    <return-value transfer-ownership="full">
      <type name="File"/>
    </return-value>
    <parameters>
      <parameter name="tmpl" transfer-ownership="none" allow-none="1">
        <type name="filename"/>
      </parameter>
      <parameter name="iostream" transfer-ownership="full" direction="out" caller-allocates="0">
        <type name="FileIOStream"/>
      </parameter>
    </parameters>
  </function>
  <function name="file_parse_name" c:identifier="g_file_parse_name">
    <return-value transfer-ownership="full">
      <type name="File"/>
    </return-value>
    <parameters>
      <parameter name="parse_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="icon_hash" c:identifier="g_icon_hash">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
    <parameters>
      <parameter name="icon" transfer-ownership="none">
        <type name="any"/>
      </parameter>
    </parameters>
  </function>
  <function name="icon_new_for_string" c:identifier="g_icon_new_for_string" throws="1">
    <return-value transfer-ownership="full">
      <type name="Icon"/>
    </return-value>
    <parameters>
      <parameter name="str" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="initable_newv" c:identifier="g_initable_newv" throws="1">
    <return-value transfer-ownership="full">
      <type name="any"/>
    </return-value>
    <parameters>
      <parameter name="object_type" transfer-ownership="none">
        <type name="GType"/>
      </parameter>
      <parameter name="n_parameters" transfer-ownership="none">
        <type name="guint32"/>
      </parameter>
      <parameter name="parameters" transfer-ownership="none">
        <array length="1">
          <type name="GObject.Parameter"/>
        </array>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_error_from_errno" c:identifier="g_io_error_from_errno">
    <return-value transfer-ownership="none">
      <type name="IOErrorEnum"/>
    </return-value>
    <parameters>
      <parameter name="err_no" transfer-ownership="none">
        <type name="gint32"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_error_quark" c:identifier="g_io_error_quark">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
  </function>
  <function name="io_extension_point_implement" c:identifier="g_io_extension_point_implement">
    <return-value transfer-ownership="none">
      <type name="IOExtension"/>
    </return-value>
    <parameters>
      <parameter name="extension_point_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="type" transfer-ownership="none">
        <type name="GType"/>
      </parameter>
      <parameter name="extension_name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="priority" transfer-ownership="none">
        <type name="gint32"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_extension_point_lookup" c:identifier="g_io_extension_point_lookup">
    <return-value transfer-ownership="none">
      <type name="IOExtensionPoint"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_extension_point_register" c:identifier="g_io_extension_point_register">
    <return-value transfer-ownership="none">
      <type name="IOExtensionPoint"/>
    </return-value>
    <parameters>
      <parameter name="name" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_modules_load_all_in_directory" c:identifier="g_io_modules_load_all_in_directory">
    <return-value transfer-ownership="full">
      <type name="GLib.List">
        <type name="IOModule"/>
      </type>
    </return-value>
    <parameters>
      <parameter name="dirname" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_modules_load_all_in_directory_with_scope" c:identifier="g_io_modules_load_all_in_directory_with_scope">
    <return-value transfer-ownership="full">
      <type name="GLib.List">
        <type name="IOModule"/>
      </type>
    </return-value>
    <parameters>
      <parameter name="dirname" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="scope" transfer-ownership="none">
        <type name="IOModuleScope"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_modules_scan_all_in_directory" c:identifier="g_io_modules_scan_all_in_directory">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="dirname" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_modules_scan_all_in_directory_with_scope" c:identifier="g_io_modules_scan_all_in_directory_with_scope">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="dirname" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="scope" transfer-ownership="none">
        <type name="IOModuleScope"/>
      </parameter>
    </parameters>
  </function>
  <function name="io_scheduler_cancel_all_jobs" c:identifier="g_io_scheduler_cancel_all_jobs">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
  </function>
  <function name="io_scheduler_push_job" c:identifier="g_io_scheduler_push_job">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="job_func" transfer-ownership="none" scope="notified" closure="1" destroy="2">
        <type name="IOSchedulerJobFunc"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
      <parameter name="notify" transfer-ownership="none" allow-none="1" scope="async">
        <type name="GLib.DestroyNotify"/>
      </parameter>
      <parameter name="io_priority" transfer-ownership="none">
        <type name="gint32"/>
      </parameter>
      <parameter name="cancellable" transfer-ownership="none" allow-none="1">
        <type name="Cancellable"/>
      </parameter>
    </parameters>
  </function>
  <function name="network_monitor_get_default" c:identifier="g_network_monitor_get_default">
    <return-value transfer-ownership="none">
      <type name="NetworkMonitor"/>
    </return-value>
  </function>
  <function name="pollable_source_new" c:identifier="g_pollable_source_new">
    <return-value transfer-ownership="full">
      <type name="GLib.Source"/>
    </return-value>
    <parameters>
      <parameter name="pollable_stream" transfer-ownership="none">
        <type name="GObject.Object"/>
      </parameter>
    </parameters>
  </function>
  <function name="proxy_get_default_for_protocol" c:identifier="g_proxy_get_default_for_protocol">
    <return-value transfer-ownership="full">
      <type name="Proxy"/>
    </return-value>
    <parameters>
      <parameter name="protocol" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="proxy_resolver_get_default" c:identifier="g_proxy_resolver_get_default">
    <return-value transfer-ownership="none">
      <type name="ProxyResolver"/>
    </return-value>
  </function>
  <function name="resolver_error_quark" c:identifier="g_resolver_error_quark">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
  </function>
  <function name="resource_error_quark" c:identifier="g_resource_error_quark">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
  </function>
  <function name="resource_load" c:identifier="g_resource_load" throws="1">
    <return-value transfer-ownership="full">
      <type name="Resource"/>
    </return-value>
    <parameters>
      <parameter name="filename" transfer-ownership="none">
        <type name="filename"/>
      </parameter>
    </parameters>
  </function>
  <function name="resources_enumerate_children" c:identifier="g_resources_enumerate_children" throws="1">
    <return-value transfer-ownership="full">
      <array zero-terminated="1">
        <type name="utf8"/>
      </array>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="lookup_flags" transfer-ownership="none">
        <type name="ResourceLookupFlags"/>
      </parameter>
    </parameters>
  </function>
  <function name="resources_get_info" c:identifier="g_resources_get_info" throws="1">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="lookup_flags" transfer-ownership="none">
        <type name="ResourceLookupFlags"/>
      </parameter>
      <parameter name="size" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
        <type name="guint64"/>
      </parameter>
      <parameter name="flags" transfer-ownership="full" direction="out" caller-allocates="0" allow-none="1">
        <type name="guint32"/>
      </parameter>
    </parameters>
  </function>
  <function name="resources_lookup_data" c:identifier="g_resources_lookup_data" throws="1">
    <return-value transfer-ownership="full">
      <type name="GLib.Bytes"/>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="lookup_flags" transfer-ownership="none">
        <type name="ResourceLookupFlags"/>
      </parameter>
    </parameters>
  </function>
  <function name="resources_open_stream" c:identifier="g_resources_open_stream" throws="1">
    <return-value transfer-ownership="full">
      <type name="InputStream"/>
    </return-value>
    <parameters>
      <parameter name="path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
      <parameter name="lookup_flags" transfer-ownership="none">
        <type name="ResourceLookupFlags"/>
      </parameter>
    </parameters>
  </function>
  <function name="settings_schema_source_get_default" c:identifier="g_settings_schema_source_get_default">
    <return-value transfer-ownership="none">
      <type name="SettingsSchemaSource"/>
    </return-value>
  </function>
  <function name="simple_async_report_gerror_in_idle" c:identifier="g_simple_async_report_gerror_in_idle">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="object" transfer-ownership="none" allow-none="1">
        <type name="GObject.Object"/>
      </parameter>
      <parameter name="callback" transfer-ownership="none" allow-none="1" scope="async" closure="2">
        <type name="AsyncReadyCallback"/>
      </parameter>
      <parameter name="user_data" transfer-ownership="none">
        <type name="any"/>
      </parameter>
      <parameter name="error" transfer-ownership="none">
        <type name="GLib.Error"/>
      </parameter>
    </parameters>
  </function>
  <function name="tls_backend_get_default" c:identifier="g_tls_backend_get_default">
    <return-value transfer-ownership="none">
      <type name="TlsBackend"/>
    </return-value>
  </function>
  <function name="tls_client_connection_new" c:identifier="g_tls_client_connection_new" throws="1">
    <return-value transfer-ownership="full">
      <type name="TlsClientConnection"/>
    </return-value>
    <parameters>
      <parameter name="base_io_stream" transfer-ownership="none">
        <type name="IOStream"/>
      </parameter>
      <parameter name="server_identity" transfer-ownership="none" allow-none="1">
        <type name="SocketConnectable"/>
      </parameter>
    </parameters>
  </function>
  <function name="tls_error_quark" c:identifier="g_tls_error_quark">
    <return-value transfer-ownership="none">
      <type name="guint32"/>
    </return-value>
  </function>
  <function name="tls_file_database_new" c:identifier="g_tls_file_database_new" throws="1">
    <return-value transfer-ownership="full">
      <type name="TlsFileDatabase"/>
    </return-value>
    <parameters>
      <parameter name="anchors" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="tls_server_connection_new" c:identifier="g_tls_server_connection_new" throws="1">
    <return-value transfer-ownership="full">
      <type name="TlsServerConnection"/>
    </return-value>
    <parameters>
      <parameter name="base_io_stream" transfer-ownership="none">
        <type name="IOStream"/>
      </parameter>
      <parameter name="certificate" transfer-ownership="none" allow-none="1">
        <type name="TlsCertificate"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_is_mount_path_system_internal" c:identifier="g_unix_is_mount_path_system_internal">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="mount_path" transfer-ownership="none">
        <type name="utf8"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_compare" c:identifier="g_unix_mount_compare">
    <return-value transfer-ownership="none">
      <type name="gint32"/>
    </return-value>
    <parameters>
      <parameter name="mount1" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
      <parameter name="mount2" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_free" c:identifier="g_unix_mount_free">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_get_device_path" c:identifier="g_unix_mount_get_device_path">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_get_fs_type" c:identifier="g_unix_mount_get_fs_type">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_get_mount_path" c:identifier="g_unix_mount_get_mount_path">
    <return-value transfer-ownership="none">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_guess_can_eject" c:identifier="g_unix_mount_guess_can_eject">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_guess_icon" c:identifier="g_unix_mount_guess_icon">
    <return-value transfer-ownership="full">
      <type name="Icon"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_guess_name" c:identifier="g_unix_mount_guess_name">
    <return-value transfer-ownership="full">
      <type name="utf8"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_guess_should_display" c:identifier="g_unix_mount_guess_should_display">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_is_readonly" c:identifier="g_unix_mount_is_readonly">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_is_system_internal" c:identifier="g_unix_mount_is_system_internal">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="mount_entry" transfer-ownership="none">
        <type name="UnixMountEntry"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mount_points_changed_since" c:identifier="g_unix_mount_points_changed_since">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="time" transfer-ownership="none">
        <type name="guint64"/>
      </parameter>
    </parameters>
  </function>
  <function name="unix_mounts_changed_since" c:identifier="g_unix_mounts_changed_since">
    <return-value transfer-ownership="none">
      <type name="gboolean"/>
    </return-value>
    <parameters>
      <parameter name="time" transfer-ownership="none">
        <type name="guint64"/>
      </parameter>
    </parameters>
  </function>
} // namespace Gio
</repository>
